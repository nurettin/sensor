<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="22:SendingAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2add0809bd50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2add07ee0ba8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2add07ee0ba8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2add08093278"/></to>
    </wire>
    <wire loc="23:SendingAppC.nc">
      <from><interface-ref name="AccelX" scoped="" ref="0x2add0812bd48"/></from>
      <to><interface-ref name="AccelX" scoped="" ref="0x2add0938c508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AccelX" scoped="" ref="0x2add0938c508"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099cb498"/></to>
    </wire>
    <wire loc="24:SendingAppC.nc">
      <from><interface-ref name="AccelY" scoped="" ref="0x2add0811d4b8"/></from>
      <to><interface-ref name="AccelY" scoped="" ref="0x2add0938bb78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AccelY" scoped="" ref="0x2add0938bb78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099c98d8"/></to>
    </wire>
    <wire loc="25:SendingAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2add080fe178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add08e0e8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2add08e0e8d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add096fb718"/></to>
    </wire>
    <wire loc="26:SendingAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add081058a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08e0c268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add08e0c268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add096f9020"/></to>
    </wire>
    <wire loc="27:SendingAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2add0811e6d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add081ee248"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add081ee248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add0821a020"/></to>
    </wire>
    <wire loc="28:SendingAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add080a6760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0813d648"/></to>
    </wire>
    <wire loc="29:SendingAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2add08110578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add08e09ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add08e09ca8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:SendingAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2add0812d0d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add08e0d578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2add08e0d578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add096fa3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09ca8cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09c94628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09c0ecf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09b39b20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09af5408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09ab2520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09a32520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09a129f8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08d2d8a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08cc59e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08c9dcd8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08c75da0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08b099e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08a42ad8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add0894f808"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add0836c7d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add0984fbd0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add0873d438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add082d12b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2add080938b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2add07dcdb30"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2add07dcdb30"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2add07ea2c00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2add08092398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add07ee88e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add07ee88e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add07eed020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2add08092a60"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2add07ee6508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08ec3d40"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2add07ee6508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add084debc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add07ef0790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add08063650"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2add07eedd88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08063020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2add07eed6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add081622d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2add07eed6c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2add07eef680"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2add07eef680"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2add07efd0e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2add07eefd10"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2add07ee6508"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2add07f04388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2add07f09e00"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2add07f09e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07f93740"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2add07efc4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2add07eefd10"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2add07f43968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add08023970"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2add07f1d4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07fb0020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07fb0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09547710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2add07f314d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07fc4d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07fc4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095a9710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2add07f381a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07fd85b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07fd85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09616710"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2add07f141a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07f90a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07f90a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0940f970"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2add07f3be00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07fdb2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07fdb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0961c710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2add07f124d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07f9abd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07f9abd0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094826a8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2add07f15658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07fac740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07fac740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094dd710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2add07f2a968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07fbf430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07fbf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0953d710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2add07f2e968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07fd1120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07fd1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095a0710"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2add07f0c968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07f862a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07f862a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0941e970"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2add07f0e968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07f95020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07f95020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09478710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2add07f22af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07fa9bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07fa9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094d4710"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2add07f27e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07fbc8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07fbc8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09534710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2add07f35658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07fd5a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07fd5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0960c710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2add07f3f348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add08029020"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2add07f331a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07fc6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07fc6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095b0710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07f93740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09415970"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2add07f19020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07fa4430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07fa4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0946f710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2add07f41020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0801fab0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2add07f17348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07fae500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07fae500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094e46a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2add07f2c658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07fc1120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07fc1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09544710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2add07f30658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07fc3e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07fc3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095a6710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2add07f37348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07fd7740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07fd7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09612710"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2add07f13348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07f8fbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07f8fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0940c970"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2add07f11658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07f99d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07f99d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0947f710"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2add07f247e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07fab8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07fab8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094da710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2add07f29af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07fbe5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07fbe5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0953a710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2add07f2daf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07fd02a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07fd02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0959d710"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2add07f0baf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07f85430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07f85430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0941b970"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2add07f1caf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07fa6120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07fa6120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09475710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2add07f21c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07fa8d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07fa8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094d1710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2add07f447e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07fd4bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07fd4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09609710"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2add07f1e020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07fb2e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07fb2e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0954a6a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2add07f32348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07fc5bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07fc5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095ad710"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2add07f39020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07fd9430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07fd9430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09619710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2add07f3e4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add08038180"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2add07f07020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07f918c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07f918c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09412970"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2add07f181a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07fa35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07fa35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0946c710"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2add07f3cc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07fdc1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07fdc1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0961f6a8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2add07f164d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2add07fad5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2add07fad5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094e1710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2add07f2b7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07fc02a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07fc02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09540710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2add07f2f7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07fd2020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07fd2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095a3710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2add07f364d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07fd68c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07fd68c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0960f710"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2add07eff7d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07f871e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07f871e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add093b6970"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2add07f107e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2add07f97e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2add07f97e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0947b710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2add07f23968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2add07faaa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2add07faaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094d7710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2add07f28c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2add07fbd740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2add07fbd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09537710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2add07f401a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add0802ec38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2add07f25020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2add07fc7930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2add07fc7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add095b36a8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2add07f20e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2add07fa7e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2add07fa7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add094ce710"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2add07f0ac78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2add07f945b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2add07f945b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09418970"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2add07f1be00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2add07fa52a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2add07fa52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2add09472710"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07ea1b08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2add07e9f020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2add07dd7dc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2add07ec32b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2add083e5b78"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add081622d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add0813d080"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2add08154ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2add0813ed18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2add0813ed18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2add07f0baf0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2add08153e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2add08164020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2add08164020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2add07f0c968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2add08151020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2add081631b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2add081631b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2add07eff7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x2add096fb718"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add096efa80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x2add096fa3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add081ebe70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add096f9020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08201aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2add08e0b8c8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2add096f85b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x2add096f85b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add081fe1a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2add081ebe70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add082168c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add08201aa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08217340"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add081fe1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add08213e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x2add096ee760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add081a34f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add096ed3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08201aa8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add081a34f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add081f7920"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2add081f66f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add081ed208"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2add081ed208"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add08219020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add081f53f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08201aa8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2add081f4a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add081ebe70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x2add081f3780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x2add081f2020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add0821a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add082354d8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2add08219020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2add08d84868"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2add081eb898"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2add08218d10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2add08218d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2add08d81628"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2add082168c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2add08d7f2a8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add081fc020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ab66b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ab66b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ae6510"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2add0821e848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2add0822de10"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2add0822de10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2add082427c0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08200ce0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add082181c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add082181c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08d83ab0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add08213e40"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add082437f0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2add08217340"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2add08d81c18"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add0820ee48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add08ab2670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add08ab2670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add08ae2478"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add082354d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add08d21020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2add0822d020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2add08d7d020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2add0824e7d8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2add08d7e400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08213020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add082449a0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add082449a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2add082427c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2add08d22468"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add082437f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2add08ab99d8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2add08236c70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2add082412d0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2add082412d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2add08d57768"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08229250"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08242178"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08242178"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08ab7c70"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2add08d75388"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08245620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08d7c020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2add08249690"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2add08249690"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2add08ceac30"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08d7ccc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2add08244388"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2add08244388"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2add08ce9998"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add08d775c0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add089192b8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08d7b368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08aad918"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08d7a188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ae7310"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2add08d7a928"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2add082c5020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2add082c5020"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2add082ee638"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2add08d76390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2add08253678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2add08253678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2add08269948"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add08d74020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add08d21020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2add08d66020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add0824a298"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add08ceb938"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add08ceb938"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2add08ce24b8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2add08ceac30"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2add08ce0828"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2add08d22468"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2add08d65418"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08249020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08cea5c0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08cea5c0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2add08ce01b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2add08ab99d8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2add08ae8850"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add08245620"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08cecd10"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add08cecd10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08ce36f8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2add08ce9998"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2add08cdf688"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2add08d57768"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2add08d54ba8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08ab7c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08ae7ae8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2add08d66020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add082556d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add082556d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add0824f140"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08ce8718"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add08ca5980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add08ca5980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add08c9d0f0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08ca26b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add08d24ad0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add08d24ad0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2add08d55528"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08d55528"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add08d231f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add08d231f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2add08d689d0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08d689d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add082542d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2add082542d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add0824fbe0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08ce80c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08d23df0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08d23df0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2add08d677f0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08d677f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08ca3b10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08ca3b10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08cc9d18"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08cca918"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08253020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08253020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08a44de8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2add08a44de8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2add08a3e2f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add08268798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add082c9a48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add082c9a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add082d18e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2add08260a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2add082c4bc0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2add082c4bc0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2add082ec318"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2add0825d500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2add0893c7c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2add0825d500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2add08a48b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2add08a48b40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2add08a3f148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2add0893c7c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2add0894fe48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2add08273cc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2add08939020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2add08939020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2add0894e6d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2add08265a70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2add08939c58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2add08939c58"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2add0894d4b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08270c58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add082845f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2add0826fd58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2add08c76900"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2add08c76900"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2add08c6f690"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2add0827f768"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08c78c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2add08c78c68"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08741790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add08271518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2add0827a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2add0827c120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2add0827d298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2add082d6020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2add082eb658"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2add082e9020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2add083891c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2add083891c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add083839e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2add082fd020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2add085dfde0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2add085dfde0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2add07f124d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2add082fc1b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2add085db338"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2add085db338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2add07f141a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2add082fb378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2add085d9648"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2add085d9648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2add07f07020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2add082f5b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2add085cd3f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2add085cd3f0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2add08663cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2add083031c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add088ab280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add088ab280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2add08302460"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2add088a8a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2add088a8a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add08302b38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2add088a7cd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add088a7cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add08304aa0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2add088a9de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add088a9de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add083043c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2add088a6368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add088a6368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add08307678"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2add088d5838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add088d5838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add082f4020"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2add088d37c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add088d37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add082f4890"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2add088d2020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add088d2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add0830a158"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088dadd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088dadd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add0830a9e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088d95c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088d95c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2add082f8118"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2add088cd7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2add088cd7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add083063c0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2add088d7c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add088d7c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2add08306c20"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2add088d9d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2add088d9d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2add082ff020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add088f3248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add088f3248"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2add08301020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add089071a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add089071a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add082f01b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add089192b8"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2add08314ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2add08316c30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add0836c7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add085b9928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2add085b9928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add085bfa58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2add083839e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add09777270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2add09777270"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add0976b3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2add09765860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add09771670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2add09771670"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add0975cbc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2add09767648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add0854ed70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2add0854ed70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add085880e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2add09758c18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add083a3680"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add083a3680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add0843be08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2add09753c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2add083ad598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2add083b87d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2add08457020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2add0839e108"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2add08456680"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2add083ad598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2add08452e60"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2add083ad598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2add0844d2b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2add083ad598"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2add08449698"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2add08469a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2add083de0c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2add083de0c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2add083ea888"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2add083d0900"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2add083e43d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2add083dd0a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2add083e9980"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add083c2398"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add083ef880"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add084dd3f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add083a3680"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2add085852b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add0854dad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2add0854dad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add08545a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add0855bb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add083a3680"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2add085dd020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2add07f181a0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2add085dc198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2add07f2e968"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2add0838ac88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2add07f28c78"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2add085da4b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2add07f2a968"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2add085f4700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2add085f2818"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2add085cc020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2add08603060"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2add085e1400"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2add0839e108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2add08603b10"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2add08614b38"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2add08614b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add08672cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2add0868c8e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2add0838ac88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2add08619b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add0865bcf8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2add08616b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add0864e180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2add08613b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add0866d9d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2add08618b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add086567e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2add08615b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add08675020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2add0861cb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add08645258"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2add08617b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2add086523e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add0865d060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2add0860c850"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add0865ab10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2add0860e020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add086555f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2add0860e758"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add086512e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2add0860d020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add0864c020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2add0860d758"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add08675de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2add0860b020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add08671b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2add0860b758"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2add0866c908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2add0860a020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2add08689278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2add088a8438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add088d47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2add088d3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add088c97c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x2add088cb7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add088a76b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add088cc7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add088d8cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2add088d0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add088abe78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086ca4e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add088a5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2add088a5638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2add088a5d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add088cb020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2add088d8528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add088c9020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x2add088ca020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2add088d07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2add088cc020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2add088d27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add088c7020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2add088a97d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2add088da638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2add088d74f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add088d4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add088db3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2add088da020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2add088cd020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add088a6980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add088ce7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x2add088ca7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2add088ce020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2add088a70a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2add088d17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2add088d1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2add088db9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add088c60a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086c84d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086c6680"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086c53c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086c9300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086c41c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2add086c20e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08716978"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2add08716978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08741790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2add086c48e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08896020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08896020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08873870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2add086c0470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2add08896c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x2add08896c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2add08751a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2add086e6860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2add088942a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2add088942a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2add08747ba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add086c2e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2add086e3b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2add08741790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add0873c020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2add08747ba0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2add08772020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2add08751a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2add08774d88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2add08897960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08751400"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add08751400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add087747a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x2add088a4700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0874d978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x2add088a34a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2add07f124d0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2add087470d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2add08773428"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add0874d978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08772c88"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2add08784208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0887b200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add0887b200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0984c100"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add087805d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0887a760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0887a760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0984b578"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2add0876f020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2add087c7020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2add087c7020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2add087c4dc0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2add08780d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2add07ec6240"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2add08790830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2add087ea350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2add07ec6240"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2add087edc70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2add07f124d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2add087f0de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2add07f11658"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2add087ec020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2add07f107e0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2add087eb190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2add07f0e968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add0887a020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add0984cdf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add0984be18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08879020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add0984a5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2add0984e2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09849100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add088e7c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2add088f1438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088ebdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add088e57c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2add088e4020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add0890f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x2add089127c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add088f06b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add088dd7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2add088ead60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add088e8cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2add088e0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add088e47c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add088f3e40"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add088ed020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2add088ed638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2add088edd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08912020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add088ee368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2add088e8528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088ea5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add088f2db0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add0890f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x2add08910020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2add088e07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2add088dd020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2add088e37c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add0890e020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2add088f2798"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2add088eb638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2add088e74f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add088e3020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add088e6838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2add088f1a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add088e5020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add088ec3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2add088eb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2add088de7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2add088de020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add088ee980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add088df7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x2add089107c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2add088df020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2add088f00a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2add088e17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add088f0cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2add088e1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2add088ec9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add0890d0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add088fbc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2add089043a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088fedd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add088f97c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2add0892e020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add089247c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x2add089267c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add08903638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add089277c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2add088fdd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add088fccc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2add0892b020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add0892e7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08907da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08901020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2add08901638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2add08901d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08926020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add089022e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2add088fc528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088fd5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add08906d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add08924020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x2add08925020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2add0892b7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2add08927020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2add0892d7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add08923020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2add08906748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2add088fe638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2add088fb4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add0892d020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add088fa838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2add089049b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add088f9020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add089003a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2add088fe020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2add089287c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2add08928020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08902900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add0892a7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x2add089257c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2add0892a020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2add08903020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2add0892c7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add08903c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2add0892c020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2add089009b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add089220a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2add08935840"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2add08984428"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2add08937020"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2add08984b70"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2add08983648"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2add083891c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2add089784f0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2add0838ac88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2add08972800"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2add085dfde0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2add08970988"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2add085da4b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2add08979858"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2add085f4700"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2add0896fb58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add089f8cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add089f8cb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add0896e960"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08a32948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08a32948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2add0896b1b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2add08a312e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2add08a312e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2add0896b880"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2add08a2fc50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2add08a2fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add0896a020"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2add08a2e2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add08a2e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add0896a710"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08a2dc50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08a2dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add0896c938"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2add08a27a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add08a27a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add0896d390"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2add08a15020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add08a15020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add0896c0c8"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add08a1b470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add08a1b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add0896ae10"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2add08a282e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add08a282e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add089a0020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2add08a25c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add08a25c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add089a08a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2add08a23470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add08a23470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2add089698f8"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2add08a2a678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2add08a2a678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add0899d208"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2add08a19c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add08a19c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2add0899f130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2add08a1a470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x2add08a1a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2add0899f960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2add08a1ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x2add08a1ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2add089981b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2add08a444b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2add08a444b8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2add08a3f930"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add0897f628"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add0897e4d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2add0897d020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ab66b8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08973c98"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08aae190"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08aae190"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08ade020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add08998ad0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add08a26a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2add08a2f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add08a29a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2add08a23c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add08a18470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2add08a28a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2add08a20c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add08a22470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2add08a2c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2add08a2ca00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08a1bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add08a2d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2add08a272e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add08a31900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2add08a1f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2add08a1cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2add08a21470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add08a18c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2add08a292e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2add08a262e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add08a22c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add08a25470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2add08a2f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add08a2a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2add08a2ac90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2add08a1c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2add08a1dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08a2d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add08a1d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x2add08a19470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2add08a1fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2add08a20470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add08a2e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2add08a21c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2add08a43578"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2add08a3ea48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2add08a660c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2add08a3d120"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2add085dfde0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2add08a3c378"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2add085dd020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2add08a3b508"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2add085dc198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2add08a3a720"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2add085cc020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2add08a393b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08c2ecc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08c2ecc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add08a38100"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2add08c57c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2add08c57c10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08a37510"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08c6d638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08c6d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2add08a38de8"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2add08c6b2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x2add08c6b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08a37c68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08a35af8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2add08a6e1e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ab66b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2add08a34328"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2add082c5020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add08a6a520"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2add08c64c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2add08c64c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add08a6ada8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2add08c63470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2add08c63470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add08a6cdb8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2add08c6a060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2add08c6a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add08a686f0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2add08c57470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2add08c57470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2add08a69650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2add08c5a470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x2add08c5a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2add08a69e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2add08c5ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="KEY1" scoped="" ref="0x2add08c5ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08a67020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08c5bc10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08c5bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2add08a67870"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2add08c2c2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x2add08c2c2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2add08a5a3f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2add08b0d330"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add0854ed70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2add08adae38"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2add08b16128"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2add08adb0f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2add08b408a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2add08b408a8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2add08c0cc38"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2add08b45728"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add08c190c8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add08b099e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08b3a020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add08b3a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08b8c7d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2add08c135a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add08be1290"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2add08bdc648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2add08b3a998"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2add08b3a998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add08b8b020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2add08c0be48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2add08b36c80"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2add08b36c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add08b87128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2add08b87128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2add0990dca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2add08b8c7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add09911398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2add08b8b020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2add09911b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add0990a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add083c2398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2add09906e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2add083de0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2add09905d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2add083dd0a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2add09901db0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2add083d0900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2add08bd85e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2add08c0e618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add08c46420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08b45728"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2add08c65a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x2add08c2b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2add08c69a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x2add08c63c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2add08c6e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add08c5b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x2add08c68a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2add08c67a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x2add08c60c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2add08c62470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08c2d948"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08c6dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2add08c6ba00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2add08c6d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2add08c672e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2add08c682e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2add08c2c900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2add08c59c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x2add08c5e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2add08c5cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2add08c61470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x2add08c692e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2add08c652e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2add08c62c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2add08c64470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x2add08c2b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x2add08c6ac90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x2add08c5c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2add08c5dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add08c5d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x2add08c59470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2add08c5ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x2add08c2bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x2add08c60470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2add08c6e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2add08c61c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x2add08c6a678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2add08c55020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2add08c738d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2add08c70678"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2add08c7aa58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2add08c75da0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08c9c420"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2add08ca26b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2add08c9b080"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08c9e0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2add08c9e0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08741790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2add08c9be00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2add08c76900"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08c9a620"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2add08cca210"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2add08cc5418"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08cc4128"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2add08cca918"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08cc4768"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2add08cdfd58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2add08ce8718"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2add08cdea30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2add08ce80c8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2add08cdd080"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08cdde68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2add08cdc6b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2add08d2de80"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2add08d03020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2add08d21b28"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08d632a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x2add08d632a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2add08741790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add08d519e8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add082437f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Light" scoped="" ref="0x2add093906c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099c6d08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099c6d08"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add090d64c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099cb498"/></from>
      <to><interface-ref name="ReadX" scoped="" ref="0x2add0901b328"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sounder" scoped="" ref="0x2add09393230"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2add08e37240"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x2add08e37240"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x2add08e34020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MagX" scoped="" ref="0x2add09389228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099bd6c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099bd6c0"/></from>
      <to><interface-ref name="MagX" scoped="" ref="0x2add092fc690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Microphone" scoped="" ref="0x2add0938fe60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099c1618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099c1618"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09133cb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099c98d8"/></from>
      <to><interface-ref name="ReadY" scoped="" ref="0x2add09019020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Vref" scoped="" ref="0x2add09393910"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099cd020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099cd020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099a97f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temp" scoped="" ref="0x2add09391020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099c31c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099c31c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add0914c928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MagY" scoped="" ref="0x2add09388898"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add099b9998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099b9998"/></from>
      <to><interface-ref name="MagY" scoped="" ref="0x2add092fa4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add08e34798"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add08e36e68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add08e36e68"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x2add08e2f7c8"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x2add08e6a180"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2add08e6a180"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2add07f15658"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2add08e23e68"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2add07f17348"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2add08e5e020"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2add08e572a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2add08e69328"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2add07f247e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2add08e667c0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2add07f21c78"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2add08e5d4c8"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2add08e56690"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2add08e5b340"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2add08e553c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2add08e63c68"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2add07f2f7e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2add08e6b020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2add07f164d0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2add08e684b0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2add07f23968"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2add08e5e790"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2add08e57918"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2add08e65948"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2add07f20e00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2add08e5b9b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2add08e55a30"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2add08e62df0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2add07f2e968"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2add08e67638"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2add07f22af0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2add08e5ee00"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2add08e56020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2add08e64ae0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2add07f30658"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2add08e5db38"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2add08e56d00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2add08e5a060"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2add08e540f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2add08e60020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2add07f2daf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add099a97f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add099a8d78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add0902b8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add099a8d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add099a7648"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08ffea28"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2add08e74a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2add08fd0880"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add08fe4b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08fcde78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add08fe5348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08fd2c68"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08fcd020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08ebf0d0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08ebf0d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08eb7b70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2add08eba9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2add08eb6628"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08fa6d88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08fa6d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09a0e060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08fa36d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08ea60d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08eb8a18"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08eb8a18"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08f0ec38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add08eb3610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add07ef0790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2add08fa0478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2add08eb73b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fdb268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fa4268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fa4268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a0d4c0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2add08f090c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2add07ec6240"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add08fa5af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09a0ed58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add08fa4e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a0c0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a0c980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08fa36d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09a0b130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09a10020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09a092e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2add09a54990"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2add08fa0478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09a520e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add08fa0b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a52678"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fdb268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a51268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add08fdbe20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2add08fbdbf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActualX" scoped="" ref="0x2add09017d48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09a427b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09a427b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09a41d78"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2add0900faf8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x2add0900faf8"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2add0900a388"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadX" scoped="" ref="0x2add0901b328"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add090abbd0"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="ReadY" scoped="" ref="0x2add09019020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add090a3288"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add090a7b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09012dd8"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09012dd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0903b140"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add090a8450"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x2add09017d48"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add0909f240"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09012dd8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add090a2b18"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x2add090159d8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x2add0900e510"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2add0900ad50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add0903b140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09a2fbb8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0905e800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0903a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0903a5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a2d268"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0905d3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09039268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09039268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a2de20"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add090346d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add0900d6d0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add09009830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add09043550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add09043550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelPin" scoped="" ref="0x2add090579a8"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x2add08e684b0"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcX" scoped="" ref="0x2add09056b28"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2add08e5d4c8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <from><interface-ref name="AccelAdcY" scoped="" ref="0x2add090551f8"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2add08e5db38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2add09048590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add0903be38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09a2e9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a2c6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09039ae8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09a2ce78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09a32af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09a29020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09a75d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add090346d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09a737b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add0905e268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a73d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0905e800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a72940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0905d3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2add09a71120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2add09a718c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09a41d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a3f648"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualY" scoped="" ref="0x2add090159d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09ac71c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09ac71c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ac6778"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2add0900e510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ac6778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09ac5060"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2add090d64c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09159d58"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add091565e8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x2add090ce1c8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x2add090ce1c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add090de020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09155ca0"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x2add090d49c0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x2add090d49c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add090bd7c0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x2add090cc020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09126288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add090bd7c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09af2bb8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2add090d1d70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add090b7910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add090b7910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09b36140"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b03b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090bbc50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090bbc50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09af0268"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090af020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090ba888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090ba888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09af0e20"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add090b1380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add090df270"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2add090dd638"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add090c8678"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add090dc370"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add091195e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add091195e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2add0912d438"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x2add08e63c68"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2add0912c6c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09113aa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09113aa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09103de8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b6dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b6dd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b355b8"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091029d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090b59d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090b59d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b34268"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09104d80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add09127600"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x2add091258f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add090c8678"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add09124680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add091195e8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2add0911f5d8"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x2add08e62df0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x2add0911e848"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09113aa8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09111060"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add090c7158"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x2add090c7b68"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2add08e5e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add090c1398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09aaf9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090c1ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09aad268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add090c8678"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09ab0bb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090c0700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09aade20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09aac6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090bf020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09aace78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09ab2af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09aa9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add090bb510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09af19a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09aef6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090b9140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09aefe78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09af59e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09aec020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add090b6698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09b36e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09b34b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090b33c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09b322b8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09b38120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09b302e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09b7f268"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add090b1380"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09b7fc98"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add090b1db0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b7e268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b03b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b7ee20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090af020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2add09b7d5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2add09b7dd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09b69578"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add09104d80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09b68020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09103850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b685b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09103de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b66268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091029d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2add09b66a08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2add09b652e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stopDone" scoped="" ref="0x2add0912bd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stopDone" scoped="" ref="0x2add0911ce00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09111060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09111908"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2add0914c928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09146560"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add09145da8"/></from>
      <to><interface-ref name="ReadTemp" scoped="" ref="0x2add090cc020"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09142510"/></from>
      <to><interface-ref name="TempResource" scoped="" ref="0x2add090d1d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MicSetting" scoped="" ref="0x2add099c0b80"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2add0917e128"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicSetting" scoped="" ref="0x2add0917e128"/></from>
      <to><interface-ref name="MicSetting" scoped="" ref="0x2add0917a310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualRead" scoped="" ref="0x2add091879f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09ba1020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09ba1020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ba05d8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add0917f798"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add0917f798"/></from>
      <to><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2add09179250"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2add09133cb0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09317288"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09313240"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add091809e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add091809e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add092cbd88"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add09316b18"/></from>
      <to><interface-ref name="ActualRead" scoped="" ref="0x2add091879f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add092cbd88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09c92cc8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09322800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add092c9268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add092c9268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09c8f268"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093213f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add092c9e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add092c9e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09c8fe20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add093236d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add0917d758"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add09179cb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add092d1020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add092d1020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicPower" scoped="" ref="0x2add09174e38"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2add08e69328"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicMuxSel" scoped="" ref="0x2add09171060"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x2add08e667c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="MicAdc" scoped="" ref="0x2add09170208"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2add08e5ee00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2add09163400"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add092d7020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2add092d7020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add091dd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2add09161020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add091941d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add091941d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09189d78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <from><interface-ref name="AlertInterrupt" scoped="" ref="0x2add09161da0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2add08613b38"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09189d78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add091b6240"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2add091dd1c8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add092370c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2add09233c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add091c0020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add091c0020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09c0a4b0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2add09232a10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add09284700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2add0922d420"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2add0927f318"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2add091bb980"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2add0922ae60"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add091ba678"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add091bf4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add091bf4a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09c09940"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2add0927f930"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2add09277828"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2add09277828"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2add0926f1d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2add0927c2e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add092ef358"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2add0927b908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2add092ef358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add091c0d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09c09200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091be0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09c08578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09c08e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add091be960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09c075d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2add09c0d328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09c055f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2add0926db50"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2add07f1e020"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2add0926ce08"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2add07f1d4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add092caaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09c90a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09c8e6f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add092c76d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09c8ee78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09c94c00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09c8b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09ce0d58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add093236d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09cdf7b8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09322268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09cdfd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09322800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09cdd940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093213f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2add09cdc120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2add09cdc8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ba05d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09ba0e80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Mag" scoped="" ref="0x2add099beac0"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x2add092ff4d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x2add092ff4d8"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x2add09353e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualX" scoped="" ref="0x2add092f7270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09cbc2d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09cbc2d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09cbb890"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2add0934eb48"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x2add0934eb48"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x2add09348020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x2add092fc690"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add0935b3b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x2add092fa4c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add093549d8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x2add09353e70"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x2add09349450"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add09356400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0934fe38"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add0934fe38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0936b840"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add09359cd0"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x2add092f7270"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2add093b0970"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add0934fe38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2add093b2288"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x2add092f5020"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x2add0934d698"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2add09348a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add0936b840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09d4c4b0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add093643b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0936add8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0936add8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09d4a940"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09363020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093699d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093699d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09d49578"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09366380"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add0934c8a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2add09340870"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add09378d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2add09378d20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2add091dd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2add0933b420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09378020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add09378020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add09189d78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2add093475b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2add09372c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2add09372c18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagPower" scoped="" ref="0x2add093426d0"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x2add08e67638"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcX" scoped="" ref="0x2add093419b8"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2add08e5b9b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcY" scoped="" ref="0x2add093400a8"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2add08e5b340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2add0936a698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2add09d4a200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09d49e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add093683c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2add09d485d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09ca7328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2add09d465f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2add09d155c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2add09366380"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09d14020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09366db0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09d145b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add093643b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09d12268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09363020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2add09d12a08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2add09d112e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09cbb890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09cba268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Mag" scoped="" ref="0x2add099bada8"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x2add092ff4d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualY" scoped="" ref="0x2add092f5020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x2add09d72b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2add09d72b18"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09d70140"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x2add0934d698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09d70140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09d709e8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.1/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingC" loc="16:SendingC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.1/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SendingAppC.AMSenderC" loc="39(SendingAppC.AMSenderC):/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.AMSenderC.SenderC" loc="39(SendingAppC.AMSenderC.SenderC):/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(SendingAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2009/09/16 00:51:51 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.8 $ $Date: 2009/10/28 16:18:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2add07e97020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.1/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.1/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.22 $ $Date: 2009/10/28 21:09:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2add08b33b98"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="32(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingAppC.TimerMilliC" loc="36(SendingAppC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C" loc="32(SendingAppC.SensorMts300C):/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'&#10;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&#10;  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#10;  ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS&#10;  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR&#10;  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, LOSS OF USE, DATA,&#10;  OR PROFITS) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN&#10;  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10;  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF&#10;  THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.8 2008/06/11 00:42:14 razvanm Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensorMts300C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="36(SounderC.TimerMilliC):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.VoltageC" loc="29(SendingAppC.SensorMts300C.VoltageC):/opt/tinyos-2.1.1/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.VoltageC.AdcReadClientC" loc="21(SendingAppC.SensorMts300C.VoltageC.AdcReadClientC):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.AccelXC" loc="18(SendingAppC.SensorMts300C.AccelXC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelXC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelReadP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <configuration/>
    </component>
    <component qname="AccelConfigP" loc="17:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
        <short>&#10; Internal component for basicsb photodiode.</short>
        <long>&#10; Internal component for basicsb photodiode. Arbitrates access to the photo&#10; diode and automatically turns it on or off based on user requests.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AccelP" loc="14:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
        <short>&#10; ADXL202JE accelerometer ADC configuration and power management.</short>
        <long>&#10; ADXL202JE accelerometer ADC configuration and power management.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelConfigP.WarmupTimer" loc="36(AccelConfigP.WarmupTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter" loc="79(AccelConfigP.Arbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.accel">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.Arbiter.Queue" loc="32(AccelConfigP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.Arbiter.Arbiter" loc="52(AccelConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelConfigP.PowerManager" loc="57(AccelConfigP.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AccelConfigP.PowerManager.PowerManager" loc="48(AccelConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexX" loc="23(AccelReadP.MultiplexX):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AccelReadP.MultiplexY" loc="23(AccelReadP.MultiplexY):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.AccelXC.AdcX" loc="21(SendingAppC.SensorMts300C.AccelXC.AdcX):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.AccelYC" loc="18(SendingAppC.SensorMts300C.AccelYC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelYC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AccelYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.AccelYC.AdcY" loc="21(SendingAppC.SensorMts300C.AccelYC.AdcY):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.PhotoC" loc="18(SendingAppC.SensorMts300C.PhotoC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="79(PhotoTempDeviceC.SharingArbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="32(PhotoTempDeviceC.SharingArbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="79(PhotoTempDeviceC.PhotoArbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="32(PhotoTempDeviceC.PhotoArbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="79(PhotoTempDeviceC.TempArbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="32(PhotoTempDeviceC.TempArbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="57(PhotoTempDeviceC.PhotoPower):/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="48(PhotoTempDeviceC.PhotoPower.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="57(PhotoTempDeviceC.TempPower):/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="48(PhotoTempDeviceC.TempPower.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="36(PhotoTempDeviceC.WarmupTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.TempC" loc="18(SendingAppC.SensorMts300C.TempC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/TempC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TempC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <configuration/>
    </component>
    <component qname="ArbitratedTempDeviceP.ArbitrateRead" loc="23(ArbitratedTempDeviceP.ArbitrateRead):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MicC" loc="33(SendingAppC.SensorMts300C.MicC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MicC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicReadP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <configuration/>
    </component>
    <component qname="MicDeviceP" loc="32:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <configuration/>
    </component>
    <component qname="MicP" loc="33:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.I2CPot" loc="43(MicDeviceP.I2CPot):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="75(Atm128I2CMasterP.Master):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicDeviceP.WarmupTimer" loc="36(MicDeviceP.WarmupTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter" loc="79(MicDeviceP.Arbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.microphone">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.Arbiter.Queue" loc="32(MicDeviceP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.Arbiter.Arbiter" loc="52(MicDeviceP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicDeviceP.PowerManager" loc="57(MicDeviceP.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicDeviceP.PowerManager.PowerManager" loc="48(MicDeviceP.PowerManager.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MicReadP.ArbitratedReadC" loc="23(MicReadP.ArbitratedReadC):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MicC.AdcReadClientC" loc="21(SendingAppC.SensorMts300C.MicC.AdcReadClientC):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MagXC" loc="16(SendingAppC.SensorMts300C.MagXC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagXC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagXC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagReadP" loc="33:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagConfigP" loc="20:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagP" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.I2CPot" loc="43(MagConfigP.I2CPot):/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.WarmupTimer" loc="36(MagConfigP.WarmupTimer):/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter" loc="79(MagConfigP.Arbiter):/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.mag">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter.Queue" loc="32(MagConfigP.Arbiter.Queue):/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.Arbiter.Arbiter" loc="52(MagConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.PowerManager" loc="57(MagConfigP.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.PowerManager.PowerManager" loc="48(MagConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcX" loc="23(MagReadP.AdcX):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcY" loc="23(MagReadP.AdcY):/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MagXC.AdcX" loc="21(SendingAppC.SensorMts300C.MagXC.AdcX):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MagYC" loc="16(SendingAppC.SensorMts300C.MagYC):/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagYC.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SendingAppC.SensorMts300C.MagYC.AdcY" loc="21(SendingAppC.SensorMts300C.MagYC.AdcY):/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2add07f4a748" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2add07f4aa90" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2add07f4add8" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2add07f5b020" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2add07f5b388" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2add07f5b6f0" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2add07f5ba20" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2add07fdd020" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2add07fdd388" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2add07fdd6f0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2add07fdda20" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2add08173420" loc="39:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2add0816f870" loc="39:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2add08190250" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2add081a0730" loc="37:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2add084dfd78" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add084dfd78"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2add084dc108" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2add084f1750" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2add084f1750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2add08514020" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add08514020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2add08514320" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2add08547e28" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2add08547e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2add085445c8" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add085445c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2add085516e8" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2add085516e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2add08551e50" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2add08551e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2add08578240" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2add08578240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2add085789b8" loc="47:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2add085789b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2add08578d60" loc="48:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2add08576528" loc="49:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2add08576528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2add0857e4d8" loc="41:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2add0857e4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2add0857ec40" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2add0857ec40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2add0857d068" loc="43:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2add0857d068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2add0857d7e0" loc="44:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2add0857d7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2add0857db88" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2add08644020" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2add08644388" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2add086446f0" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2add08644a20" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009/08/14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.1/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2add08839678" loc="73:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2add0882d510" loc="32:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add08b18970" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add08b18970"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2add08b33b98" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2add08b33b98"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2add08b2f020" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2add08b65410" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2add08b65410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2add08b65700" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add08bc3300" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add08bc3300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add08bd6698" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add08bd6698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2add08bd69a8" loc="35:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensorMts300C" loc="32:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
        <short>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.</short>
        <long>&#10;  Copyright (c) 2005-2006 Crossbow Technology, Inc.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'&#10;  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE&#10;  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#10;  ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS&#10;  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR&#10;  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, LOSS OF USE, DATA,&#10;  OR PROFITS) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN&#10;  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10;  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF&#10;  THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;  @author Hu Siquan &#60;husq@xbow.com>&#10;&#10;  $Id: SensorMts300C.nc,v 1.8 2008/06/11 00:42:14 razvanm Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2add08f231c8" loc="79:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2add08f1a860" loc="32:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2add08f4d5c0" loc="52:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2add08fff9c0" loc="23:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2add08fff9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AccelXC" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelXC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AccelYC" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelYC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TempC" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/TempC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MicC" loc="33:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2add091d7ab8" loc="79:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MagXC" loc="16:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagXC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MagYC" loc="16:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagYC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2add07ede0e0" loc="47:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2add07ede0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07ede430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2add07ee0ba8" loc="46:/opt/tinyos-2.1.1/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2add07ee0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2add07edf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2add07ee6508" loc="43:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2add07ee6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07ee6858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add07ee88e8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add07ee88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07ee8c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2add07ef0790" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add07ef0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2add07ef0ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2add07ef0c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2add07ef0df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2add07ee6020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2add07ee61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2add07eed6c0" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2add07eed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07eeda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add07eed020" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add07eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07eed370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2add07eedd88" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2add07eedd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07eeb170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2add07eefd10" loc="18:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2add07eefd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07ef20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2add07eef680" loc="17:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2add07eef680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07eef9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2add07efc4f8" loc="22:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2add07efc4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07efc848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2add07f04388" loc="21:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2add07f04388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f046d8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f04860"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f049e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f04b70"/>
        <function-ref name="get" scoped="" ref="0x2add07f04cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f04e80"/>
        <function-ref name="set" scoped="" ref="0x2add07efc030"/>
        <function-ref name="clr" scoped="" ref="0x2add07efc1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2add07efd0e0" loc="20:/opt/tinyos-2.1.1/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2add07efd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07efd430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2add07f43968" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2add07f43968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f420f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f42278"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f42400"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f42588"/>
        <function-ref name="get" scoped="" ref="0x2add07f42710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f42898"/>
        <function-ref name="set" scoped="" ref="0x2add07f42a20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f42ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2add07f1d4d0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2add07f1d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f1d820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f1d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1dcb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f1de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2c020"/>
        <function-ref name="set" scoped="" ref="0x2add07f2c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2add07f314d0" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2add07f314d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f31820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f319a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f31b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f31cb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f31e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f30020"/>
        <function-ref name="set" scoped="" ref="0x2add07f301a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f30330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2add07f381a0" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2add07f381a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f384f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f38678"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f38800"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f38988"/>
        <function-ref name="get" scoped="" ref="0x2add07f38b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f38c98"/>
        <function-ref name="set" scoped="" ref="0x2add07f38e20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2add07f141a0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2add07f141a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f144f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f14678"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f14800"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f14988"/>
        <function-ref name="get" scoped="" ref="0x2add07f14b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f14c98"/>
        <function-ref name="set" scoped="" ref="0x2add07f14e20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2add07f3be00" loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2add07f3be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f3a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f3a330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f3a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f3a640"/>
        <function-ref name="get" scoped="" ref="0x2add07f3a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f3a950"/>
        <function-ref name="set" scoped="" ref="0x2add07f3aad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2add07f124d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2add07f124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f12820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f129a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f12b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f12cb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f12e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f11020"/>
        <function-ref name="set" scoped="" ref="0x2add07f111a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f11330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2add07f15658" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2add07f15658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f159a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f15b30"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f15cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f15e40"/>
        <function-ref name="get" scoped="" ref="0x2add07f24020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f241a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f24330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2add07f2a968" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2add07f2a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f2ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f29020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f291a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f29330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f294b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f29640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2add07f2e968" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2add07f2e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f2ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f2d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f2d1a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f2d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2d4b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f2d640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2add07f0c968" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2add07f0c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f0ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f0ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f0b1a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f0b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f0b4b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f0b640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2add07f0e968" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2add07f0e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f0ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f0ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1c1a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f1c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f1c4b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f1c640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f1c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2add07f22af0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2add07f22af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f22e40"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f21020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f211a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f21330"/>
        <function-ref name="get" scoped="" ref="0x2add07f214b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f21640"/>
        <function-ref name="set" scoped="" ref="0x2add07f217c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f21950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2add07f27e00" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2add07f27e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f261a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f26330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f264b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f26640"/>
        <function-ref name="get" scoped="" ref="0x2add07f267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f26950"/>
        <function-ref name="set" scoped="" ref="0x2add07f26ad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f26c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2add07f35658" loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2add07f35658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f359a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f35b30"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f35cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f35e40"/>
        <function-ref name="get" scoped="" ref="0x2add07f44020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f441a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f44330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2add07f3f348" loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2add07f3f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f3f698"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f3f820"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f3f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f3fb30"/>
        <function-ref name="get" scoped="" ref="0x2add07f3fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f3fe40"/>
        <function-ref name="set" scoped="" ref="0x2add07f3e020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2add07f331a0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2add07f331a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f334f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f33678"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f33800"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f33988"/>
        <function-ref name="get" scoped="" ref="0x2add07f33b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f33c98"/>
        <function-ref name="set" scoped="" ref="0x2add07f33e20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2add07f09e00" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2add07f09e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f081a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f08330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f084b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f08640"/>
        <function-ref name="get" scoped="" ref="0x2add07f087c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f08950"/>
        <function-ref name="set" scoped="" ref="0x2add07f08ad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f08c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2add07f19020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2add07f19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f19370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f19680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f19808"/>
        <function-ref name="get" scoped="" ref="0x2add07f19990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f19b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f19ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f19e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2add07f41020" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2add07f41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f41370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f414f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f41680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f41808"/>
        <function-ref name="get" scoped="" ref="0x2add07f41990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f41b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f41ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f41e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2add07f17348" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2add07f17348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f17698"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f17820"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f179a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f17b30"/>
        <function-ref name="get" scoped="" ref="0x2add07f17cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f17e40"/>
        <function-ref name="set" scoped="" ref="0x2add07f16020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2add07f2c658" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2add07f2c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f2cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f2ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f2ce40"/>
        <function-ref name="get" scoped="" ref="0x2add07f2b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2b1a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f2b330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2add07f30658" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2add07f30658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f309a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f30b30"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f30cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f30e40"/>
        <function-ref name="get" scoped="" ref="0x2add07f2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2f1a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f2f330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2add07f37348" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2add07f37348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f37698"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f37820"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f379a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f37b30"/>
        <function-ref name="get" scoped="" ref="0x2add07f37cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f37e40"/>
        <function-ref name="set" scoped="" ref="0x2add07f36020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2add07f13348" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2add07f13348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f13698"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f13820"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f139a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f13b30"/>
        <function-ref name="get" scoped="" ref="0x2add07f13cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f13e40"/>
        <function-ref name="set" scoped="" ref="0x2add07f12020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2add07f11658" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2add07f11658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f119a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f11b30"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f11cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f11e40"/>
        <function-ref name="get" scoped="" ref="0x2add07f10020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f101a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f10330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f104b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2add07f247e0" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2add07f247e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f24b30"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f24cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f24e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f23020"/>
        <function-ref name="get" scoped="" ref="0x2add07f231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f23330"/>
        <function-ref name="set" scoped="" ref="0x2add07f234b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2add07f29af0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2add07f29af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f29e40"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f28020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f281a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f28330"/>
        <function-ref name="get" scoped="" ref="0x2add07f284b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f28640"/>
        <function-ref name="set" scoped="" ref="0x2add07f287c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f28950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2add07f2daf0" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2add07f2daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2de40"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f3c020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f3c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f3c330"/>
        <function-ref name="get" scoped="" ref="0x2add07f3c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f3c640"/>
        <function-ref name="set" scoped="" ref="0x2add07f3c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2add07f0baf0" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2add07f0baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f0be40"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f0a020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f0a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f0a330"/>
        <function-ref name="get" scoped="" ref="0x2add07f0a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f0a640"/>
        <function-ref name="set" scoped="" ref="0x2add07f0a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f0a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2add07f1caf0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2add07f1caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f1b020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f1b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1b4b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f1b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f1b7c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f1b950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f1bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2add07f21c78" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2add07f21c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f20020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f20330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f204b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f20640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f207c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f20950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f20ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2add07f447e0" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2add07f447e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f44b30"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f44cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f44e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f43020"/>
        <function-ref name="get" scoped="" ref="0x2add07f431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f43330"/>
        <function-ref name="set" scoped="" ref="0x2add07f434b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f43640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2add07f1e020" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2add07f1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f1e570"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f1e6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1e880"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1ea08"/>
        <function-ref name="get" scoped="" ref="0x2add07f1eb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f1ed18"/>
        <function-ref name="set" scoped="" ref="0x2add07f1d020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2add07f32348" loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2add07f32348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f32698"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f32820"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f329a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f32b30"/>
        <function-ref name="get" scoped="" ref="0x2add07f32cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f32e40"/>
        <function-ref name="set" scoped="" ref="0x2add07f31020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2add07f39020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2add07f39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f39370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f394f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f39680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f39808"/>
        <function-ref name="get" scoped="" ref="0x2add07f39990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f39b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f39ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f39e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2add07f3e4d0" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2add07f3e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f3e820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f3e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f3eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f3ecb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f3ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f3d020"/>
        <function-ref name="set" scoped="" ref="0x2add07f3d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2add07f07020" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2add07f07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f07370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f074f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f07680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f07808"/>
        <function-ref name="get" scoped="" ref="0x2add07f07990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f07b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f07ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f07e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2add07f181a0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2add07f181a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f184f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f18678"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f18800"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f18988"/>
        <function-ref name="get" scoped="" ref="0x2add07f18b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f18c98"/>
        <function-ref name="set" scoped="" ref="0x2add07f18e20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2add07f3cc78" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2add07f3cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f3b020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f3b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f3b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f3b4b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f3b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f3b7c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f3b950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2add07f164d0" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2add07f164d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f16820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f169a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f16b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f16cb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f16e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f15020"/>
        <function-ref name="set" scoped="" ref="0x2add07f151a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f15330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2add07f2b7e0" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2add07f2b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f2bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f2be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f2a020"/>
        <function-ref name="get" scoped="" ref="0x2add07f2a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2a330"/>
        <function-ref name="set" scoped="" ref="0x2add07f2a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2add07f2f7e0" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2add07f2f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f2fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f2fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f2fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f2e020"/>
        <function-ref name="get" scoped="" ref="0x2add07f2e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f2e330"/>
        <function-ref name="set" scoped="" ref="0x2add07f2e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f2e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2add07f364d0" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2add07f364d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f36820"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f369a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f36b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f36cb8"/>
        <function-ref name="get" scoped="" ref="0x2add07f36e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f35020"/>
        <function-ref name="set" scoped="" ref="0x2add07f351a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2add07eff7d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2add07eff7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07effb20"/>
        <function-ref name="isInput" scoped="" ref="0x2add07effca8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07effe30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f0c020"/>
        <function-ref name="get" scoped="" ref="0x2add07f0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f0c330"/>
        <function-ref name="set" scoped="" ref="0x2add07f0c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2add07f107e0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2add07f107e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f10b30"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f10cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f10e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f0e020"/>
        <function-ref name="get" scoped="" ref="0x2add07f0e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f0e330"/>
        <function-ref name="set" scoped="" ref="0x2add07f0e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f0e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2add07f23968" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2add07f23968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f23cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f23e40"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f22020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f221a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f22330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f224b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f22640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2add07f28c78" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2add07f28c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f27020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f271a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f27330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f274b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f27640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f277c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f27950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f27ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2add07f401a0" loc="93:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2add07f401a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f404f0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f40678"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f40800"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f40988"/>
        <function-ref name="get" scoped="" ref="0x2add07f40b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f40c98"/>
        <function-ref name="set" scoped="" ref="0x2add07f40e20"/>
        <function-ref name="clr" scoped="" ref="0x2add07f3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2add07f25020" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2add07f25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f25370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f254f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f25680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f25808"/>
        <function-ref name="get" scoped="" ref="0x2add07f25990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f25b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f25ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f25e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2add07f20e00" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2add07f20e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f1f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f1f330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1f640"/>
        <function-ref name="get" scoped="" ref="0x2add07f1f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f1f950"/>
        <function-ref name="set" scoped="" ref="0x2add07f1fad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f1fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2add07f0ac78" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2add07f0ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f09020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f091a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f09330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f094b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f09640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f097c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f09950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f09ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2add07f1be00" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2add07f1be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f1a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f1a330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f1a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f1a640"/>
        <function-ref name="get" scoped="" ref="0x2add07f1a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f1a950"/>
        <function-ref name="set" scoped="" ref="0x2add07f1aad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f1ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07f85430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07f85430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f85780"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f85908"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f85a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f85c18"/>
        <function-ref name="get" scoped="" ref="0x2add07f85da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f94020"/>
        <function-ref name="set" scoped="" ref="0x2add07f941a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f94330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07f918c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07f918c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f91c18"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f91da0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f90020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f901a8"/>
        <function-ref name="get" scoped="" ref="0x2add07f90330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f904b8"/>
        <function-ref name="set" scoped="" ref="0x2add07f90640"/>
        <function-ref name="clr" scoped="" ref="0x2add07f907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07f871e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07f871e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f87538"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f876c0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f87848"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f879d0"/>
        <function-ref name="get" scoped="" ref="0x2add07f87b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f87ce0"/>
        <function-ref name="set" scoped="" ref="0x2add07f87e68"/>
        <function-ref name="clr" scoped="" ref="0x2add07f86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07f945b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07f945b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f94908"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f94a90"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f94c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f94da0"/>
        <function-ref name="get" scoped="" ref="0x2add07f93020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f931a8"/>
        <function-ref name="set" scoped="" ref="0x2add07f93330"/>
        <function-ref name="clr" scoped="" ref="0x2add07f934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07f90a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07f90a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f90da0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f8f020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f8f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f8f330"/>
        <function-ref name="get" scoped="" ref="0x2add07f8f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f8f640"/>
        <function-ref name="set" scoped="" ref="0x2add07f8f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07f862a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07f862a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f865f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f86780"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f86908"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f86a90"/>
        <function-ref name="get" scoped="" ref="0x2add07f86c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f86da0"/>
        <function-ref name="set" scoped="" ref="0x2add07f85020"/>
        <function-ref name="clr" scoped="" ref="0x2add07f851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07f93740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07f93740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f93a90"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f93c18"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f93da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f91020"/>
        <function-ref name="get" scoped="" ref="0x2add07f911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f91330"/>
        <function-ref name="set" scoped="" ref="0x2add07f914b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f91640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07f8fbd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07f8fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f8e020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f8e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f8e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f8e4b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f8e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f8e7c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f8e950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add093b6970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add093b6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add093b6cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add093b6e48"/>
        <function-ref name="toggle" scoped="" ref="0x2add093b4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add093b41a8"/>
        <function-ref name="get" scoped="" ref="0x2add093b4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add093b44b8"/>
        <function-ref name="set" scoped="" ref="0x2add093b4640"/>
        <function-ref name="clr" scoped="" ref="0x2add093b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0941e970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0941e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0941ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add0941ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2add0941d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0941d1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0941d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0941d4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0941d640"/>
        <function-ref name="clr" scoped="" ref="0x2add0941d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0941b970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0941b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0941bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add0941be48"/>
        <function-ref name="toggle" scoped="" ref="0x2add0941a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0941a1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0941a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0941a4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0941a640"/>
        <function-ref name="clr" scoped="" ref="0x2add0941a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09418970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09418970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09418cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add09418e48"/>
        <function-ref name="toggle" scoped="" ref="0x2add09417020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094171a8"/>
        <function-ref name="get" scoped="" ref="0x2add09417330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094174b8"/>
        <function-ref name="set" scoped="" ref="0x2add09417640"/>
        <function-ref name="clr" scoped="" ref="0x2add094177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09415970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09415970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09415cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add09415e48"/>
        <function-ref name="toggle" scoped="" ref="0x2add09414020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094141a8"/>
        <function-ref name="get" scoped="" ref="0x2add09414330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094144b8"/>
        <function-ref name="set" scoped="" ref="0x2add09414640"/>
        <function-ref name="clr" scoped="" ref="0x2add094147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09412970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09412970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09412cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add09412e48"/>
        <function-ref name="toggle" scoped="" ref="0x2add09411020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094111a8"/>
        <function-ref name="get" scoped="" ref="0x2add09411330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094114b8"/>
        <function-ref name="set" scoped="" ref="0x2add09411640"/>
        <function-ref name="clr" scoped="" ref="0x2add094117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0940f970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0940f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0940fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add0940fe48"/>
        <function-ref name="toggle" scoped="" ref="0x2add0940e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0940e1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0940e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0940e4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0940e640"/>
        <function-ref name="clr" scoped="" ref="0x2add0940e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0940c970" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0940c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0940ccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add0940ce48"/>
        <function-ref name="toggle" scoped="" ref="0x2add0940b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0940b1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0940b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0940b4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0940b640"/>
        <function-ref name="clr" scoped="" ref="0x2add0940b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07f97e18" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07f97e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f961a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f96330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f96640"/>
        <function-ref name="get" scoped="" ref="0x2add07f967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f96950"/>
        <function-ref name="set" scoped="" ref="0x2add07f96ad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07f96c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07fa52a8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07fa52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa5780"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa5a90"/>
        <function-ref name="get" scoped="" ref="0x2add07fa5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa5da0"/>
        <function-ref name="set" scoped="" ref="0x2add07fa4020"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07f9abd0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07f9abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f99020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f991a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f99330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f994b8"/>
        <function-ref name="get" scoped="" ref="0x2add07f99640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f997c8"/>
        <function-ref name="set" scoped="" ref="0x2add07f99950"/>
        <function-ref name="clr" scoped="" ref="0x2add07f99ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07f95020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07f95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f95370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f95680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f95808"/>
        <function-ref name="get" scoped="" ref="0x2add07f95990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f95b18"/>
        <function-ref name="set" scoped="" ref="0x2add07f95ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07f95e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07fa4430" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07fa4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa4780"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa4908"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa4c18"/>
        <function-ref name="get" scoped="" ref="0x2add07fa4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa3020"/>
        <function-ref name="set" scoped="" ref="0x2add07fa31a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07f99d60" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07f99d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07f970d8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07f97260"/>
        <function-ref name="toggle" scoped="" ref="0x2add07f973e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07f97570"/>
        <function-ref name="get" scoped="" ref="0x2add07f976f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07f97880"/>
        <function-ref name="set" scoped="" ref="0x2add07f97a08"/>
        <function-ref name="clr" scoped="" ref="0x2add07f97b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07fa6120" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07fa6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa6470"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa65f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa6780"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa6908"/>
        <function-ref name="get" scoped="" ref="0x2add07fa6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa6c18"/>
        <function-ref name="set" scoped="" ref="0x2add07fa6da0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07fa35b8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07fa35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa3908"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa3da0"/>
        <function-ref name="get" scoped="" ref="0x2add07fa2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa21a8"/>
        <function-ref name="set" scoped="" ref="0x2add07fa2330"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094826a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094826a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094829f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add09482b80"/>
        <function-ref name="toggle" scoped="" ref="0x2add09482d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09481020"/>
        <function-ref name="get" scoped="" ref="0x2add094811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09481330"/>
        <function-ref name="set" scoped="" ref="0x2add094814b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09481640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0947f710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0947f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0947fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0947fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0947fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0947d020"/>
        <function-ref name="get" scoped="" ref="0x2add0947d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0947d330"/>
        <function-ref name="set" scoped="" ref="0x2add0947d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0947d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0947b710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0947b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0947ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0947bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0947bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0947a020"/>
        <function-ref name="get" scoped="" ref="0x2add0947a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0947a330"/>
        <function-ref name="set" scoped="" ref="0x2add0947a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0947a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09478710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09478710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09478a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09478be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09478d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09477020"/>
        <function-ref name="get" scoped="" ref="0x2add094771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09477330"/>
        <function-ref name="set" scoped="" ref="0x2add094774b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09477640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09475710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09475710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09475a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09475be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09475d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09474020"/>
        <function-ref name="get" scoped="" ref="0x2add094741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09474330"/>
        <function-ref name="set" scoped="" ref="0x2add094744b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09474640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09472710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09472710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09472a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09472be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09472d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09471020"/>
        <function-ref name="get" scoped="" ref="0x2add094711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09471330"/>
        <function-ref name="set" scoped="" ref="0x2add094714b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09471640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0946f710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0946f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0946fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0946fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0946fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0946e020"/>
        <function-ref name="get" scoped="" ref="0x2add0946e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0946e330"/>
        <function-ref name="set" scoped="" ref="0x2add0946e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0946e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0946c710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0946c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0946ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0946cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0946cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0946b020"/>
        <function-ref name="get" scoped="" ref="0x2add0946b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0946b330"/>
        <function-ref name="set" scoped="" ref="0x2add0946b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0946b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07fac740" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07fac740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07faca90"/>
        <function-ref name="isInput" scoped="" ref="0x2add07facc18"/>
        <function-ref name="toggle" scoped="" ref="0x2add07facda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fab020"/>
        <function-ref name="get" scoped="" ref="0x2add07fab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fab330"/>
        <function-ref name="set" scoped="" ref="0x2add07fab4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07fa9bd8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07fa9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa8020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa84b8"/>
        <function-ref name="get" scoped="" ref="0x2add07fa8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa87c8"/>
        <function-ref name="set" scoped="" ref="0x2add07fa8950"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07fae500" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07fae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fae850"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fae9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07faeb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07faece8"/>
        <function-ref name="get" scoped="" ref="0x2add07faee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fad020"/>
        <function-ref name="set" scoped="" ref="0x2add07fad1a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07fab8c8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07fab8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fabc18"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fabda0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07faa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07faa1a8"/>
        <function-ref name="get" scoped="" ref="0x2add07faa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07faa4b8"/>
        <function-ref name="set" scoped="" ref="0x2add07faa640"/>
        <function-ref name="clr" scoped="" ref="0x2add07faa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07fa8d60" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07fa8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fa70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa7260"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa7570"/>
        <function-ref name="get" scoped="" ref="0x2add07fa76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa7880"/>
        <function-ref name="set" scoped="" ref="0x2add07fa7a08"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07fad5b8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07fad5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fad908"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fada90"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fadc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fadda0"/>
        <function-ref name="get" scoped="" ref="0x2add07fac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fac1a8"/>
        <function-ref name="set" scoped="" ref="0x2add07fac330"/>
        <function-ref name="clr" scoped="" ref="0x2add07fac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07faaa50" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07faaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07faada0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fa9020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fa91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fa9330"/>
        <function-ref name="get" scoped="" ref="0x2add07fa94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fa9640"/>
        <function-ref name="set" scoped="" ref="0x2add07fa97c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fa9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07fa7e18" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07fa7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fb81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fb8330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fb84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fb8640"/>
        <function-ref name="get" scoped="" ref="0x2add07fb87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fb8950"/>
        <function-ref name="set" scoped="" ref="0x2add07fb8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fb8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094e46a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094e46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094e49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add094e4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2add094e4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094e3020"/>
        <function-ref name="get" scoped="" ref="0x2add094e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094e3330"/>
        <function-ref name="set" scoped="" ref="0x2add094e34b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094e1710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094e1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094e1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094e1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094e1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094df020"/>
        <function-ref name="get" scoped="" ref="0x2add094df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094df330"/>
        <function-ref name="set" scoped="" ref="0x2add094df4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094dd710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094dda60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094ddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094dc020"/>
        <function-ref name="get" scoped="" ref="0x2add094dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094dc330"/>
        <function-ref name="set" scoped="" ref="0x2add094dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094da710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094daa60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094dabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094d9020"/>
        <function-ref name="get" scoped="" ref="0x2add094d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094d9330"/>
        <function-ref name="set" scoped="" ref="0x2add094d94b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094d7710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094d6020"/>
        <function-ref name="get" scoped="" ref="0x2add094d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094d6330"/>
        <function-ref name="set" scoped="" ref="0x2add094d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094d4710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094d3020"/>
        <function-ref name="get" scoped="" ref="0x2add094d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094d3330"/>
        <function-ref name="set" scoped="" ref="0x2add094d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094d1710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094d0020"/>
        <function-ref name="get" scoped="" ref="0x2add094d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094d0330"/>
        <function-ref name="set" scoped="" ref="0x2add094d04b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add094ce710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add094ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add094cea60"/>
        <function-ref name="isInput" scoped="" ref="0x2add094cebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add094ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add094cd020"/>
        <function-ref name="get" scoped="" ref="0x2add094cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add094cd330"/>
        <function-ref name="set" scoped="" ref="0x2add094cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add094cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07fc1120" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07fc1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc1470"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc1908"/>
        <function-ref name="get" scoped="" ref="0x2add07fc1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc1c18"/>
        <function-ref name="set" scoped="" ref="0x2add07fc1da0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07fbe5b8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07fbe5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fbe908"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fbea90"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fbec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fbeda0"/>
        <function-ref name="get" scoped="" ref="0x2add07fbd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fbd1a8"/>
        <function-ref name="set" scoped="" ref="0x2add07fbd330"/>
        <function-ref name="clr" scoped="" ref="0x2add07fbd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07fb2e40" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07fb2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fb11c0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fb1348"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fb14d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fb1658"/>
        <function-ref name="get" scoped="" ref="0x2add07fb17e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fb1968"/>
        <function-ref name="set" scoped="" ref="0x2add07fb1af0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fb1c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07fc02a8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07fc02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc0780"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc0a90"/>
        <function-ref name="get" scoped="" ref="0x2add07fc0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc0da0"/>
        <function-ref name="set" scoped="" ref="0x2add07fbf020"/>
        <function-ref name="clr" scoped="" ref="0x2add07fbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07fbd740" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07fbd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fbda90"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fbdc18"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fbdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fbc020"/>
        <function-ref name="get" scoped="" ref="0x2add07fbc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fbc330"/>
        <function-ref name="set" scoped="" ref="0x2add07fbc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fbc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07fb0020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fb0370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fb04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fb0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fb0808"/>
        <function-ref name="get" scoped="" ref="0x2add07fb0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fb0b18"/>
        <function-ref name="set" scoped="" ref="0x2add07fb0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fb0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07fbf430" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07fbf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fbf780"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fbf908"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fbfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fbfc18"/>
        <function-ref name="get" scoped="" ref="0x2add07fbfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fbe020"/>
        <function-ref name="set" scoped="" ref="0x2add07fbe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fbe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07fbc8c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07fbc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fbcc18"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fbcda0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fba020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fba1a8"/>
        <function-ref name="get" scoped="" ref="0x2add07fba330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fba4b8"/>
        <function-ref name="set" scoped="" ref="0x2add07fba640"/>
        <function-ref name="clr" scoped="" ref="0x2add07fba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0954a6a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0954a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0954a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add0954ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2add0954ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09549020"/>
        <function-ref name="get" scoped="" ref="0x2add095491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09549330"/>
        <function-ref name="set" scoped="" ref="0x2add095494b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09549640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09547710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09547710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09547a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09547be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09547d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09546020"/>
        <function-ref name="get" scoped="" ref="0x2add095461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09546330"/>
        <function-ref name="set" scoped="" ref="0x2add095464b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09546640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09544710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09544710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09544a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09544be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09544d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09542020"/>
        <function-ref name="get" scoped="" ref="0x2add095421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09542330"/>
        <function-ref name="set" scoped="" ref="0x2add095424b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09542640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09540710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09540710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09540a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09540be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09540d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0953f020"/>
        <function-ref name="get" scoped="" ref="0x2add0953f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0953f330"/>
        <function-ref name="set" scoped="" ref="0x2add0953f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0953f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0953d710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0953d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0953da60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0953dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0953dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0953c020"/>
        <function-ref name="get" scoped="" ref="0x2add0953c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0953c330"/>
        <function-ref name="set" scoped="" ref="0x2add0953c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0953c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0953a710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0953a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0953aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0953abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0953ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09539020"/>
        <function-ref name="get" scoped="" ref="0x2add095391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09539330"/>
        <function-ref name="set" scoped="" ref="0x2add095394b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09539640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09537710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09537710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09537a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09537be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09537d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09536020"/>
        <function-ref name="get" scoped="" ref="0x2add095361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09536330"/>
        <function-ref name="set" scoped="" ref="0x2add095364b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09536640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09534710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09534710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09534a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09534be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09534d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09533020"/>
        <function-ref name="get" scoped="" ref="0x2add095331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09533330"/>
        <function-ref name="set" scoped="" ref="0x2add095334b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09533640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07fc5bd8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07fc5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc4020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc44b8"/>
        <function-ref name="get" scoped="" ref="0x2add07fc4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc47c8"/>
        <function-ref name="set" scoped="" ref="0x2add07fc4950"/>
        <function-ref name="clr" scoped="" ref="0x2add07fc4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07fd2020" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd2370"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd2808"/>
        <function-ref name="get" scoped="" ref="0x2add07fd2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd2b18"/>
        <function-ref name="set" scoped="" ref="0x2add07fd2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07fc7930" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07fc7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc7c80"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc7e08"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc61a8"/>
        <function-ref name="get" scoped="" ref="0x2add07fc6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc64b8"/>
        <function-ref name="set" scoped="" ref="0x2add07fc6640"/>
        <function-ref name="clr" scoped="" ref="0x2add07fc67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07fc4d60" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07fc4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc30d8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc3260"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc3570"/>
        <function-ref name="get" scoped="" ref="0x2add07fc36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc3880"/>
        <function-ref name="set" scoped="" ref="0x2add07fc3a08"/>
        <function-ref name="clr" scoped="" ref="0x2add07fc3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07fd1120" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07fd1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd1470"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd1908"/>
        <function-ref name="get" scoped="" ref="0x2add07fd1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd1c18"/>
        <function-ref name="set" scoped="" ref="0x2add07fd1da0"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07fc6a50" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07fc6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fc6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fc5020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fc51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fc5330"/>
        <function-ref name="get" scoped="" ref="0x2add07fc54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fc5640"/>
        <function-ref name="set" scoped="" ref="0x2add07fc57c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fc5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07fc3e18" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07fc3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd3330"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd3640"/>
        <function-ref name="get" scoped="" ref="0x2add07fd37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd3950"/>
        <function-ref name="set" scoped="" ref="0x2add07fd3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07fd02a8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07fd02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd0780"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd0a90"/>
        <function-ref name="get" scoped="" ref="0x2add07fd0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd0da0"/>
        <function-ref name="set" scoped="" ref="0x2add07fcf020"/>
        <function-ref name="clr" scoped="" ref="0x2add07fcf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095b36a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095b36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095b39f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add095b3b80"/>
        <function-ref name="toggle" scoped="" ref="0x2add095b3d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095b2020"/>
        <function-ref name="get" scoped="" ref="0x2add095b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095b2330"/>
        <function-ref name="set" scoped="" ref="0x2add095b24b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095b0710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095b0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095b0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095af020"/>
        <function-ref name="get" scoped="" ref="0x2add095af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095af330"/>
        <function-ref name="set" scoped="" ref="0x2add095af4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095ad710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095ad710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095ada60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095adbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095add70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095ab020"/>
        <function-ref name="get" scoped="" ref="0x2add095ab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095ab330"/>
        <function-ref name="set" scoped="" ref="0x2add095ab4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095ab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095a9710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095a9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095a9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095a9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095a8020"/>
        <function-ref name="get" scoped="" ref="0x2add095a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095a8330"/>
        <function-ref name="set" scoped="" ref="0x2add095a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095a6710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095a6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095a6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095a5020"/>
        <function-ref name="get" scoped="" ref="0x2add095a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095a5330"/>
        <function-ref name="set" scoped="" ref="0x2add095a54b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095a3710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095a3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095a3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095a3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add095a2020"/>
        <function-ref name="get" scoped="" ref="0x2add095a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add095a2330"/>
        <function-ref name="set" scoped="" ref="0x2add095a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2add095a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add095a0710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add095a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add095a0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add095a0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add095a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0959f020"/>
        <function-ref name="get" scoped="" ref="0x2add0959f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0959f330"/>
        <function-ref name="set" scoped="" ref="0x2add0959f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0959f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0959d710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0959d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0959da60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0959dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0959dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0959c020"/>
        <function-ref name="get" scoped="" ref="0x2add0959c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0959c330"/>
        <function-ref name="set" scoped="" ref="0x2add0959c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0959c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2add07fd9430" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2add07fd9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd9780"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd9908"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd9c18"/>
        <function-ref name="get" scoped="" ref="0x2add07fd9da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd8020"/>
        <function-ref name="set" scoped="" ref="0x2add07fd81a8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2add07fd68c8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2add07fd68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd6c18"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd6da0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd51a8"/>
        <function-ref name="get" scoped="" ref="0x2add07fd5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd54b8"/>
        <function-ref name="set" scoped="" ref="0x2add07fd5640"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2add07fdc1e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2add07fdc1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fdc538"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fdc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fdc848"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fdc9d0"/>
        <function-ref name="get" scoped="" ref="0x2add07fdcb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fdcce0"/>
        <function-ref name="set" scoped="" ref="0x2add07fdce68"/>
        <function-ref name="clr" scoped="" ref="0x2add07fdb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2add07fd85b8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2add07fd85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd8908"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd8da0"/>
        <function-ref name="get" scoped="" ref="0x2add07fd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd71a8"/>
        <function-ref name="set" scoped="" ref="0x2add07fd7330"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2add07fd5a50" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2add07fd5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd5da0"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd4020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd4330"/>
        <function-ref name="get" scoped="" ref="0x2add07fd44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd4640"/>
        <function-ref name="set" scoped="" ref="0x2add07fd47c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2add07fdb2a8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2add07fdb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fdb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fdb780"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fdb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fdba90"/>
        <function-ref name="get" scoped="" ref="0x2add07fdbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fdbda0"/>
        <function-ref name="set" scoped="" ref="0x2add07fd9020"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2add07fd7740" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2add07fd7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fd7a90"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fd7c18"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fd7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fd6020"/>
        <function-ref name="get" scoped="" ref="0x2add07fd61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fd6330"/>
        <function-ref name="set" scoped="" ref="0x2add07fd64b8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fd6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2add07fd4bd8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2add07fd4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fe5020"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fe51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fe5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fe54b8"/>
        <function-ref name="get" scoped="" ref="0x2add07fe5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fe57c8"/>
        <function-ref name="set" scoped="" ref="0x2add07fe5950"/>
        <function-ref name="clr" scoped="" ref="0x2add07fe5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0961f6a8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0961f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0961f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add0961fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2add0961fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0961e020"/>
        <function-ref name="get" scoped="" ref="0x2add0961e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0961e330"/>
        <function-ref name="set" scoped="" ref="0x2add0961e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0961e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0961c710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0961c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0961ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0961cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0961cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0961b020"/>
        <function-ref name="get" scoped="" ref="0x2add0961b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0961b330"/>
        <function-ref name="set" scoped="" ref="0x2add0961b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0961b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09619710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09619710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09619a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09619be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09619d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09618020"/>
        <function-ref name="get" scoped="" ref="0x2add096181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09618330"/>
        <function-ref name="set" scoped="" ref="0x2add096184b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09618640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09616710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09616710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09616a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09616be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09616d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09614020"/>
        <function-ref name="get" scoped="" ref="0x2add096141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09614330"/>
        <function-ref name="set" scoped="" ref="0x2add096144b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09614640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09612710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09612710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09612a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09612be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09612d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09611020"/>
        <function-ref name="get" scoped="" ref="0x2add096111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09611330"/>
        <function-ref name="set" scoped="" ref="0x2add096114b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09611640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0960f710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0960f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0960fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0960fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0960fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0960e020"/>
        <function-ref name="get" scoped="" ref="0x2add0960e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0960e330"/>
        <function-ref name="set" scoped="" ref="0x2add0960e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0960e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0960c710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0960c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0960ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2add0960cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0960cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0960b020"/>
        <function-ref name="get" scoped="" ref="0x2add0960b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0960b330"/>
        <function-ref name="set" scoped="" ref="0x2add0960b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add0960b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add09609710" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add09609710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09609a60"/>
        <function-ref name="isInput" scoped="" ref="0x2add09609be8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09609d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09608020"/>
        <function-ref name="get" scoped="" ref="0x2add096081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09608330"/>
        <function-ref name="set" scoped="" ref="0x2add096084b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09608640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add07fdeac0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add07fdeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07fdee10"/>
        <function-ref name="isInput" scoped="" ref="0x2add07fff020"/>
        <function-ref name="toggle" scoped="" ref="0x2add07fff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07fff330"/>
        <function-ref name="get" scoped="" ref="0x2add07fff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07fff640"/>
        <function-ref name="set" scoped="" ref="0x2add07fff7c8"/>
        <function-ref name="clr" scoped="" ref="0x2add07fff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add07ffbdb8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add07ffbdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add07ffa170"/>
        <function-ref name="isInput" scoped="" ref="0x2add07ffa2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add07ffa480"/>
        <function-ref name="isOutput" scoped="" ref="0x2add07ffa608"/>
        <function-ref name="get" scoped="" ref="0x2add07ffa790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add07ffa918"/>
        <function-ref name="set" scoped="" ref="0x2add07ffaaa0"/>
        <function-ref name="clr" scoped="" ref="0x2add07ffac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add080073e0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add080073e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08007730"/>
        <function-ref name="isInput" scoped="" ref="0x2add080078b8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08007a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08007bc8"/>
        <function-ref name="get" scoped="" ref="0x2add08007d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08006020"/>
        <function-ref name="set" scoped="" ref="0x2add080061a8"/>
        <function-ref name="clr" scoped="" ref="0x2add08006330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add080037e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add080037e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08003b38"/>
        <function-ref name="isInput" scoped="" ref="0x2add08003cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2add08003e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08002020"/>
        <function-ref name="get" scoped="" ref="0x2add080021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08002330"/>
        <function-ref name="set" scoped="" ref="0x2add080024b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08002640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add08010c38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add08010c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0800f020"/>
        <function-ref name="isInput" scoped="" ref="0x2add0800f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0800f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0800f4b8"/>
        <function-ref name="get" scoped="" ref="0x2add0800f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0800f7c8"/>
        <function-ref name="set" scoped="" ref="0x2add0800f950"/>
        <function-ref name="clr" scoped="" ref="0x2add0800fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0800a020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0800a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0800a370"/>
        <function-ref name="isInput" scoped="" ref="0x2add0800a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0800a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0800a808"/>
        <function-ref name="get" scoped="" ref="0x2add0800a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0800ab18"/>
        <function-ref name="set" scoped="" ref="0x2add0800aca0"/>
        <function-ref name="clr" scoped="" ref="0x2add0800ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add08019480" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add08019480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add080197d0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08019958"/>
        <function-ref name="toggle" scoped="" ref="0x2add08019ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08019c68"/>
        <function-ref name="get" scoped="" ref="0x2add08019df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08018020"/>
        <function-ref name="set" scoped="" ref="0x2add080181a8"/>
        <function-ref name="clr" scoped="" ref="0x2add08018330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add080147e8" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add080147e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08014b38"/>
        <function-ref name="isInput" scoped="" ref="0x2add08014cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2add08014e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08013020"/>
        <function-ref name="get" scoped="" ref="0x2add080131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08013330"/>
        <function-ref name="set" scoped="" ref="0x2add080134b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08013640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add08023970" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add08023970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08023cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08023e48"/>
        <function-ref name="toggle" scoped="" ref="0x2add08022020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add080221a8"/>
        <function-ref name="get" scoped="" ref="0x2add08022330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add080224b8"/>
        <function-ref name="set" scoped="" ref="0x2add08022640"/>
        <function-ref name="clr" scoped="" ref="0x2add080227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0801fab0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0801fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0801fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2add0801e020"/>
        <function-ref name="toggle" scoped="" ref="0x2add0801e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0801e330"/>
        <function-ref name="get" scoped="" ref="0x2add0801e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0801e640"/>
        <function-ref name="set" scoped="" ref="0x2add0801e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2add0801e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add0802ec38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add0802ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0802d020"/>
        <function-ref name="isInput" scoped="" ref="0x2add0802d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0802d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0802d4b8"/>
        <function-ref name="get" scoped="" ref="0x2add0802d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0802d7c8"/>
        <function-ref name="set" scoped="" ref="0x2add0802d950"/>
        <function-ref name="clr" scoped="" ref="0x2add0802dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add08029020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add08029020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08029370"/>
        <function-ref name="isInput" scoped="" ref="0x2add080294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08029680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08029808"/>
        <function-ref name="get" scoped="" ref="0x2add08029990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08029b18"/>
        <function-ref name="set" scoped="" ref="0x2add08029ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add08029e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2add08038180" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2add08038180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add080384d0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08038658"/>
        <function-ref name="toggle" scoped="" ref="0x2add080387e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08038968"/>
        <function-ref name="get" scoped="" ref="0x2add08038af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08038c78"/>
        <function-ref name="set" scoped="" ref="0x2add08038e00"/>
        <function-ref name="clr" scoped="" ref="0x2add08037020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08063020" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08063020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2add07dd0570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2add07dd0570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08063370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2add08063650" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add08063650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2add080639a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2add08063b28"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2add08063cb0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2add08063e38"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2add08076020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2add08092a60" loc="49:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2add08092a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08092db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2add08093278" loc="46:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2add08093278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2add080935c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2add08092398" loc="48:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2add08092398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add080926e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2add080938b0" loc="47:/opt/tinyos-2.1.1/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2add080938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08093c00"/>
        <function-ref name="taskLoop" scoped="" ref="0x2add08093d88"/>
        <function-ref name="runNextTask" scoped="" ref="0x2add08092020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2add07dce368" loc="37:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2add07dce368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add07dce6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2add07dce840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2add07dcdb30" loc="36:/opt/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2add07dcdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07dcde80"/>
        <function-ref name="taskLoop" scoped="" ref="0x2add07dcf030"/>
        <function-ref name="runNextTask" scoped="" ref="0x2add07dcf1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2add07ea1b08" loc="45:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2add07ea1b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add07ea1e58"/>
        <function-ref name="runTask" scoped="" ref="0x2add07ea0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2add07e9f020" loc="46:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2add07e9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2add07e9f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2add07ea2c00" loc="44:/opt/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2add07ea2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add07ea1020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2add07ea11a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2add07ea1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2add07ec32b0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2add07ec32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2add07ec3600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2add07dd7dc8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2add07dd7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2add07ebc170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2add07ec6240" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2add07ec6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2add07ec6590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2add08110578" loc="22:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2add08110578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0810e8f0"/>
        <function-ref name="fired" scoped="" ref="0x2add0810f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add0810fd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add0810f8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2add081241c0"/>
        <function-ref name="gett0" scoped="" ref="0x2add0810ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add0810f470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add081030f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add0810e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08103598"/>
        <function-ref name="stop" scoped="" ref="0x2add08103a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2add0811e6d0" loc="23:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2add0811e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0811ea20"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0811eba8"/>
        <function-ref name="start" scoped="" ref="0x2add0811ed30"/>
        <function-ref name="stop" scoped="" ref="0x2add08123020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2add0809bd50" loc="19:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2add0809bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2add0809a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2add080fe178" loc="20:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add080fe178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add080fe4c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add080fe650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add080fe7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2add080fe960"/>
        <function-ref name="sendDone" scoped="" ref="0x2add080feae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2add0812d0d0" loc="24:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add0812d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add0812d420"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add0812d5a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add0812d730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add0812d8b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add0812da40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelX" ref="0x2add0812bd48" loc="25:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelX" scoped="" ref="0x2add0812bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add081228b8"/>
        <function-ref name="readDone" scoped="" ref="0x2add08122d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelY" ref="0x2add0811d4b8" loc="26:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelY" scoped="" ref="0x2add0811d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08129088"/>
        <function-ref name="readDone" scoped="" ref="0x2add081294d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add080a6760" loc="18:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add080a6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add080a6ab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add080a6c38"/>
        <function-ref name="led1On" scoped="" ref="0x2add080a6dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add0809b020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add0809b1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0809b330"/>
        <function-ref name="led1Off" scoped="" ref="0x2add0809b4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add0809bad8"/>
        <function-ref name="set" scoped="" ref="0x2add0809b640"/>
        <function-ref name="led0On" scoped="" ref="0x2add0809b7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2add0809b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2add081058a0" loc="21:SendingC.nc">
      <component-ref qname="SendingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add081058a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add08105bf0"/>
        <function-ref name="source" scoped="" ref="0x2add08105d78"/>
        <function-ref name="address" scoped="" ref="0x2add080a5020"/>
        <function-ref name="destination" scoped="" ref="0x2add080a51a8"/>
        <function-ref name="setSource" scoped="" ref="0x2add080a5330"/>
        <function-ref name="setDestination" scoped="" ref="0x2add080a54b8"/>
        <function-ref name="type" scoped="" ref="0x2add080a5640"/>
        <function-ref name="setType" scoped="" ref="0x2add080a57c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2add080a5950"/>
        <function-ref name="setGroup" scoped="" ref="0x2add080a5ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2add080a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2add0809de18" loc="35:/opt/tinyos-2.1.1/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add0809de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add081411a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add08141330"/>
        <function-ref name="led1On" scoped="" ref="0x2add081414b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add08141640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add081417c8"/>
        <function-ref name="get" scoped="" ref="0x2add08141950"/>
        <function-ref name="led1Off" scoped="" ref="0x2add08141ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add081401a8"/>
        <function-ref name="set" scoped="" ref="0x2add08141c60"/>
        <function-ref name="led0On" scoped="" ref="0x2add08141de8"/>
        <function-ref name="led2On" scoped="" ref="0x2add08140020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2add08154ce8" loc="39:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2add08154ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add081530a0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08153228"/>
        <function-ref name="toggle" scoped="" ref="0x2add081533b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08153538"/>
        <function-ref name="get" scoped="" ref="0x2add081536c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08153848"/>
        <function-ref name="set" scoped="" ref="0x2add081539d0"/>
        <function-ref name="clr" scoped="" ref="0x2add08153b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add0813d080" loc="35:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add0813d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add0813d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2add08153e70" loc="40:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2add08153e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add081521e8"/>
        <function-ref name="isInput" scoped="" ref="0x2add08152370"/>
        <function-ref name="toggle" scoped="" ref="0x2add081524f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08152680"/>
        <function-ref name="get" scoped="" ref="0x2add08152808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08152990"/>
        <function-ref name="set" scoped="" ref="0x2add08152b18"/>
        <function-ref name="clr" scoped="" ref="0x2add08152ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2add0813d648" loc="36:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add0813d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add0813d998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add0813db20"/>
        <function-ref name="led1On" scoped="" ref="0x2add0813dca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add0813de30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add08154020"/>
        <function-ref name="get" scoped="" ref="0x2add081541a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add08154330"/>
        <function-ref name="led2Off" scoped="" ref="0x2add08154950"/>
        <function-ref name="set" scoped="" ref="0x2add081544b8"/>
        <function-ref name="led0On" scoped="" ref="0x2add08154640"/>
        <function-ref name="led2On" scoped="" ref="0x2add081547c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2add08151020" loc="41:/opt/tinyos-2.1.1/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2add08151020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08151370"/>
        <function-ref name="isInput" scoped="" ref="0x2add081514f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08151680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08151808"/>
        <function-ref name="get" scoped="" ref="0x2add08151990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08151b18"/>
        <function-ref name="set" scoped="" ref="0x2add08151ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add08151e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2add0813ed18" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2add0813ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add081660a0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08166228"/>
        <function-ref name="toggle" scoped="" ref="0x2add081663b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08166538"/>
        <function-ref name="get" scoped="" ref="0x2add081666c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08166848"/>
        <function-ref name="set" scoped="" ref="0x2add081669d0"/>
        <function-ref name="clr" scoped="" ref="0x2add08166b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2add08164020" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2add08164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08164370"/>
        <function-ref name="isInput" scoped="" ref="0x2add081644f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08164680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08164808"/>
        <function-ref name="get" scoped="" ref="0x2add08164990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08164b18"/>
        <function-ref name="set" scoped="" ref="0x2add08164ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add08164e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2add081622d8" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add081622d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08162628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2add081631b0" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2add081631b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08163500"/>
        <function-ref name="isInput" scoped="" ref="0x2add08163688"/>
        <function-ref name="toggle" scoped="" ref="0x2add08163810"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08163998"/>
        <function-ref name="get" scoped="" ref="0x2add08163b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08163ca8"/>
        <function-ref name="set" scoped="" ref="0x2add08163e30"/>
        <function-ref name="clr" scoped="" ref="0x2add08162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add08e0e8d8" loc="41:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add08e0e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08e0ec28"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08e0edb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08e0d020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08e0d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08e0d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2add08e0d578" loc="42:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add08e0d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08e0d8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add08e0da50"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08e0dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08e0dd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add08e0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2add08e0c268" loc="43:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add08e0c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add08e0c5b8"/>
        <function-ref name="source" scoped="" ref="0x2add08e0c740"/>
        <function-ref name="address" scoped="" ref="0x2add08e0c8c8"/>
        <function-ref name="destination" scoped="" ref="0x2add08e0ca50"/>
        <function-ref name="setSource" scoped="" ref="0x2add08e0cbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2add08e0cd60"/>
        <function-ref name="type" scoped="" ref="0x2add08e0b020"/>
        <function-ref name="setType" scoped="" ref="0x2add08e0b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2add08e0b330"/>
        <function-ref name="setGroup" scoped="" ref="0x2add08e0b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2add08e0b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2add08e0b8c8" loc="44:/opt/tinyos-2.1.1/tos/system/AMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2add08e0b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add08e0bc18"/>
        <function-ref name="noAck" scoped="" ref="0x2add08e0bda0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add08e0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add096fb718" loc="41:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add096fb718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add096fba68"/>
        <function-ref name="getPayload" scoped="" ref="0x2add096fbbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add096fbd78"/>
        <function-ref name="cancel" scoped="" ref="0x2add096fa020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add096fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2add096fa3f0" loc="42:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add096fa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add096fa740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add096fa8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add096faa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add096fabd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add096fad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2add096f9020" loc="43:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add096f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add096f9370"/>
        <function-ref name="source" scoped="" ref="0x2add096f94f8"/>
        <function-ref name="address" scoped="" ref="0x2add096f9680"/>
        <function-ref name="destination" scoped="" ref="0x2add096f9808"/>
        <function-ref name="setSource" scoped="" ref="0x2add096f9990"/>
        <function-ref name="setDestination" scoped="" ref="0x2add096f9b18"/>
        <function-ref name="type" scoped="" ref="0x2add096f9ca0"/>
        <function-ref name="setType" scoped="" ref="0x2add096f9e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2add096f8020"/>
        <function-ref name="setGroup" scoped="" ref="0x2add096f81a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2add096f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2add096f85b8" loc="44:/opt/tinyos-2.1.1/tos/system/DirectAMSenderC.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2add096f85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add096f8908"/>
        <function-ref name="noAck" scoped="" ref="0x2add096f8a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add096f8c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add096efa80" loc="36:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add096efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add096efdd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2add096ee020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add096ee1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2add096ee330"/>
        <function-ref name="sendDone" scoped="" ref="0x2add096ee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2add096ee760" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add096ee760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add096eeab0"/>
        <function-ref name="getPayload" scoped="" ref="0x2add096eec38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add096eedc0"/>
        <function-ref name="cancel" scoped="" ref="0x2add096ed020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add096ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2add096ed3f0" loc="39:/opt/tinyos-2.1.1/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SendingAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add096ed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add096ed740"/>
        <function-ref name="source" scoped="" ref="0x2add096ed8c8"/>
        <function-ref name="address" scoped="" ref="0x2add096eda50"/>
        <function-ref name="destination" scoped="" ref="0x2add096edbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2add096edd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2add096ec020"/>
        <function-ref name="type" scoped="" ref="0x2add096ec1a8"/>
        <function-ref name="setType" scoped="" ref="0x2add096ec330"/>
        <function-ref name="isForMe" scoped="" ref="0x2add096ec4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2add096ec640"/>
        <function-ref name="localGroup" scoped="" ref="0x2add096ec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add081a34f8" loc="35:/opt/tinyos-2.1.1/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add081a34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add081a3848"/>
        <function-ref name="getPayload" scoped="" ref="0x2add081a39d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add081a3b58"/>
        <function-ref name="cancel" scoped="" ref="0x2add081a3ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add081a3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2add081f66f8" loc="40:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add081f66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add081f6a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2add081f6bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add081f6d78"/>
        <function-ref name="cancel" scoped="" ref="0x2add081f5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add081f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add081f7920" loc="38:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add081f7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add081f7c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2add081f7e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add081f6020"/>
        <function-ref name="cancel" scoped="" ref="0x2add081f61a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add081f6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2add081f4a10" loc="42:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add081f4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add081f4d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add081f3020"/>
        <function-ref name="getPayload" scoped="" ref="0x2add081f31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add081f3330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add081f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2add081f3780" loc="161:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2add081f3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add081f3ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2add081f3c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2add081f2020" loc="118:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2add081f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add081f2370"/>
        <function-ref name="runTask" scoped="" ref="0x2add081f24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2add081f53f0" loc="41:/opt/tinyos-2.1.1/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add081f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add081f5740"/>
        <function-ref name="source" scoped="" ref="0x2add081f58c8"/>
        <function-ref name="address" scoped="" ref="0x2add081f5a50"/>
        <function-ref name="destination" scoped="" ref="0x2add081f5bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2add081f5d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2add081f4020"/>
        <function-ref name="type" scoped="" ref="0x2add081f41a8"/>
        <function-ref name="setType" scoped="" ref="0x2add081f4330"/>
        <function-ref name="isForMe" scoped="" ref="0x2add081f44b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2add081f4640"/>
        <function-ref name="localGroup" scoped="" ref="0x2add081f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add081ee248" loc="50:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add081ee248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add081ee598"/>
        <function-ref name="stopDone" scoped="" ref="0x2add081ee720"/>
        <function-ref name="start" scoped="" ref="0x2add081ee8a8"/>
        <function-ref name="stop" scoped="" ref="0x2add081eea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add081ed208" loc="52:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add081ed208"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add081ed558"/>
        <function-ref name="getPayload" scoped="" ref="0x2add081ed6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add081ed868"/>
        <function-ref name="cancel" scoped="" ref="0x2add081ed9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add081edb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2add081eb898" loc="54:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2add081eb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add081ebbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2add081ebe70" loc="56:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add081ebe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add082011e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add08201370"/>
        <function-ref name="getPayload" scoped="" ref="0x2add082014f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08201680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add08201808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2add081fc020" loc="59:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add081fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add0820f478"/>
        <function-ref name="clear" scoped="" ref="0x2add0820fb58"/>
        <function-ref name="isValid" scoped="" ref="0x2add081fcd70"/>
        <function-ref name="set" scoped="" ref="0x2add0820e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2add0821e848" loc="61:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2add0821e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2add0821eb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2add0821ed20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2add08209020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2add082091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08200ce0" loc="53:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08200ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add081eb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2add081fe1a0" loc="58:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add081fe1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add081fe4f0"/>
        <function-ref name="noAck" scoped="" ref="0x2add081fe678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add081fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2add08201aa8" loc="57:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add08201aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add08201df8"/>
        <function-ref name="source" scoped="" ref="0x2add081ff020"/>
        <function-ref name="address" scoped="" ref="0x2add081ff1a8"/>
        <function-ref name="destination" scoped="" ref="0x2add081ff330"/>
        <function-ref name="setSource" scoped="" ref="0x2add081ff4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2add081ff640"/>
        <function-ref name="type" scoped="" ref="0x2add081ff7c8"/>
        <function-ref name="setType" scoped="" ref="0x2add081ff950"/>
        <function-ref name="isForMe" scoped="" ref="0x2add081ffad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2add081ffc60"/>
        <function-ref name="localGroup" scoped="" ref="0x2add081ffde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2add0820ee48" loc="60:/opt/tinyos-2.1.1/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add0820ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add0820b300"/>
        <function-ref name="clear" scoped="" ref="0x2add0820b9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2add0820cbe8"/>
        <function-ref name="set" scoped="" ref="0x2add0820a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add0821a020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add0821a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0821a370"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0821a4f8"/>
        <function-ref name="start" scoped="" ref="0x2add0821a680"/>
        <function-ref name="stop" scoped="" ref="0x2add0821a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add0822d020" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add0822d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add0822d370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add0822d4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add0822d680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add0822d808"/>
        <function-ref name="setCca" scoped="" ref="0x2add0822d990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add0822db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2add0824e7d8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2add0824e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2add0824ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2add082168c8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add082168c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08216c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add08216da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08215020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add082151a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add08215330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add08219020" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add08219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08219370"/>
        <function-ref name="getPayload" scoped="" ref="0x2add082194f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08219680"/>
        <function-ref name="cancel" scoped="" ref="0x2add08219808"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08219990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2add08218d10" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2add08218d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add082170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2add08213020" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08213370"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add082134f8"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08213680"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08213808"/>
        <function-ref name="getPower" scoped="" ref="0x2add08213990"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08213b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2add0822de10" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2add0822de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2add0822c1a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2add0822c330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2add0822c4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2add0822c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add082181c8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add082181c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08218518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2add08213e40" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add08213e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add082121c0"/>
        <function-ref name="noAck" scoped="" ref="0x2add08212348"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add082124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2add08236c70" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2add08236c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2add0823e020"/>
        <function-ref name="setRetries" scoped="" ref="0x2add0823e1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2add0823e330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2add0823e4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2add0823e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2add08217340" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add08217340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add08217690"/>
        <function-ref name="source" scoped="" ref="0x2add08217818"/>
        <function-ref name="address" scoped="" ref="0x2add082179a0"/>
        <function-ref name="destination" scoped="" ref="0x2add08217b28"/>
        <function-ref name="setSource" scoped="" ref="0x2add08217cb0"/>
        <function-ref name="setDestination" scoped="" ref="0x2add08217e38"/>
        <function-ref name="type" scoped="" ref="0x2add08216020"/>
        <function-ref name="setType" scoped="" ref="0x2add082161a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2add08216330"/>
        <function-ref name="setGroup" scoped="" ref="0x2add082164b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2add08216640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2add08229250" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08229250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2add082295a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add082354d8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add082354d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add08235828"/>
        <function-ref name="stopDone" scoped="" ref="0x2add082359b0"/>
        <function-ref name="start" scoped="" ref="0x2add08235b38"/>
        <function-ref name="stop" scoped="" ref="0x2add08235cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2add082449a0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add082449a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08244cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08244e78"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08243030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add082431b8"/>
        <function-ref name="getPower" scoped="" ref="0x2add08243340"/>
        <function-ref name="getLqi" scoped="" ref="0x2add082434c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add0824a298" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add0824a298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add0824a5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add0824a770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add0824a8f8"/>
        <function-ref name="cancel" scoped="" ref="0x2add0824aa80"/>
        <function-ref name="sendDone" scoped="" ref="0x2add0824ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2add08249690" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2add08249690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add082499e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08249b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08249cf0"/>
        <function-ref name="cancel" scoped="" ref="0x2add08249e78"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08244030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2add082427c0" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2add082427c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2add08242b10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2add08242c98"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2add08242e20"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2add08241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08249020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08249020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08249370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2add082437f0" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add082437f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add08243b40"/>
        <function-ref name="noAck" scoped="" ref="0x2add08243cc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add08243e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08245620" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08245620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08245970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08245af8"/>
        <function-ref name="request" scoped="" ref="0x2add08245c80"/>
        <function-ref name="granted" scoped="" ref="0x2add08245e08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0824a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2add08244388" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2add08244388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add082446d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2add082412d0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2add082412d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2add08241620"/>
        <function-ref name="setRetries" scoped="" ref="0x2add082417a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2add08241930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2add08241ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2add08241c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2add08242178" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08242178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2add082424c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add082556d8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add082556d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add08255a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2add08255bb0"/>
        <function-ref name="start" scoped="" ref="0x2add08255d38"/>
        <function-ref name="stop" scoped="" ref="0x2add08254020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add08253678" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add08253678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add082539c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add08253b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add08253cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add08253e60"/>
        <function-ref name="setCca" scoped="" ref="0x2add08252020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add082521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add082542d8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add082542d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08254628"/>
        <function-ref name="getPayload" scoped="" ref="0x2add082547b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08254938"/>
        <function-ref name="cancel" scoped="" ref="0x2add08254ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08254c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08253020" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08253370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add0824f140" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add0824f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0824f490"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0824f618"/>
        <function-ref name="start" scoped="" ref="0x2add0824f7a0"/>
        <function-ref name="stop" scoped="" ref="0x2add0824f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add08269948" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add08269948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add08269c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add08269e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add08268020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add082681a8"/>
        <function-ref name="setCca" scoped="" ref="0x2add08268330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add082684b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2add08265a70" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2add08265a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add08265dc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add0825f020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add0825f1a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add0825f330"/>
        <function-ref name="setCca" scoped="" ref="0x2add0825f4b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add0825f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2add08270c58" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08270c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add0826e020"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add0826e1a8"/>
        <function-ref name="getRssi" scoped="" ref="0x2add0826e330"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add0826e4b8"/>
        <function-ref name="getPower" scoped="" ref="0x2add0826e640"/>
        <function-ref name="getLqi" scoped="" ref="0x2add0826e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2add08273cc8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2add08273cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add082650a0"/>
        <function-ref name="cancel" scoped="" ref="0x2add08265228"/>
        <function-ref name="modify" scoped="" ref="0x2add082653b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08265538"/>
        <function-ref name="resend" scoped="" ref="0x2add082656c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add0824fbe0" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add0824fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08269020"/>
        <function-ref name="getPayload" scoped="" ref="0x2add082691a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08269330"/>
        <function-ref name="cancel" scoped="" ref="0x2add082694b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08269640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2add0826fd58" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2add0826fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2add082710d8"/>
        <function-ref name="rand32" scoped="" ref="0x2add08271260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2add0825d500" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2add0825d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add0825d850"/>
        <function-ref name="stop" scoped="" ref="0x2add0825d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add082845f0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add082845f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08284940"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08284ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2add08260a78" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2add08260a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2add08260dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x2add08266020"/>
        <function-ref name="rxOn" scoped="" ref="0x2add082661a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2add08266330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2add082664b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2add08266640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2add082667c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2add08266950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add08271518" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add08271518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add08271868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add082719f0"/>
        <function-ref name="led1On" scoped="" ref="0x2add08271b78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add08271d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add08270020"/>
        <function-ref name="get" scoped="" ref="0x2add082701a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add08270330"/>
        <function-ref name="led2Off" scoped="" ref="0x2add08270950"/>
        <function-ref name="set" scoped="" ref="0x2add082704b8"/>
        <function-ref name="led0On" scoped="" ref="0x2add08270640"/>
        <function-ref name="led2On" scoped="" ref="0x2add082707c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add08268798" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08268798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08268ae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08268c70"/>
        <function-ref name="request" scoped="" ref="0x2add08268df8"/>
        <function-ref name="granted" scoped="" ref="0x2add08267020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add082671a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2add0827f768" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2add0827f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add0827fbb8"/>
        <function-ref name="toIdle" scoped="" ref="0x2add0827fd40"/>
        <function-ref name="isState" scoped="" ref="0x2add0826d020"/>
        <function-ref name="isIdle" scoped="" ref="0x2add0826d1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2add0826d330"/>
        <function-ref name="forceState" scoped="" ref="0x2add0826d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2add0827a020" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2add0827a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add0827a370"/>
        <function-ref name="runTask" scoped="" ref="0x2add0827a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2add0827c120" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2add0827c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add0827c470"/>
        <function-ref name="runTask" scoped="" ref="0x2add0827c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2add0827d298" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2add0827d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add0827d5e8"/>
        <function-ref name="runTask" scoped="" ref="0x2add0827d770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2add082c5020" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2add082c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2add082c5370"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2add082c54f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2add082c5680"/>
        <function-ref name="syncDone" scoped="" ref="0x2add082c5808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2add082c5990"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2add082c5b18"/>
        <function-ref name="setChannel" scoped="" ref="0x2add082c5ca0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2add082c5e28"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2add082c4020"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2add082c41a8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2add082c4330"/>
        <function-ref name="sync" scoped="" ref="0x2add082c44b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add082c4640"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2add082c48c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2add082d6020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2add082d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add082d6b68"/>
        <function-ref name="readDone" scoped="" ref="0x2add082d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2add082c4bc0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2add082c4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2add082d7020"/>
        <function-ref name="rfOff" scoped="" ref="0x2add082d71a8"/>
        <function-ref name="rxOn" scoped="" ref="0x2add082d7330"/>
        <function-ref name="startVReg" scoped="" ref="0x2add082d74b8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2add082d7640"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2add082d77c8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2add082d7950"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2add082d7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add082c9a48" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add082c9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add082c9d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add082c6020"/>
        <function-ref name="request" scoped="" ref="0x2add082c61a8"/>
        <function-ref name="granted" scoped="" ref="0x2add082c6330"/>
        <function-ref name="isOwner" scoped="" ref="0x2add082c64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2add082ee638" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2add082ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2add082ee988"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2add082eeb10"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2add082eec98"/>
        <function-ref name="syncDone" scoped="" ref="0x2add082eee20"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2add082ed020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2add082ed1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2add082ed330"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2add082ed4b8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2add082ed640"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2add082ed7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2add082ed950"/>
        <function-ref name="sync" scoped="" ref="0x2add082edad8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add082edc60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2add082ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2add083063c0" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add083063c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08306710"/>
        <function-ref name="write" scoped="" ref="0x2add08306898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2add082e9020" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2add082e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add082e0690"/>
        <function-ref name="fired" scoped="" ref="0x2add082e16f8"/>
        <function-ref name="startAt" scoped="" ref="0x2add082e0088"/>
        <function-ref name="isRunning" scoped="" ref="0x2add082e1b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add082e0b18"/>
        <function-ref name="start" scoped="" ref="0x2add082e9d70"/>
        <function-ref name="stop" scoped="" ref="0x2add082e1270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2add0830a158" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add0830a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0830a4a8"/>
        <function-ref name="write" scoped="" ref="0x2add0830a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2add082fc1b0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2add082fc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add082fc500"/>
        <function-ref name="isInput" scoped="" ref="0x2add082fc688"/>
        <function-ref name="toggle" scoped="" ref="0x2add082fc810"/>
        <function-ref name="isOutput" scoped="" ref="0x2add082fc998"/>
        <function-ref name="get" scoped="" ref="0x2add082fcb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add082fcca8"/>
        <function-ref name="set" scoped="" ref="0x2add082fce30"/>
        <function-ref name="clr" scoped="" ref="0x2add082fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2add082eb658" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2add082eb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add082ea1e8"/>
        <function-ref name="readDone" scoped="" ref="0x2add082ea638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2add08314ad0" loc="118:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2add08314ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08314e20"/>
        <function-ref name="runTask" scoped="" ref="0x2add08313020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2add08306c20" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add08306c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08305020"/>
        <function-ref name="write" scoped="" ref="0x2add083051a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2add082f4020" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add082f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add082f4370"/>
        <function-ref name="write" scoped="" ref="0x2add082f44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2add082f01b0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add082f01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2add082f0500"/>
        <function-ref name="changed" scoped="" ref="0x2add082f0688"/>
        <function-ref name="amGroup" scoped="" ref="0x2add082f0810"/>
        <function-ref name="setAddress" scoped="" ref="0x2add082f0998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2add082fd020" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2add082fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add082fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2add082fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add082fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add082fd808"/>
        <function-ref name="get" scoped="" ref="0x2add082fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add082fdb18"/>
        <function-ref name="set" scoped="" ref="0x2add082fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2add082fde28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2add083043c0" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add083043c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08304710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2add082fb378" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2add082fb378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add082fb6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2add082fb850"/>
        <function-ref name="toggle" scoped="" ref="0x2add082fb9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add082fbb60"/>
        <function-ref name="get" scoped="" ref="0x2add082fbce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add082fbe70"/>
        <function-ref name="set" scoped="" ref="0x2add082fa020"/>
        <function-ref name="clr" scoped="" ref="0x2add082fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add082d12b0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add082d12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add082d1600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2add0830a9e0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add0830a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0830ad30"/>
        <function-ref name="write" scoped="" ref="0x2add08306020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2add08304aa0" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add08304aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08304df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2add083031c8" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2add083031c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08303518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add083036a0"/>
        <function-ref name="request" scoped="" ref="0x2add08303828"/>
        <function-ref name="granted" scoped="" ref="0x2add083039b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08303b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2add082ff020" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2add082ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add082ff370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add082ff4f8"/>
        <function-ref name="request" scoped="" ref="0x2add082ff680"/>
        <function-ref name="granted" scoped="" ref="0x2add082ff808"/>
        <function-ref name="isOwner" scoped="" ref="0x2add082ff990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2add082ec318" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2add082ec318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2add082ec668"/>
        <function-ref name="rfOff" scoped="" ref="0x2add082ec7f0"/>
        <function-ref name="rxOn" scoped="" ref="0x2add082ec978"/>
        <function-ref name="startVReg" scoped="" ref="0x2add082ecb00"/>
        <function-ref name="stopVReg" scoped="" ref="0x2add082ecc88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2add082ece10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2add082eb020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2add082eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2add082f4890" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add082f4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add082f4be0"/>
        <function-ref name="write" scoped="" ref="0x2add082f4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2add08307678" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add08307678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08307ac8"/>
        <function-ref name="write" scoped="" ref="0x2add08307c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2add08302460" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add08302460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add083027b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add082ffc48" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add082ffc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add082fe020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add082fe1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2add082fe330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add082fe4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add082fe640"/>
        <function-ref name="get" scoped="" ref="0x2add082fe7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add082fe950"/>
        <function-ref name="led2Off" scoped="" ref="0x2add0831b020"/>
        <function-ref name="set" scoped="" ref="0x2add082fead8"/>
        <function-ref name="led0On" scoped="" ref="0x2add082fec60"/>
        <function-ref name="led2On" scoped="" ref="0x2add082fede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2add08316c30" loc="117:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2add08316c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08314020"/>
        <function-ref name="runTask" scoped="" ref="0x2add083141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add082d18e0" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add082d18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add082d1c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add082d1db8"/>
        <function-ref name="request" scoped="" ref="0x2add082ee020"/>
        <function-ref name="granted" scoped="" ref="0x2add082ee1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add082ee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2add082f8118" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add082f8118"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add082f8468"/>
        <function-ref name="write" scoped="" ref="0x2add082f85f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2add082f5b78" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2add082f5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add082f9020"/>
        <function-ref name="disable" scoped="" ref="0x2add082f91a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add082f9330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add082f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2add08301020" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2add08301020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08301570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add083016f8"/>
        <function-ref name="request" scoped="" ref="0x2add08301880"/>
        <function-ref name="granted" scoped="" ref="0x2add08301a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08301b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2add08302b38" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add08302b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08304020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add0836c7d8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add0836c7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add0836cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2add083891c8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2add083891c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08386918"/>
        <function-ref name="fired" scoped="" ref="0x2add08387980"/>
        <function-ref name="startAt" scoped="" ref="0x2add08386310"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08387e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add08386da0"/>
        <function-ref name="start" scoped="" ref="0x2add08387020"/>
        <function-ref name="stop" scoped="" ref="0x2add083874f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add083839e8" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add083839e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add085b9088"/>
        <function-ref name="fired" scoped="" ref="0x2add085ba0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2add085baa08"/>
        <function-ref name="isRunning" scoped="" ref="0x2add085ba580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add085b9510"/>
        <function-ref name="start" scoped="" ref="0x2add085be768"/>
        <function-ref name="stop" scoped="" ref="0x2add085bec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add085b9928" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add085b9928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add085b9c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add09777270" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add09777270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09775918"/>
        <function-ref name="fired" scoped="" ref="0x2add09776980"/>
        <function-ref name="startAt" scoped="" ref="0x2add09775310"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09776e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add09775da0"/>
        <function-ref name="start" scoped="" ref="0x2add09776020"/>
        <function-ref name="stop" scoped="" ref="0x2add097764f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add09771670" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add09771670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0976ecc0"/>
        <function-ref name="fired" scoped="" ref="0x2add09770d50"/>
        <function-ref name="startAt" scoped="" ref="0x2add0976e6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add0976e230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add0976d190"/>
        <function-ref name="start" scoped="" ref="0x2add097703f0"/>
        <function-ref name="stop" scoped="" ref="0x2add097708c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2add083b87d0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2add083b87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add083b8b20"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2add083b8ca8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add083b8e30"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2add0839f020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add0839f1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add0839f330"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2add0839f4b8"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2add0839f640"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2add0839f7c8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2add0839f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2add0839e108" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2add0839e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2add083ae270"/>
        <function-ref name="test" scoped="" ref="0x2add083af930"/>
        <function-ref name="get" scoped="" ref="0x2add0839ec88"/>
        <function-ref name="captured" scoped="" ref="0x2add083b7628"/>
        <function-ref name="reset" scoped="" ref="0x2add083b7b00"/>
        <function-ref name="isOn" scoped="" ref="0x2add083afdb8"/>
        <function-ref name="set" scoped="" ref="0x2add083b7150"/>
        <function-ref name="start" scoped="" ref="0x2add083af020"/>
        <function-ref name="stop" scoped="" ref="0x2add083af4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2add083ad598" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2add083ad598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add083c7db8"/>
        <function-ref name="fired" scoped="" ref="0x2add083c8ab0"/>
        <function-ref name="get" scoped="" ref="0x2add083c8150"/>
        <function-ref name="reset" scoped="" ref="0x2add083c7020"/>
        <function-ref name="isOn" scoped="" ref="0x2add083c6270"/>
        <function-ref name="set" scoped="" ref="0x2add083c85d8"/>
        <function-ref name="start" scoped="" ref="0x2add083c74a8"/>
        <function-ref name="stop" scoped="" ref="0x2add083c7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add083a3680" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add083a3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add083a1798"/>
        <function-ref name="test" scoped="" ref="0x2add083a2e20"/>
        <function-ref name="get" scoped="" ref="0x2add083ab230"/>
        <function-ref name="setScale" scoped="" ref="0x2add083a1c20"/>
        <function-ref name="getScale" scoped="" ref="0x2add083a0130"/>
        <function-ref name="reset" scoped="" ref="0x2add083a2088"/>
        <function-ref name="overflow" scoped="" ref="0x2add083abb90"/>
        <function-ref name="isOn" scoped="" ref="0x2add083a1310"/>
        <function-ref name="set" scoped="" ref="0x2add083ab6b8"/>
        <function-ref name="start" scoped="" ref="0x2add083a2510"/>
        <function-ref name="stop" scoped="" ref="0x2add083a2998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2add083de0c0" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2add083de0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2add083de410"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add083de598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add083de720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add083de8a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add083dea30"/>
        <function-ref name="setControl" scoped="" ref="0x2add083debb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2add083d0900" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2add083d0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2add083d0c50"/>
        <function-ref name="compareBusy" scoped="" ref="0x2add083d0dd8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2add083d4020"/>
        <function-ref name="countBusy" scoped="" ref="0x2add083d41a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2add083d4330"/>
        <function-ref name="setAssr" scoped="" ref="0x2add083d44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2add083dd0a8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2add083dd0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add083d7930"/>
        <function-ref name="fired" scoped="" ref="0x2add083d85d0"/>
        <function-ref name="get" scoped="" ref="0x2add083ddc28"/>
        <function-ref name="reset" scoped="" ref="0x2add083d8a58"/>
        <function-ref name="isOn" scoped="" ref="0x2add083d7db8"/>
        <function-ref name="set" scoped="" ref="0x2add083d80f8"/>
        <function-ref name="start" scoped="" ref="0x2add083d7020"/>
        <function-ref name="stop" scoped="" ref="0x2add083d74a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add083c2398" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add083c2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add083bf580"/>
        <function-ref name="test" scoped="" ref="0x2add083c0c20"/>
        <function-ref name="get" scoped="" ref="0x2add083c1020"/>
        <function-ref name="setScale" scoped="" ref="0x2add083bfa08"/>
        <function-ref name="getScale" scoped="" ref="0x2add083df020"/>
        <function-ref name="reset" scoped="" ref="0x2add083c1e08"/>
        <function-ref name="overflow" scoped="" ref="0x2add083c1980"/>
        <function-ref name="isOn" scoped="" ref="0x2add083bf0f8"/>
        <function-ref name="set" scoped="" ref="0x2add083c14a8"/>
        <function-ref name="start" scoped="" ref="0x2add083c0310"/>
        <function-ref name="stop" scoped="" ref="0x2add083c0798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2add083ea888" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2add083ea888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2add083eabd8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add083ead60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add083e9020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add083e91a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add083e9330"/>
        <function-ref name="setControl" scoped="" ref="0x2add083e94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2add083e5b78" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2add083e5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2add083e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2add083e43d0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2add083e43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2add083e4720"/>
        <function-ref name="compareBusy" scoped="" ref="0x2add083e48a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2add083e4a30"/>
        <function-ref name="countBusy" scoped="" ref="0x2add083e4bb8"/>
        <function-ref name="getAssr" scoped="" ref="0x2add083e4d40"/>
        <function-ref name="setAssr" scoped="" ref="0x2add083e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2add083e9980" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2add083e9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add083e5270"/>
        <function-ref name="fired" scoped="" ref="0x2add083e7020"/>
        <function-ref name="get" scoped="" ref="0x2add083e8560"/>
        <function-ref name="reset" scoped="" ref="0x2add083e74a8"/>
        <function-ref name="isOn" scoped="" ref="0x2add083e56f8"/>
        <function-ref name="set" scoped="" ref="0x2add083e89e8"/>
        <function-ref name="start" scoped="" ref="0x2add083e7930"/>
        <function-ref name="stop" scoped="" ref="0x2add083e7db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add083ef880" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add083ef880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add083ec998"/>
        <function-ref name="test" scoped="" ref="0x2add083ec088"/>
        <function-ref name="get" scoped="" ref="0x2add083ee490"/>
        <function-ref name="setScale" scoped="" ref="0x2add083ece20"/>
        <function-ref name="getScale" scoped="" ref="0x2add083ea350"/>
        <function-ref name="reset" scoped="" ref="0x2add083ed2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2add083eedf0"/>
        <function-ref name="isOn" scoped="" ref="0x2add083ec510"/>
        <function-ref name="set" scoped="" ref="0x2add083ee918"/>
        <function-ref name="start" scoped="" ref="0x2add083ed738"/>
        <function-ref name="stop" scoped="" ref="0x2add083edbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2add08457020" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2add08457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add08457370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2add084574f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add08457680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2add08457808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add08457990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add08457b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2add08457ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2add08457e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2add08456020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2add084561a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2add08469a48" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2add08469a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2add08469d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add08468020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add084681a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add08468330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add084684b8"/>
        <function-ref name="setControl" scoped="" ref="0x2add08468640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2add08452e60" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2add08452e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add0844e798"/>
        <function-ref name="fired" scoped="" ref="0x2add084504f8"/>
        <function-ref name="get" scoped="" ref="0x2add08451a18"/>
        <function-ref name="reset" scoped="" ref="0x2add08450980"/>
        <function-ref name="isOn" scoped="" ref="0x2add0844ec20"/>
        <function-ref name="set" scoped="" ref="0x2add08450020"/>
        <function-ref name="start" scoped="" ref="0x2add08450e08"/>
        <function-ref name="stop" scoped="" ref="0x2add0844e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2add08456680" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2add08456680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2add08452798"/>
        <function-ref name="test" scoped="" ref="0x2add08454e58"/>
        <function-ref name="get" scoped="" ref="0x2add08455230"/>
        <function-ref name="captured" scoped="" ref="0x2add08455b90"/>
        <function-ref name="reset" scoped="" ref="0x2add084540c0"/>
        <function-ref name="isOn" scoped="" ref="0x2add08452310"/>
        <function-ref name="set" scoped="" ref="0x2add084556b8"/>
        <function-ref name="start" scoped="" ref="0x2add08454548"/>
        <function-ref name="stop" scoped="" ref="0x2add084549d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2add0844d2b8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2add0844d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add0844ba40"/>
        <function-ref name="fired" scoped="" ref="0x2add0844c7e8"/>
        <function-ref name="get" scoped="" ref="0x2add0844de38"/>
        <function-ref name="reset" scoped="" ref="0x2add0844cc70"/>
        <function-ref name="isOn" scoped="" ref="0x2add08449020"/>
        <function-ref name="set" scoped="" ref="0x2add0844c310"/>
        <function-ref name="start" scoped="" ref="0x2add0844b130"/>
        <function-ref name="stop" scoped="" ref="0x2add0844b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2add08449698" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2add08449698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add08469020"/>
        <function-ref name="fired" scoped="" ref="0x2add0846cd08"/>
        <function-ref name="get" scoped="" ref="0x2add0846c3a8"/>
        <function-ref name="reset" scoped="" ref="0x2add0846b1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2add084694a8"/>
        <function-ref name="set" scoped="" ref="0x2add0846c830"/>
        <function-ref name="start" scoped="" ref="0x2add0846b680"/>
        <function-ref name="stop" scoped="" ref="0x2add0846bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add0843be08" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add0843be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add084580f8"/>
        <function-ref name="test" scoped="" ref="0x2add0845a798"/>
        <function-ref name="get" scoped="" ref="0x2add08438a18"/>
        <function-ref name="setScale" scoped="" ref="0x2add08458580"/>
        <function-ref name="getScale" scoped="" ref="0x2add08458a58"/>
        <function-ref name="reset" scoped="" ref="0x2add08437980"/>
        <function-ref name="overflow" scoped="" ref="0x2add084374f8"/>
        <function-ref name="isOn" scoped="" ref="0x2add0845ac20"/>
        <function-ref name="set" scoped="" ref="0x2add08437020"/>
        <function-ref name="start" scoped="" ref="0x2add08437e08"/>
        <function-ref name="stop" scoped="" ref="0x2add0845a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add084debc8" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add084debc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2add07dd0208"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2add07dd0208"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add084dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add084dd3f0" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add084dd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add084f4580"/>
        <function-ref name="test" scoped="" ref="0x2add084f5c20"/>
        <function-ref name="get" scoped="" ref="0x2add084f7020"/>
        <function-ref name="setScale" scoped="" ref="0x2add084f4a08"/>
        <function-ref name="getScale" scoped="" ref="0x2add084f3020"/>
        <function-ref name="reset" scoped="" ref="0x2add084f7e08"/>
        <function-ref name="overflow" scoped="" ref="0x2add084f7980"/>
        <function-ref name="isOn" scoped="" ref="0x2add084f40f8"/>
        <function-ref name="set" scoped="" ref="0x2add084f74a8"/>
        <function-ref name="start" scoped="" ref="0x2add084f5310"/>
        <function-ref name="stop" scoped="" ref="0x2add084f5798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add0975cbc8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add0975cbc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2add07dc7e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2add07dc7e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09758270"/>
        <function-ref name="fired" scoped="" ref="0x2add09759310"/>
        <function-ref name="startAt" scoped="" ref="0x2add09759c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09759798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add097586f8"/>
        <function-ref name="start" scoped="" ref="0x2add0975b948"/>
        <function-ref name="stop" scoped="" ref="0x2add0975be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2add09753c68" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2add09753c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add0974f4a8"/>
        <function-ref name="fired" scoped="" ref="0x2add097511d0"/>
        <function-ref name="get" scoped="" ref="0x2add09752820"/>
        <function-ref name="reset" scoped="" ref="0x2add09751658"/>
        <function-ref name="isOn" scoped="" ref="0x2add0974f930"/>
        <function-ref name="set" scoped="" ref="0x2add09752ca8"/>
        <function-ref name="start" scoped="" ref="0x2add09751ae0"/>
        <function-ref name="stop" scoped="" ref="0x2add0974f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2add09758c18" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2add09758c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add09754db8"/>
        <function-ref name="test" scoped="" ref="0x2add097544a8"/>
        <function-ref name="get" scoped="" ref="0x2add09757820"/>
        <function-ref name="setScale" scoped="" ref="0x2add09753270"/>
        <function-ref name="getScale" scoped="" ref="0x2add09753748"/>
        <function-ref name="reset" scoped="" ref="0x2add09756658"/>
        <function-ref name="overflow" scoped="" ref="0x2add097561d0"/>
        <function-ref name="isOn" scoped="" ref="0x2add09754930"/>
        <function-ref name="set" scoped="" ref="0x2add09757ca8"/>
        <function-ref name="start" scoped="" ref="0x2add09756ae0"/>
        <function-ref name="stop" scoped="" ref="0x2add09754020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add0854ed70" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add0854ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add0852baf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add0852a4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add0852a020"/>
        <function-ref name="overflow" scoped="" ref="0x2add0852a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add0854dad0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add0854dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08549860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add085481f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08549ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2add08548680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add08545a98" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add08545a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add0855c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add0855b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add0855ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2add0855b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add0855bb78" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add0855bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add08557c20"/>
        <function-ref name="test" scoped="" ref="0x2add08557310"/>
        <function-ref name="get" scoped="" ref="0x2add08559728"/>
        <function-ref name="setScale" scoped="" ref="0x2add085550f8"/>
        <function-ref name="getScale" scoped="" ref="0x2add085555d0"/>
        <function-ref name="reset" scoped="" ref="0x2add08558548"/>
        <function-ref name="overflow" scoped="" ref="0x2add085580c0"/>
        <function-ref name="isOn" scoped="" ref="0x2add08557798"/>
        <function-ref name="set" scoped="" ref="0x2add08559bb0"/>
        <function-ref name="start" scoped="" ref="0x2add085589d0"/>
        <function-ref name="stop" scoped="" ref="0x2add08558e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2add085852b0" loc="52:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2add085852b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08584088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08584998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08584510"/>
        <function-ref name="overflow" scoped="" ref="0x2add08584e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add085880e0" loc="51:/opt/tinyos-2.1.1/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add085880e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08588e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08586798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08586310"/>
        <function-ref name="overflow" scoped="" ref="0x2add08586c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add0976b3b8" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add0976b3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09769ab0"/>
        <function-ref name="fired" scoped="" ref="0x2add0976aa90"/>
        <function-ref name="startAt" scoped="" ref="0x2add097694a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09769020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add09767020"/>
        <function-ref name="start" scoped="" ref="0x2add0976a130"/>
        <function-ref name="stop" scoped="" ref="0x2add0976a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2add09765860" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2add09765860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="TOne" ref="0x2add07e98720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09761020"/>
        <function-ref name="fired" scoped="" ref="0x2add09763020"/>
        <function-ref name="startAt" scoped="" ref="0x2add09763930"/>
        <function-ref name="isRunning" scoped="" ref="0x2add097634a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add097614a8"/>
        <function-ref name="start" scoped="" ref="0x2add097645e0"/>
        <function-ref name="stop" scoped="" ref="0x2add09764ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2add09767648" loc="57:/opt/tinyos-2.1.1/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add09767648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add097663f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add09766d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add09766878"/>
        <function-ref name="overflow" scoped="" ref="0x2add097651f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add085bfa58" loc="18:/opt/tinyos-2.1.1/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add085bfa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add085bfda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2add085dd020" loc="68:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2add085dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085dd370"/>
        <function-ref name="isInput" scoped="" ref="0x2add085dd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add085dd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085dd808"/>
        <function-ref name="get" scoped="" ref="0x2add085dd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085ddb18"/>
        <function-ref name="set" scoped="" ref="0x2add085ddca0"/>
        <function-ref name="clr" scoped="" ref="0x2add085dde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2add085dc198" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2add085dc198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085dc4e8"/>
        <function-ref name="isInput" scoped="" ref="0x2add085dc670"/>
        <function-ref name="toggle" scoped="" ref="0x2add085dc7f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085dc980"/>
        <function-ref name="get" scoped="" ref="0x2add085dcb08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085dcc90"/>
        <function-ref name="set" scoped="" ref="0x2add085dce18"/>
        <function-ref name="clr" scoped="" ref="0x2add085db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2add085db338" loc="70:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2add085db338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085db688"/>
        <function-ref name="isInput" scoped="" ref="0x2add085db810"/>
        <function-ref name="toggle" scoped="" ref="0x2add085db998"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085dbb20"/>
        <function-ref name="get" scoped="" ref="0x2add085dbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085dbe30"/>
        <function-ref name="set" scoped="" ref="0x2add085da020"/>
        <function-ref name="clr" scoped="" ref="0x2add085da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2add085dfde0" loc="67:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2add085dfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085de170"/>
        <function-ref name="isInput" scoped="" ref="0x2add085de2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add085de480"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085de608"/>
        <function-ref name="get" scoped="" ref="0x2add085de790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085de918"/>
        <function-ref name="set" scoped="" ref="0x2add085deaa0"/>
        <function-ref name="clr" scoped="" ref="0x2add085dec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2add085d9648" loc="72:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2add085d9648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085d9998"/>
        <function-ref name="isInput" scoped="" ref="0x2add085d9b20"/>
        <function-ref name="toggle" scoped="" ref="0x2add085d9ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085d9e30"/>
        <function-ref name="get" scoped="" ref="0x2add085d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085d71a8"/>
        <function-ref name="set" scoped="" ref="0x2add085d7330"/>
        <function-ref name="clr" scoped="" ref="0x2add085d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2add0838ac88" loc="66:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2add0838ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085df020"/>
        <function-ref name="isInput" scoped="" ref="0x2add085df1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add085df330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085df4b8"/>
        <function-ref name="get" scoped="" ref="0x2add085df640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085df7c8"/>
        <function-ref name="set" scoped="" ref="0x2add085df950"/>
        <function-ref name="clr" scoped="" ref="0x2add085dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2add085da4b0" loc="71:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2add085da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add085da800"/>
        <function-ref name="isInput" scoped="" ref="0x2add085da988"/>
        <function-ref name="toggle" scoped="" ref="0x2add085dab10"/>
        <function-ref name="isOutput" scoped="" ref="0x2add085dac98"/>
        <function-ref name="get" scoped="" ref="0x2add085dae20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add085d9020"/>
        <function-ref name="set" scoped="" ref="0x2add085d91a8"/>
        <function-ref name="clr" scoped="" ref="0x2add085d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2add085f4700" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2add085f4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2add085f4a50"/>
        <function-ref name="disable" scoped="" ref="0x2add085f4bd8"/>
        <function-ref name="captured" scoped="" ref="0x2add085f4d60"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2add085cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2add085cd3f0" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2add085cd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add085cd740"/>
        <function-ref name="disable" scoped="" ref="0x2add085cd8c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add085cda50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add085cdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2add085cc020" loc="41:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2add085cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add085cc370"/>
        <function-ref name="disable" scoped="" ref="0x2add085cc4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add085cc680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add085cc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2add085f2818" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2add085f2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2add085f2b68"/>
        <function-ref name="disable" scoped="" ref="0x2add085f2cf0"/>
        <function-ref name="captured" scoped="" ref="0x2add085f2e78"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2add085e1030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2add085e1400" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2add085e1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2add08608580"/>
        <function-ref name="test" scoped="" ref="0x2add08609c20"/>
        <function-ref name="get" scoped="" ref="0x2add085e0020"/>
        <function-ref name="captured" scoped="" ref="0x2add085e0980"/>
        <function-ref name="reset" scoped="" ref="0x2add085e0e58"/>
        <function-ref name="isOn" scoped="" ref="0x2add086080f8"/>
        <function-ref name="set" scoped="" ref="0x2add085e04a8"/>
        <function-ref name="start" scoped="" ref="0x2add08609310"/>
        <function-ref name="stop" scoped="" ref="0x2add08609798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2add08603b10" loc="9:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2add08603b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08603e60"/>
        <function-ref name="fired" scoped="" ref="0x2add0861d020"/>
        <function-ref name="disable" scoped="" ref="0x2add0861d1a8"/>
        <function-ref name="edge" scoped="" ref="0x2add0861d330"/>
        <function-ref name="enable" scoped="" ref="0x2add0861d4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2add0861d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2add08603060" loc="8:/opt/tinyos-2.1.1/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2add08603060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add086033b0"/>
        <function-ref name="disable" scoped="" ref="0x2add08603538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add086036c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add08603848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2add08614b38" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2add08614b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08613020"/>
        <function-ref name="fired" scoped="" ref="0x2add086131a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08613330"/>
        <function-ref name="edge" scoped="" ref="0x2add086134b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08613640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2add08619b38" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2add08619b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08618020"/>
        <function-ref name="fired" scoped="" ref="0x2add086181a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08618330"/>
        <function-ref name="edge" scoped="" ref="0x2add086184b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08618640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2add08616b38" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2add08616b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08615020"/>
        <function-ref name="fired" scoped="" ref="0x2add086151a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08615330"/>
        <function-ref name="edge" scoped="" ref="0x2add086154b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08615640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2add08613b38" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2add08613b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08612020"/>
        <function-ref name="fired" scoped="" ref="0x2add086121a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08612330"/>
        <function-ref name="edge" scoped="" ref="0x2add086124b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08612640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2add08618b38" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2add08618b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08617020"/>
        <function-ref name="fired" scoped="" ref="0x2add086171a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08617330"/>
        <function-ref name="edge" scoped="" ref="0x2add086174b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08617640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2add08615b38" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2add08615b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08614020"/>
        <function-ref name="fired" scoped="" ref="0x2add086141a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08614330"/>
        <function-ref name="edge" scoped="" ref="0x2add086144b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08614640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2add0861cb70" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2add0861cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08619020"/>
        <function-ref name="fired" scoped="" ref="0x2add086191a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08619330"/>
        <function-ref name="edge" scoped="" ref="0x2add086194b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08619640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2add08617b38" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2add08617b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08616020"/>
        <function-ref name="fired" scoped="" ref="0x2add086161a8"/>
        <function-ref name="disable" scoped="" ref="0x2add08616330"/>
        <function-ref name="edge" scoped="" ref="0x2add086164b8"/>
        <function-ref name="enable" scoped="" ref="0x2add08616640"/>
        <function-ref name="getValue" scoped="" ref="0x2add086167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2add0860b758" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2add0860b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2add0860e020" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2add0860e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2add0860d758" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2add0860d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2add0860a020" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2add0860a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2add0860e758" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2add0860e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2add0860b020" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2add0860b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2add0860c850" loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2add0860c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2add0860d020" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2add0860d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0860d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add08645258" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add08645258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add086455a8"/>
        <function-ref name="fired" scoped="" ref="0x2add08645730"/>
        <function-ref name="disable" scoped="" ref="0x2add086458b8"/>
        <function-ref name="edge" scoped="" ref="0x2add08645a40"/>
        <function-ref name="enable" scoped="" ref="0x2add08645bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2add08645d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add0865d060" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add0865d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0865d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add0865bcf8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add0865bcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add0865a0a0"/>
        <function-ref name="fired" scoped="" ref="0x2add0865a228"/>
        <function-ref name="disable" scoped="" ref="0x2add0865a3b0"/>
        <function-ref name="edge" scoped="" ref="0x2add0865a538"/>
        <function-ref name="enable" scoped="" ref="0x2add0865a6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2add0865a848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add0865ab10" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add0865ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0865ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add086567e8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add086567e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08656b38"/>
        <function-ref name="fired" scoped="" ref="0x2add08656cc0"/>
        <function-ref name="disable" scoped="" ref="0x2add08656e48"/>
        <function-ref name="edge" scoped="" ref="0x2add08655020"/>
        <function-ref name="enable" scoped="" ref="0x2add086551a8"/>
        <function-ref name="getValue" scoped="" ref="0x2add08655330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add086555f8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add086555f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add08655948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add086523e0" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add086523e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08652730"/>
        <function-ref name="fired" scoped="" ref="0x2add086528b8"/>
        <function-ref name="disable" scoped="" ref="0x2add08652a40"/>
        <function-ref name="edge" scoped="" ref="0x2add08652bc8"/>
        <function-ref name="enable" scoped="" ref="0x2add08652d50"/>
        <function-ref name="getValue" scoped="" ref="0x2add08651020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add086512e8" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add086512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add08651638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add0864e180" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add0864e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add0864e4d0"/>
        <function-ref name="fired" scoped="" ref="0x2add0864e658"/>
        <function-ref name="disable" scoped="" ref="0x2add0864e7e0"/>
        <function-ref name="edge" scoped="" ref="0x2add0864e968"/>
        <function-ref name="enable" scoped="" ref="0x2add0864eaf0"/>
        <function-ref name="getValue" scoped="" ref="0x2add0864ec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add0864c020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add0864c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0864c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add08675020" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add08675020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08675370"/>
        <function-ref name="fired" scoped="" ref="0x2add086754f8"/>
        <function-ref name="disable" scoped="" ref="0x2add08675680"/>
        <function-ref name="edge" scoped="" ref="0x2add08675808"/>
        <function-ref name="enable" scoped="" ref="0x2add08675990"/>
        <function-ref name="getValue" scoped="" ref="0x2add08675b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add08675de0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add08675de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add08674170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add08672cd8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add08672cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add086710a0"/>
        <function-ref name="fired" scoped="" ref="0x2add08671228"/>
        <function-ref name="disable" scoped="" ref="0x2add086713b0"/>
        <function-ref name="edge" scoped="" ref="0x2add08671538"/>
        <function-ref name="enable" scoped="" ref="0x2add086716c0"/>
        <function-ref name="getValue" scoped="" ref="0x2add08671848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add08671b10" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add08671b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add08671e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2add0866d9d8" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2add0866d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add0866dd28"/>
        <function-ref name="fired" scoped="" ref="0x2add0866c020"/>
        <function-ref name="disable" scoped="" ref="0x2add0866c1a8"/>
        <function-ref name="edge" scoped="" ref="0x2add0866c330"/>
        <function-ref name="enable" scoped="" ref="0x2add0866c4b8"/>
        <function-ref name="getValue" scoped="" ref="0x2add0866c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2add0866c908" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2add0866c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0866cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2add0868c8e0" loc="51:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2add0868c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0868cc30"/>
        <function-ref name="isInput" scoped="" ref="0x2add0868cdb8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0868b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0868b1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0868b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0868b4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0868b640"/>
        <function-ref name="clr" scoped="" ref="0x2add0868b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2add08663cf0" loc="47:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2add08663cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add0868c0a0"/>
        <function-ref name="disable" scoped="" ref="0x2add0868c228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add0868c3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add0868c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2add08689278" loc="69:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2add08689278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add086895c8"/>
        <function-ref name="runTask" scoped="" ref="0x2add08689750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2add088d7c90" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add088d7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d53e8"/>
        <function-ref name="write" scoped="" ref="0x2add088d5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2add088a8438" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2add088a8438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a8788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2add088dadd8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088dadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d9170"/>
        <function-ref name="write" scoped="" ref="0x2add088d92f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2add088d47c0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add088d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d4b10"/>
        <function-ref name="write" scoped="" ref="0x2add088d4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2add088d3020" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2add088d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d3370"/>
        <function-ref name="write" scoped="" ref="0x2add088d34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2add088c97c0" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add088c97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088c9b10"/>
        <function-ref name="write" scoped="" ref="0x2add088c9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2add088cb7c0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add088cb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cbb10"/>
        <function-ref name="write" scoped="" ref="0x2add088cbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2add088a76b8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add088a76b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2add088cc7c0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add088cc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ccb10"/>
        <function-ref name="write" scoped="" ref="0x2add088ccc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2add088d9d60" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add088d9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d80d8"/>
        <function-ref name="write" scoped="" ref="0x2add088d8260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2add088d8cc8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add088d8cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d70a0"/>
        <function-ref name="write" scoped="" ref="0x2add088d7228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2add088d0020" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2add088d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d0370"/>
        <function-ref name="write" scoped="" ref="0x2add088d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2add088d37c0" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add088d37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d3b10"/>
        <function-ref name="write" scoped="" ref="0x2add088d3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add088abe78" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add088abe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add088a91f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add088a9380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add088a9508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2add088a5020" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add088a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2add088a5638" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add088a5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2add088a5d50" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2add088a5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088db0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2add088cb020" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add088cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cb370"/>
        <function-ref name="write" scoped="" ref="0x2add088cb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2add088a6368" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add088a6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a66b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2add088d8528" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2add088d8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d8878"/>
        <function-ref name="write" scoped="" ref="0x2add088d8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2add088d95c0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088d95c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d9910"/>
        <function-ref name="write" scoped="" ref="0x2add088d9a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2add088a9de8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add088a9de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a8170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2add088c9020" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add088c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088c9370"/>
        <function-ref name="write" scoped="" ref="0x2add088c94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2add088ca020" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add088ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ca370"/>
        <function-ref name="write" scoped="" ref="0x2add088ca4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2add088d07c0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2add088d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d0b10"/>
        <function-ref name="write" scoped="" ref="0x2add088d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2add088cc020" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2add088cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cc370"/>
        <function-ref name="write" scoped="" ref="0x2add088cc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2add088d27c0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2add088d27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d2b10"/>
        <function-ref name="write" scoped="" ref="0x2add088d2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2add088c7020" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add088c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add088c7770"/>
        <function-ref name="writeDone" scoped="" ref="0x2add088c78f8"/>
        <function-ref name="write" scoped="" ref="0x2add088c7a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2add088c7c08"/>
        <function-ref name="readDone" scoped="" ref="0x2add088c7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2add088a97d0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add088a97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2add088da638" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2add088da638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088da988"/>
        <function-ref name="write" scoped="" ref="0x2add088dab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2add088d74f0" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2add088d74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d7840"/>
        <function-ref name="write" scoped="" ref="0x2add088d79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2add088d2020" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add088d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d2370"/>
        <function-ref name="write" scoped="" ref="0x2add088d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2add088d5838" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add088d5838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d5b88"/>
        <function-ref name="write" scoped="" ref="0x2add088d5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2add088a8a50" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add088a8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2add088d4020" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add088d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d4370"/>
        <function-ref name="write" scoped="" ref="0x2add088d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add088ab280" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add088ab280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add088ab5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add088ab758"/>
        <function-ref name="request" scoped="" ref="0x2add088ab8e0"/>
        <function-ref name="granted" scoped="" ref="0x2add088aba68"/>
        <function-ref name="isOwner" scoped="" ref="0x2add088abbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2add088db3a0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add088db3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088db6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2add088da020" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2add088da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088da370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2add088cd7c0" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add088cd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cdb10"/>
        <function-ref name="write" scoped="" ref="0x2add088cdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2add088cd020" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2add088cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cd370"/>
        <function-ref name="write" scoped="" ref="0x2add088cd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2add088a6980" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add088a6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2add088ce7c0" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add088ce7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ceb10"/>
        <function-ref name="write" scoped="" ref="0x2add088cec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2add088ca7c0" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2add088ca7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088cab10"/>
        <function-ref name="write" scoped="" ref="0x2add088cac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2add088ce020" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2add088ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ce370"/>
        <function-ref name="write" scoped="" ref="0x2add088ce4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2add088a70a0" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add088a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a73f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2add088d17c0" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2add088d17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d1b10"/>
        <function-ref name="write" scoped="" ref="0x2add088d1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2add088a7cd0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add088a7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2add088d1020" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2add088d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088d1370"/>
        <function-ref name="write" scoped="" ref="0x2add088d14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2add088db9b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add088db9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088dbd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2add088c60a0" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add088c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add088c63f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add088c6578"/>
        <function-ref name="write" scoped="" ref="0x2add088c6700"/>
        <function-ref name="beginRead" scoped="" ref="0x2add088c6888"/>
        <function-ref name="readDone" scoped="" ref="0x2add088c6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2add086a33c8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2add086a33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add086a3718"/>
        <function-ref name="writeDone" scoped="" ref="0x2add086a38a0"/>
        <function-ref name="write" scoped="" ref="0x2add086a3a28"/>
        <function-ref name="beginRead" scoped="" ref="0x2add086a3bb0"/>
        <function-ref name="readDone" scoped="" ref="0x2add086a3d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add086a44c8" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086a44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add086a4818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add086a49a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add086a4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2add086cf5e0" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2add086cf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add086cf930"/>
        <function-ref name="write" scoped="" ref="0x2add086cfab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2add086ce348" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2add086ce348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add086ce698"/>
        <function-ref name="write" scoped="" ref="0x2add086ce820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add086a7808" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add086a7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add086a7b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add086a7ce0"/>
        <function-ref name="request" scoped="" ref="0x2add086a7e68"/>
        <function-ref name="granted" scoped="" ref="0x2add086a4020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add086a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2add086cd1c8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2add086cd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add086cd518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2add086e6860" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2add086e6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add086e6bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add086e6d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2add086c84d0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2add086c84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add086c8820"/>
        <function-ref name="writeDone" scoped="" ref="0x2add086c89a8"/>
        <function-ref name="write" scoped="" ref="0x2add086c8b30"/>
        <function-ref name="beginRead" scoped="" ref="0x2add086c8cb8"/>
        <function-ref name="readDone" scoped="" ref="0x2add086c8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add086ca4e8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add086ca4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add086ca838"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add086ca9c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add086cab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2add086c0470" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2add086c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2add086c07c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2add086c20e0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2add086c20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add086c2430"/>
        <function-ref name="toIdle" scoped="" ref="0x2add086c25b8"/>
        <function-ref name="isState" scoped="" ref="0x2add086c2740"/>
        <function-ref name="isIdle" scoped="" ref="0x2add086c28c8"/>
        <function-ref name="requestState" scoped="" ref="0x2add086c2a50"/>
        <function-ref name="forceState" scoped="" ref="0x2add086c2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2add086c48e8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2add086c48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add086c4c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add086c4dc0"/>
        <function-ref name="request" scoped="" ref="0x2add086c3020"/>
        <function-ref name="granted" scoped="" ref="0x2add086c31a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add086c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2add086c6680" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2add086c6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add086c69d0"/>
        <function-ref name="write" scoped="" ref="0x2add086c6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2add086c53c8" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2add086c53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add086c5718"/>
        <function-ref name="write" scoped="" ref="0x2add086c58a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add086c2e50" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add086c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add086c11e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add086c1370"/>
        <function-ref name="led1On" scoped="" ref="0x2add086c14f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add086c1680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add086c1808"/>
        <function-ref name="get" scoped="" ref="0x2add086c1990"/>
        <function-ref name="led1Off" scoped="" ref="0x2add086c1b18"/>
        <function-ref name="led2Off" scoped="" ref="0x2add086e71a8"/>
        <function-ref name="set" scoped="" ref="0x2add086c1ca0"/>
        <function-ref name="led0On" scoped="" ref="0x2add086c1e28"/>
        <function-ref name="led2On" scoped="" ref="0x2add086e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add086c9300" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add086c9300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add086c9650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add086c97d8"/>
        <function-ref name="request" scoped="" ref="0x2add086c9960"/>
        <function-ref name="granted" scoped="" ref="0x2add086c9ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add086c9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2add086e3b80" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2add086e3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add086e1020"/>
        <function-ref name="runTask" scoped="" ref="0x2add086e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2add086c41c8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2add086c41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add086c4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add08716978" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08716978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08716cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08716e50"/>
        <function-ref name="isState" scoped="" ref="0x2add08745020"/>
        <function-ref name="isIdle" scoped="" ref="0x2add087451a8"/>
        <function-ref name="requestState" scoped="" ref="0x2add08745330"/>
        <function-ref name="forceState" scoped="" ref="0x2add087454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add08741790" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08741790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08741ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08741c68"/>
        <function-ref name="isState" scoped="" ref="0x2add08741df0"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08740020"/>
        <function-ref name="requestState" scoped="" ref="0x2add087401a8"/>
        <function-ref name="forceState" scoped="" ref="0x2add08740330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add0873d438" loc="66:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add0873d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add0873d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add0873c020" loc="67:/opt/tinyos-2.1.1/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add0873c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add0873c370"/>
        <function-ref name="toIdle" scoped="" ref="0x2add0873c4f8"/>
        <function-ref name="isState" scoped="" ref="0x2add0873c680"/>
        <function-ref name="isIdle" scoped="" ref="0x2add0873c808"/>
        <function-ref name="requestState" scoped="" ref="0x2add0873c990"/>
        <function-ref name="forceState" scoped="" ref="0x2add0873cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2add088942a8" loc="43:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2add088942a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add088945f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08894780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2add08896c18" loc="42:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2add08896c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2add08894020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08897960" loc="39:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08897960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08897cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08896020" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08896020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08896370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add088964f8"/>
        <function-ref name="request" scoped="" ref="0x2add08896680"/>
        <function-ref name="granted" scoped="" ref="0x2add08896808"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08896990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2add08747ba0" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2add08747ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add0874d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add0874d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2add08751a20" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2add08751a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2add08751d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08751400" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08751400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08751750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2add087470d0" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2add087470d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2add08747420"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2add087475a8"/>
        <function-ref name="splitRead" scoped="" ref="0x2add08747730"/>
        <function-ref name="write" scoped="" ref="0x2add087478b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0874d978" loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0874d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0874dcc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0874de50"/>
        <function-ref name="request" scoped="" ref="0x2add0874b020"/>
        <function-ref name="granted" scoped="" ref="0x2add0874b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0874b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2add08790830" loc="241:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2add08790830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08790b80"/>
        <function-ref name="runTask" scoped="" ref="0x2add08790d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2add08772020" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2add08772020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08772370"/>
        <function-ref name="sendDone" scoped="" ref="0x2add087724f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2add08784208" loc="85:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2add08784208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08784558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add087846e0"/>
        <function-ref name="request" scoped="" ref="0x2add08784868"/>
        <function-ref name="granted" scoped="" ref="0x2add087849f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08784b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2add08774d88" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2add08774d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2add08773170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add087747a8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add087747a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08774af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2add0876f020" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2add0876f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2add0876f370"/>
        <function-ref name="sleep" scoped="" ref="0x2add087857c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2add0876f680"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08785950"/>
        <function-ref name="initMaster" scoped="" ref="0x2add0876f990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2add0876fb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add0876fca0"/>
        <function-ref name="read" scoped="" ref="0x2add0876fe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2add0876e020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add0876e1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2add0876e330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add0876e4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2add0876e640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2add0876e8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2add0876ea50"/>
        <function-ref name="write" scoped="" ref="0x2add0876ebd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2add0876ed60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2add08785020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2add087851a8"/>
        <function-ref name="getClock" scoped="" ref="0x2add08785330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add087854b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2add0876f4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2add0876f808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2add08785640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2add08773428" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2add08773428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2add08773778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2add08773900"/>
        <function-ref name="splitRead" scoped="" ref="0x2add08773a88"/>
        <function-ref name="write" scoped="" ref="0x2add08773c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08772c88" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08772c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08771020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add087711a8"/>
        <function-ref name="request" scoped="" ref="0x2add08771330"/>
        <function-ref name="granted" scoped="" ref="0x2add087714b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08771640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add087805d0" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add087805d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add08780920"/>
        <function-ref name="userId" scoped="" ref="0x2add08780aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2add08780d78" loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2add08780d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2add087820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2add087c7020" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2add087c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2add087c7370"/>
        <function-ref name="sleep" scoped="" ref="0x2add087c57c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2add087c7680"/>
        <function-ref name="dataReady" scoped="" ref="0x2add087c5950"/>
        <function-ref name="initMaster" scoped="" ref="0x2add087c7990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2add087c7b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add087c7ca0"/>
        <function-ref name="read" scoped="" ref="0x2add087c7e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2add087c6020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add087c61a8"/>
        <function-ref name="setClock" scoped="" ref="0x2add087c6330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add087c64b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2add087c6640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2add087c68c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2add087c6a50"/>
        <function-ref name="write" scoped="" ref="0x2add087c6bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2add087c6d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2add087c5020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2add087c51a8"/>
        <function-ref name="getClock" scoped="" ref="0x2add087c5330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add087c54b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2add087c74f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2add087c7808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2add087c5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2add087eb190" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2add087eb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add087eb4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2add087eb668"/>
        <function-ref name="toggle" scoped="" ref="0x2add087eb7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add087eb978"/>
        <function-ref name="get" scoped="" ref="0x2add087ebb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add087ebc88"/>
        <function-ref name="set" scoped="" ref="0x2add087ebe10"/>
        <function-ref name="clr" scoped="" ref="0x2add087ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2add087f0de0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2add087f0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add087ef170"/>
        <function-ref name="isInput" scoped="" ref="0x2add087ef2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add087ef480"/>
        <function-ref name="isOutput" scoped="" ref="0x2add087ef608"/>
        <function-ref name="get" scoped="" ref="0x2add087ef790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add087ef918"/>
        <function-ref name="set" scoped="" ref="0x2add087efaa0"/>
        <function-ref name="clr" scoped="" ref="0x2add087efc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2add087edc70" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2add087edc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add087f0020"/>
        <function-ref name="isInput" scoped="" ref="0x2add087f01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add087f0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add087f04b8"/>
        <function-ref name="get" scoped="" ref="0x2add087f0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add087f07c8"/>
        <function-ref name="set" scoped="" ref="0x2add087f0950"/>
        <function-ref name="clr" scoped="" ref="0x2add087f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2add087ed438" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add087ed438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add087ed788"/>
        <function-ref name="stop" scoped="" ref="0x2add087ed910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2add087ea350" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2add087ea350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2add087ea6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2add087c4dc0" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2add087c4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2add087c1170"/>
        <function-ref name="sleep" scoped="" ref="0x2add087bf640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2add087c1480"/>
        <function-ref name="dataReady" scoped="" ref="0x2add087bf7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2add087c1790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2add087c1918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add087c1aa0"/>
        <function-ref name="read" scoped="" ref="0x2add087c1c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2add087c1db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add087c0020"/>
        <function-ref name="setClock" scoped="" ref="0x2add087c01a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add087c0330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2add087c04b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2add087c0740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2add087c08c8"/>
        <function-ref name="write" scoped="" ref="0x2add087c0a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2add087c0bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2add087c0d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2add087bf020"/>
        <function-ref name="getClock" scoped="" ref="0x2add087bf1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add087bf330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2add087c12f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2add087c1608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2add087bf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2add087ec020" loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2add087ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add087ec370"/>
        <function-ref name="isInput" scoped="" ref="0x2add087ec4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add087ec680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add087ec808"/>
        <function-ref name="get" scoped="" ref="0x2add087ec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add087ecb18"/>
        <function-ref name="set" scoped="" ref="0x2add087ecca0"/>
        <function-ref name="clr" scoped="" ref="0x2add087ece28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add0887a020" loc="76:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add0887a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add0887a390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add0887a518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add08879020" loc="79:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08879020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add08879390"/>
        <function-ref name="configure" scoped="" ref="0x2add08879518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0887b200" loc="75:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0887b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0887b570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0887b6f8"/>
        <function-ref name="request" scoped="" ref="0x2add0887b880"/>
        <function-ref name="granted" scoped="" ref="0x2add0887ba08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0887bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add0887a760" loc="77:/opt/tinyos-2.1.1/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0887a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add0887aab0"/>
        <function-ref name="userId" scoped="" ref="0x2add0887ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add0984fbd0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add0984fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add0984e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2add0984e2a8" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2add0984e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add0984e5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add0984e780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add0984e908"/>
        <function-ref name="dequeue" scoped="" ref="0x2add0984ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add0984cdf8" loc="52:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add0984cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add0984b1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add0984b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add0984be18" loc="56:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add0984be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add0984a1c0"/>
        <function-ref name="configure" scoped="" ref="0x2add0984a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add0984a5d0" loc="57:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add0984a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add0984a920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add0984aaa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add0984ac30"/>
        <function-ref name="dequeue" scoped="" ref="0x2add0984adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0984c100" loc="51:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0984c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0984c470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0984c5f8"/>
        <function-ref name="request" scoped="" ref="0x2add0984c780"/>
        <function-ref name="granted" scoped="" ref="0x2add0984c908"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0984ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add0984b578" loc="53:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0984b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add0984b8c8"/>
        <function-ref name="userId" scoped="" ref="0x2add0984ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09849100" loc="69:/opt/tinyos-2.1.1/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09849100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09849450"/>
        <function-ref name="runTask" scoped="" ref="0x2add098495d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2add088a34a8" loc="45:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2add088a34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add088a37f8"/>
        <function-ref name="isInput" scoped="" ref="0x2add088a3980"/>
        <function-ref name="toggle" scoped="" ref="0x2add088a3b08"/>
        <function-ref name="isOutput" scoped="" ref="0x2add088a3c90"/>
        <function-ref name="get" scoped="" ref="0x2add088a3e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add088a2020"/>
        <function-ref name="set" scoped="" ref="0x2add088a21a8"/>
        <function-ref name="clr" scoped="" ref="0x2add088a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08873870" loc="40:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08873870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08873bc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08873d48"/>
        <function-ref name="request" scoped="" ref="0x2add088a4020"/>
        <function-ref name="granted" scoped="" ref="0x2add088a41a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add088a4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2add088a4700" loc="44:/opt/tinyos-2.1.1/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2add088a4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add088a4a50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add088a4bd8"/>
        <function-ref name="request" scoped="" ref="0x2add088a4d60"/>
        <function-ref name="granted" scoped="" ref="0x2add088a3020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add088a31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2add088e7c90" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add088e7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e63e8"/>
        <function-ref name="write" scoped="" ref="0x2add088e6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2add088f1438" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2add088f1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2add088ebdd8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088ebdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ea170"/>
        <function-ref name="write" scoped="" ref="0x2add088ea2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2add088e57c0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add088e57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e5b10"/>
        <function-ref name="write" scoped="" ref="0x2add088e5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2add088e4020" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2add088e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e4370"/>
        <function-ref name="write" scoped="" ref="0x2add088e44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2add0890f7c0" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add0890f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0890fb10"/>
        <function-ref name="write" scoped="" ref="0x2add0890fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2add089127c0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add089127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08912b10"/>
        <function-ref name="write" scoped="" ref="0x2add08912c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2add088f06b8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add088f06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2add088dd7c0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add088dd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ddb10"/>
        <function-ref name="write" scoped="" ref="0x2add088ddc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2add088ead60" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add088ead60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e80d8"/>
        <function-ref name="write" scoped="" ref="0x2add088e8260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2add088e8cc8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add088e8cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e70a0"/>
        <function-ref name="write" scoped="" ref="0x2add088e7228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2add088e0020" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2add088e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e0370"/>
        <function-ref name="write" scoped="" ref="0x2add088e04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2add088e47c0" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add088e47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e4b10"/>
        <function-ref name="write" scoped="" ref="0x2add088e4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add088f3e40" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add088f3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add088f21c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add088f2348"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add088f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2add088ed020" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add088ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ed370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2add088ed638" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add088ed638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088eda88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2add088edd50" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2add088edd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ec0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2add08912020" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08912020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08912370"/>
        <function-ref name="write" scoped="" ref="0x2add089124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2add088ee368" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add088ee368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ee6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2add088e8528" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2add088e8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e8878"/>
        <function-ref name="write" scoped="" ref="0x2add088e8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2add088ea5c0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088ea5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088ea910"/>
        <function-ref name="write" scoped="" ref="0x2add088eaa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2add088f2db0" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add088f2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2add0890f020" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add0890f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0890f370"/>
        <function-ref name="write" scoped="" ref="0x2add0890f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2add08910020" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add08910020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08910370"/>
        <function-ref name="write" scoped="" ref="0x2add089104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2add088e07c0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2add088e07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e0b10"/>
        <function-ref name="write" scoped="" ref="0x2add088e0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2add088dd020" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2add088dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088dd370"/>
        <function-ref name="write" scoped="" ref="0x2add088dd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2add088e37c0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2add088e37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e3b10"/>
        <function-ref name="write" scoped="" ref="0x2add088e3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2add0890e020" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add0890e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add0890e770"/>
        <function-ref name="writeDone" scoped="" ref="0x2add0890e8f8"/>
        <function-ref name="write" scoped="" ref="0x2add0890ea80"/>
        <function-ref name="beginRead" scoped="" ref="0x2add0890ec08"/>
        <function-ref name="readDone" scoped="" ref="0x2add0890ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2add088f2798" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add088f2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2add088eb638" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2add088eb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088eb988"/>
        <function-ref name="write" scoped="" ref="0x2add088ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2add088e74f0" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2add088e74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e7840"/>
        <function-ref name="write" scoped="" ref="0x2add088e79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2add088e3020" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add088e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e3370"/>
        <function-ref name="write" scoped="" ref="0x2add088e34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2add088e6838" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add088e6838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e6b88"/>
        <function-ref name="write" scoped="" ref="0x2add088e6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2add088f1a50" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add088f1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2add088e5020" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add088e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e5370"/>
        <function-ref name="write" scoped="" ref="0x2add088e54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add088f3248" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add088f3248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add088f3598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add088f3720"/>
        <function-ref name="request" scoped="" ref="0x2add088f38a8"/>
        <function-ref name="granted" scoped="" ref="0x2add088f3a30"/>
        <function-ref name="isOwner" scoped="" ref="0x2add088f3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2add088ec3a0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add088ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ec6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2add088eb020" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2add088eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088eb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2add088de7c0" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add088de7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088deb10"/>
        <function-ref name="write" scoped="" ref="0x2add088dec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2add088de020" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2add088de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088de370"/>
        <function-ref name="write" scoped="" ref="0x2add088de4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2add088ee980" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add088ee980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088eecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2add088df7c0" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add088df7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088dfb10"/>
        <function-ref name="write" scoped="" ref="0x2add088dfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2add089107c0" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2add089107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08910b10"/>
        <function-ref name="write" scoped="" ref="0x2add08910c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2add088df020" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2add088df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088df370"/>
        <function-ref name="write" scoped="" ref="0x2add088df4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2add088f00a0" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add088f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088f03f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2add088e17c0" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2add088e17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e1b10"/>
        <function-ref name="write" scoped="" ref="0x2add088e1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2add088f0cd0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add088f0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2add088e1020" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2add088e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088e1370"/>
        <function-ref name="write" scoped="" ref="0x2add088e14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2add088ec9b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add088ec9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088ecd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2add0890d0a0" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add0890d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add0890d3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add0890d578"/>
        <function-ref name="write" scoped="" ref="0x2add0890d700"/>
        <function-ref name="beginRead" scoped="" ref="0x2add0890d888"/>
        <function-ref name="readDone" scoped="" ref="0x2add0890da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2add088fbc90" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add088fbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fa3e8"/>
        <function-ref name="write" scoped="" ref="0x2add088fa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2add089043a0" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2add089043a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add089046f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2add088fedd8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add088fedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fd170"/>
        <function-ref name="write" scoped="" ref="0x2add088fd2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2add088f97c0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add088f97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088f9b10"/>
        <function-ref name="write" scoped="" ref="0x2add088f9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2add0892e020" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2add0892e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892e370"/>
        <function-ref name="write" scoped="" ref="0x2add0892e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2add089247c0" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add089247c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08924b10"/>
        <function-ref name="write" scoped="" ref="0x2add08924c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2add089267c0" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add089267c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08926b10"/>
        <function-ref name="write" scoped="" ref="0x2add08926c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2add08903638" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add08903638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08903988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2add089277c0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add089277c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08927b10"/>
        <function-ref name="write" scoped="" ref="0x2add08927c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2add088fdd60" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add088fdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fc0d8"/>
        <function-ref name="write" scoped="" ref="0x2add088fc260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2add088fccc8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add088fccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fb0a0"/>
        <function-ref name="write" scoped="" ref="0x2add088fb228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2add0892b020" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2add0892b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892b370"/>
        <function-ref name="write" scoped="" ref="0x2add0892b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2add0892e7c0" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add0892e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892eb10"/>
        <function-ref name="write" scoped="" ref="0x2add0892ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add08907da0" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08907da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add08906170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add089062f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add08906480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2add08901020" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08901020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08901370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2add08901638" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add08901638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08901a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2add08901d50" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2add08901d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add089000d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2add08926020" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08926020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08926370"/>
        <function-ref name="write" scoped="" ref="0x2add089264f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2add089022e8" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add089022e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08902638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2add088fc528" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2add088fc528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fc878"/>
        <function-ref name="write" scoped="" ref="0x2add088fca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2add088fd5c0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add088fd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fd910"/>
        <function-ref name="write" scoped="" ref="0x2add088fda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2add08906d60" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add08906d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add089040d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2add08924020" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add08924020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08924370"/>
        <function-ref name="write" scoped="" ref="0x2add089244f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2add08925020" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add08925020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08925370"/>
        <function-ref name="write" scoped="" ref="0x2add089254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2add0892b7c0" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2add0892b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892bb10"/>
        <function-ref name="write" scoped="" ref="0x2add0892bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2add08927020" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2add08927020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08927370"/>
        <function-ref name="write" scoped="" ref="0x2add089274f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2add0892d7c0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2add0892d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892db10"/>
        <function-ref name="write" scoped="" ref="0x2add0892dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2add08923020" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add08923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08923770"/>
        <function-ref name="writeDone" scoped="" ref="0x2add089238f8"/>
        <function-ref name="write" scoped="" ref="0x2add08923a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08923c08"/>
        <function-ref name="readDone" scoped="" ref="0x2add08923d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2add08906748" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add08906748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08906a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2add088fe638" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2add088fe638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fe988"/>
        <function-ref name="write" scoped="" ref="0x2add088feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2add088fb4f0" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2add088fb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fb840"/>
        <function-ref name="write" scoped="" ref="0x2add088fb9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2add0892d020" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add0892d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892d370"/>
        <function-ref name="write" scoped="" ref="0x2add0892d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2add088fa838" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add088fa838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088fab88"/>
        <function-ref name="write" scoped="" ref="0x2add088fad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2add089049b8" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add089049b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08904d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2add088f9020" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add088f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add088f9370"/>
        <function-ref name="write" scoped="" ref="0x2add088f94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add089071a8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add089071a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add089074f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08907680"/>
        <function-ref name="request" scoped="" ref="0x2add08907808"/>
        <function-ref name="granted" scoped="" ref="0x2add08907990"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08907b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2add089003a0" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add089003a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add089006f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2add088fe020" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2add088fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add088fe370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2add089287c0" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add089287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08928b10"/>
        <function-ref name="write" scoped="" ref="0x2add08928c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2add08928020" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2add08928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08928370"/>
        <function-ref name="write" scoped="" ref="0x2add089284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2add08902900" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08902900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08902c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2add0892a7c0" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add0892a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892ab10"/>
        <function-ref name="write" scoped="" ref="0x2add0892ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2add089257c0" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2add089257c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08925b10"/>
        <function-ref name="write" scoped="" ref="0x2add08925c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2add0892a020" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2add0892a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892a370"/>
        <function-ref name="write" scoped="" ref="0x2add0892a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2add08903020" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add08903020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08903370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2add0892c7c0" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2add0892c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892cb10"/>
        <function-ref name="write" scoped="" ref="0x2add0892cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2add08903c50" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add08903c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08902020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2add0892c020" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2add0892c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0892c370"/>
        <function-ref name="write" scoped="" ref="0x2add0892c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2add089009b8" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add089009b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08900d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2add089220a0" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add089220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add089223f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08922578"/>
        <function-ref name="write" scoped="" ref="0x2add08922700"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08922888"/>
        <function-ref name="readDone" scoped="" ref="0x2add08922a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2add089192b8" loc="43:/opt/tinyos-2.1.1/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add089192b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2add08919608"/>
        <function-ref name="changed" scoped="" ref="0x2add08919790"/>
        <function-ref name="amGroup" scoped="" ref="0x2add08919918"/>
        <function-ref name="setAddress" scoped="" ref="0x2add08919aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add08939c58" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add08939c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add08938020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add089381a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add08938330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add089384b8"/>
        <function-ref name="setCca" scoped="" ref="0x2add08938640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add089387c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2add08935840" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2add08935840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08935b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2add08939020" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2add08939020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08939370"/>
        <function-ref name="cancel" scoped="" ref="0x2add089394f8"/>
        <function-ref name="modify" scoped="" ref="0x2add08939680"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08939808"/>
        <function-ref name="resend" scoped="" ref="0x2add08939990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2add0893c7c8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add0893c7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add0893cb18"/>
        <function-ref name="stop" scoped="" ref="0x2add0893cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2add08937020" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2add08937020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08937370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add0894d4b0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add0894d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add0894d800"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add0894d988"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add0894db10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add0894dc98"/>
        <function-ref name="setCca" scoped="" ref="0x2add0894de20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add08984020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2add0897d020" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2add0897d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add0897c478"/>
        <function-ref name="clear" scoped="" ref="0x2add0897cb58"/>
        <function-ref name="isValid" scoped="" ref="0x2add0897dd70"/>
        <function-ref name="set" scoped="" ref="0x2add0897a278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2add089a08a8" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add089a08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add089a0bf8"/>
        <function-ref name="write" scoped="" ref="0x2add089a0d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2add0899f130" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add0899f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0899f480"/>
        <function-ref name="write" scoped="" ref="0x2add0899f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2add08984428" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2add08984428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08984778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2add0896a020" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add0896a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add0896a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2add08979858" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2add08979858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2add08979ba8"/>
        <function-ref name="disable" scoped="" ref="0x2add08979d30"/>
        <function-ref name="captured" scoped="" ref="0x2add08978020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2add089781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2add08983648" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2add08983648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08981cc0"/>
        <function-ref name="fired" scoped="" ref="0x2add08982d50"/>
        <function-ref name="startAt" scoped="" ref="0x2add089816b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08981230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add0897f190"/>
        <function-ref name="start" scoped="" ref="0x2add089823f0"/>
        <function-ref name="stop" scoped="" ref="0x2add089828c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2add0897f628" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add0897f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add0897f978"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add0897fb00"/>
        <function-ref name="getRssi" scoped="" ref="0x2add0897fc88"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add0897fe10"/>
        <function-ref name="getPower" scoped="" ref="0x2add0897e020"/>
        <function-ref name="getLqi" scoped="" ref="0x2add0897e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2add0896c0c8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add0896c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0896c418"/>
        <function-ref name="write" scoped="" ref="0x2add0896c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2add0896c938" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add0896c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0896cc88"/>
        <function-ref name="write" scoped="" ref="0x2add0896ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2add089981b8" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2add089981b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08998508"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2add08998690"/>
        <function-ref name="sfd" scoped="" ref="0x2add08998818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add0894e6d0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add0894e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add0894ea20"/>
        <function-ref name="cancel" scoped="" ref="0x2add0894eba8"/>
        <function-ref name="modify" scoped="" ref="0x2add0894ed30"/>
        <function-ref name="sendDone" scoped="" ref="0x2add0894d020"/>
        <function-ref name="resend" scoped="" ref="0x2add0894d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2add0896e960" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add0896e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add0896ecb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add0896ee38"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add0896d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2add0896a710" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add0896a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add0896aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2add08972800" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2add08972800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08972b50"/>
        <function-ref name="isInput" scoped="" ref="0x2add08972cd8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08972e60"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08970020"/>
        <function-ref name="get" scoped="" ref="0x2add089701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08970330"/>
        <function-ref name="set" scoped="" ref="0x2add089704b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08970640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add0894f808" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add0894f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add0894fb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add0897e4d8" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add0897e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add0897e828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add0897e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2add08973c98" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08973c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08979020"/>
        <function-ref name="isSet" scoped="" ref="0x2add089791a8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08979330"/>
        <function-ref name="set" scoped="" ref="0x2add089794b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2add0896ae10" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add0896ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add089693e8"/>
        <function-ref name="write" scoped="" ref="0x2add08969570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2add0896fb58" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2add0896fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0896e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0896e1a8"/>
        <function-ref name="request" scoped="" ref="0x2add0896e330"/>
        <function-ref name="granted" scoped="" ref="0x2add0896e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0896e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2add089784f0" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2add089784f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08978940"/>
        <function-ref name="isInput" scoped="" ref="0x2add08978ac8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08978c50"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08978dd8"/>
        <function-ref name="get" scoped="" ref="0x2add08972020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add089721a8"/>
        <function-ref name="set" scoped="" ref="0x2add08972330"/>
        <function-ref name="clr" scoped="" ref="0x2add089724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2add0899f960" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add0899f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0899fcb0"/>
        <function-ref name="write" scoped="" ref="0x2add0899fe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2add0899d208" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add0899d208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0899d558"/>
        <function-ref name="write" scoped="" ref="0x2add0899d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2add0896b1b0" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add0896b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add0896b500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2add08970988" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2add08970988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08970cd8"/>
        <function-ref name="isInput" scoped="" ref="0x2add08970e60"/>
        <function-ref name="toggle" scoped="" ref="0x2add0896f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0896f1a8"/>
        <function-ref name="get" scoped="" ref="0x2add0896f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0896f4b8"/>
        <function-ref name="set" scoped="" ref="0x2add0896f640"/>
        <function-ref name="clr" scoped="" ref="0x2add0896f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add08998ad0" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add08998ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add08998e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add0899c020"/>
        <function-ref name="led1On" scoped="" ref="0x2add0899c1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add0899c330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add0899c4b8"/>
        <function-ref name="get" scoped="" ref="0x2add0899c640"/>
        <function-ref name="led1Off" scoped="" ref="0x2add0899c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add0899cde8"/>
        <function-ref name="set" scoped="" ref="0x2add0899c950"/>
        <function-ref name="led0On" scoped="" ref="0x2add0899cad8"/>
        <function-ref name="led2On" scoped="" ref="0x2add0899cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2add089a0020" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add089a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add089a0370"/>
        <function-ref name="write" scoped="" ref="0x2add089a04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2add0894fe48" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add0894fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add0894e1c0"/>
        <function-ref name="stop" scoped="" ref="0x2add0894e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2add0896d390" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add0896d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add0896d6e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add0896d868"/>
        <function-ref name="write" scoped="" ref="0x2add0896d9f0"/>
        <function-ref name="beginRead" scoped="" ref="0x2add0896db78"/>
        <function-ref name="readDone" scoped="" ref="0x2add0896dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2add0896b880" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add0896b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add0896bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2add089698f8" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add089698f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08969c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2add08984b70" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2add08984b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08983020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2add08a26a88" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add08a26a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a25020"/>
        <function-ref name="write" scoped="" ref="0x2add08a251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2add08a2f020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2add08a2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2add08a29a88" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add08a29a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a29dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08a28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2add08a23470" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add08a23470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a237c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a23948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2add08a23c10" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2add08a23c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a22020"/>
        <function-ref name="write" scoped="" ref="0x2add08a221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2add08a18470" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add08a18470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a187c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a18948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2add08a1a470" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add08a1a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1a7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a1a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2add08a2e2e8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add08a2e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2add08a1b470" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add08a1b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1b7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a1b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2add08a28a88" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add08a28a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a28dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08a27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2add08a27a88" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add08a27a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a27dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08a26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2add08a20c10" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2add08a20c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1f020"/>
        <function-ref name="write" scoped="" ref="0x2add08a1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2add08a22470" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add08a22470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a227c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a22948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add08a32948" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08a32948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add08a32c98"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add08a32e20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add08a31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2add08a2dc50" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08a2dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2add08a2c2e8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add08a2c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2c738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2add08a2ca00" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2add08a2ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2add08a1bc10" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08a1bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1a020"/>
        <function-ref name="write" scoped="" ref="0x2add08a1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2add08a2d020" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add08a2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2add08a272e8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2add08a272e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a27638"/>
        <function-ref name="write" scoped="" ref="0x2add08a277c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2add08a282e8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add08a282e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a28638"/>
        <function-ref name="write" scoped="" ref="0x2add08a287c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2add08a31900" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add08a31900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a31c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2add08a19c10" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add08a19c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a18020"/>
        <function-ref name="write" scoped="" ref="0x2add08a181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2add08a1ac10" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add08a1ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a19020"/>
        <function-ref name="write" scoped="" ref="0x2add08a191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2add08a1f470" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2add08a1f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1f7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a1f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2add08a1cc10" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2add08a1cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1b020"/>
        <function-ref name="write" scoped="" ref="0x2add08a1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2add08a21470" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2add08a21470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a217c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a21948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2add08a18c10" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add08a18c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08a175e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08a17770"/>
        <function-ref name="write" scoped="" ref="0x2add08a178f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08a17a80"/>
        <function-ref name="readDone" scoped="" ref="0x2add08a17c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2add08a312e8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add08a312e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a31638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2add08a292e8" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2add08a292e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a29638"/>
        <function-ref name="write" scoped="" ref="0x2add08a297c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2add08a262e8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2add08a262e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a26638"/>
        <function-ref name="write" scoped="" ref="0x2add08a267c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2add08a22c10" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add08a22c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a21020"/>
        <function-ref name="write" scoped="" ref="0x2add08a211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2add08a25470" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add08a25470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a257c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a25948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2add08a2f638" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add08a2f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2add08a25c10" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add08a25c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a23020"/>
        <function-ref name="write" scoped="" ref="0x2add08a231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add089f8cb8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add089f8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08a320a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08a32228"/>
        <function-ref name="request" scoped="" ref="0x2add08a323b0"/>
        <function-ref name="granted" scoped="" ref="0x2add08a32538"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08a326c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2add08a2a060" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add08a2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2add08a2ac90" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2add08a2ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2add08a1c470" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add08a1c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1c7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a1c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2add08a1dc10" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2add08a1dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1c020"/>
        <function-ref name="write" scoped="" ref="0x2add08a1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2add08a2d638" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08a2d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2add08a1d470" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add08a1d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1d7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a1d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2add08a19470" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2add08a19470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a197c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a19948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2add08a1fc10" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2add08a1fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a1d020"/>
        <function-ref name="write" scoped="" ref="0x2add08a1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2add08a2fc50" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add08a2fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2add08a20470" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2add08a20470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a207c0"/>
        <function-ref name="write" scoped="" ref="0x2add08a20948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2add08a2e900" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add08a2e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2add08a21c10" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2add08a21c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a20020"/>
        <function-ref name="write" scoped="" ref="0x2add08a201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2add08a2a678" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add08a2a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a2a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2add08a15020" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add08a15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08a15370"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08a154f8"/>
        <function-ref name="write" scoped="" ref="0x2add08a15680"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08a15808"/>
        <function-ref name="readDone" scoped="" ref="0x2add08a15990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2add08a444b8" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2add08a444b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08a44808"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2add08a44990"/>
        <function-ref name="sfd" scoped="" ref="0x2add08a44b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08a44de8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08a44de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08a43170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2add08a43578" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2add08a43578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08a438c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2add08a48b40" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add08a48b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add08a44020"/>
        <function-ref name="stop" scoped="" ref="0x2add08a441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2add08a3c378" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2add08a3c378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08a3c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2add08a3c850"/>
        <function-ref name="toggle" scoped="" ref="0x2add08a3c9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08a3cb60"/>
        <function-ref name="get" scoped="" ref="0x2add08a3cce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08a3ce70"/>
        <function-ref name="set" scoped="" ref="0x2add08a3b020"/>
        <function-ref name="clr" scoped="" ref="0x2add08a3b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2add08a34328" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2add08a34328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2add08a34678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2add08a34800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2add08a34988"/>
        <function-ref name="syncDone" scoped="" ref="0x2add08a34b10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2add08a34c98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2add08a34e20"/>
        <function-ref name="setChannel" scoped="" ref="0x2add08a33020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2add08a331a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2add08a33330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2add08a334b8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2add08a33640"/>
        <function-ref name="sync" scoped="" ref="0x2add08a337c8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add08a33950"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2add08a33bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2add08a5a3f8" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2add08a5a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08a5a748"/>
        <function-ref name="runTask" scoped="" ref="0x2add08a5a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2add08a6e1e0" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2add08a6e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add08a6d700"/>
        <function-ref name="clear" scoped="" ref="0x2add08a6dde0"/>
        <function-ref name="isValid" scoped="" ref="0x2add08a6d020"/>
        <function-ref name="set" scoped="" ref="0x2add08a6c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2add08a3b508" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2add08a3b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08a3b858"/>
        <function-ref name="isInput" scoped="" ref="0x2add08a3b9e0"/>
        <function-ref name="toggle" scoped="" ref="0x2add08a3bb68"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08a3bcf0"/>
        <function-ref name="get" scoped="" ref="0x2add08a3be78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08a3a030"/>
        <function-ref name="set" scoped="" ref="0x2add08a3a1b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08a3a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2add08a6ada8" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add08a6ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a69170"/>
        <function-ref name="write" scoped="" ref="0x2add08a692f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2add08a69650" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add08a69650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a699a0"/>
        <function-ref name="write" scoped="" ref="0x2add08a69b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2add08a686f0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add08a686f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a68a40"/>
        <function-ref name="write" scoped="" ref="0x2add08a68bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2add08a37c68" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08a37c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08a35020"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08a351a8"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08a35330"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08a354b8"/>
        <function-ref name="getPower" scoped="" ref="0x2add08a35640"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08a357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2add08a3f930" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2add08a3f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08a3fc80"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2add08a3fe08"/>
        <function-ref name="sfd" scoped="" ref="0x2add08a3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2add08a38de8" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add08a38de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a37170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2add08a3d120" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2add08a3d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08a3d470"/>
        <function-ref name="isInput" scoped="" ref="0x2add08a3d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08a3d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08a3d908"/>
        <function-ref name="get" scoped="" ref="0x2add08a3da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08a3dc18"/>
        <function-ref name="set" scoped="" ref="0x2add08a3dda0"/>
        <function-ref name="clr" scoped="" ref="0x2add08a3c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2add08a67020" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08a67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a67370"/>
        <function-ref name="write" scoped="" ref="0x2add08a674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08a42ad8" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08a42ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08a42e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add08a35af8" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08a35af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08a35e48"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08a3e2f0" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08a3e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08a3e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2add08a393b0" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2add08a393b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08a39700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08a39888"/>
        <function-ref name="request" scoped="" ref="0x2add08a39a10"/>
        <function-ref name="granted" scoped="" ref="0x2add08a39b98"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08a39d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2add08a69e80" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add08a69e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a681f8"/>
        <function-ref name="write" scoped="" ref="0x2add08a68380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2add08a38100" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add08a38100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08a38450"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08a385d8"/>
        <function-ref name="write" scoped="" ref="0x2add08a38760"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08a388e8"/>
        <function-ref name="readDone" scoped="" ref="0x2add08a38a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2add08a67870" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add08a67870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a67dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2add08a3ea48" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2add08a3ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2add08a3ed98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add08a660c0" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add08a660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add08a66410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add08a66598"/>
        <function-ref name="led1On" scoped="" ref="0x2add08a66720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add08a668a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add08a66a30"/>
        <function-ref name="get" scoped="" ref="0x2add08a66bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add08a66d40"/>
        <function-ref name="led2Off" scoped="" ref="0x2add08a654b8"/>
        <function-ref name="set" scoped="" ref="0x2add08a65020"/>
        <function-ref name="led0On" scoped="" ref="0x2add08a651a8"/>
        <function-ref name="led2On" scoped="" ref="0x2add08a65330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2add08a6a520" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add08a6a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08a6a870"/>
        <function-ref name="write" scoped="" ref="0x2add08a6a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2add08a6cdb8" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add08a6cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a6a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2add08a3a720" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2add08a3a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2add08a3aa70"/>
        <function-ref name="disable" scoped="" ref="0x2add08a3abf8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2add08a3ad80"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2add08a39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2add08a37510" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08a37510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08a37960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2add08a3f148" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add08a3f148"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add08a3f498"/>
        <function-ref name="stop" scoped="" ref="0x2add08a3f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2add08ab7c70" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08ab7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2add08ab6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2add08abcab0" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08abcab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08abce00"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08ab9020"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08ab91a8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08ab9330"/>
        <function-ref name="getPower" scoped="" ref="0x2add08ab94b8"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08ab9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2add08ab66b8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ab66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add08ab5c58"/>
        <function-ref name="clear" scoped="" ref="0x2add08ab4380"/>
        <function-ref name="isValid" scoped="" ref="0x2add08ab5578"/>
        <function-ref name="set" scoped="" ref="0x2add08ab4a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2add08ab7498" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ab7498"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08ab77e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08ab7970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2add08aae190" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08aae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08aae4e0"/>
        <function-ref name="isSet" scoped="" ref="0x2add08aae668"/>
        <function-ref name="cancel" scoped="" ref="0x2add08aae7f0"/>
        <function-ref name="set" scoped="" ref="0x2add08aae978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2add08ab2670" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add08ab2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add08ab1ad0"/>
        <function-ref name="clear" scoped="" ref="0x2add08ab01f0"/>
        <function-ref name="isValid" scoped="" ref="0x2add08ab13f0"/>
        <function-ref name="set" scoped="" ref="0x2add08ab08d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2add08ab99d8" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2add08ab99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add08ab9d28"/>
        <function-ref name="noAck" scoped="" ref="0x2add08ab7020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add08ab71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2add08ae7ae8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2add08ae7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2add08ae7e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2add08aad918" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08aad918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08aadc68"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08aaddf0"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08ae8020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08ae81a8"/>
        <function-ref name="getPower" scoped="" ref="0x2add08ae8330"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08ae84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2add08adeaf0" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add08adeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08adee40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add08add020"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08add1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08add330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add08add4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2add08ae6510" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2add08ae6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add08ae5a88"/>
        <function-ref name="clear" scoped="" ref="0x2add08ae4190"/>
        <function-ref name="isValid" scoped="" ref="0x2add08ae53a8"/>
        <function-ref name="set" scoped="" ref="0x2add08ae4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2add08ae7310" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08ae7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08ae7660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08ae77e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2add08ade020" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2add08ade020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08ade370"/>
        <function-ref name="isSet" scoped="" ref="0x2add08ade4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ade680"/>
        <function-ref name="set" scoped="" ref="0x2add08ade808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2add08adae38" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2add08adae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08adca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2add08adb0f0" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2add08adb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08adbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2add08ae2478" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2add08ae2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2add08ae1900"/>
        <function-ref name="clear" scoped="" ref="0x2add08ae0020"/>
        <function-ref name="isValid" scoped="" ref="0x2add08ae1220"/>
        <function-ref name="set" scoped="" ref="0x2add08ae0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2add08ae8850" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2add08ae8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add08ae8ba0"/>
        <function-ref name="noAck" scoped="" ref="0x2add08ae8d28"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add08ae7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2add08b16128" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2add08b16128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08b16ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2add08b0d330" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add08b0d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e6c1d8"/>
            <typename><typedef-ref name="T32khz" ref="0x2add07e6c530"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08b0c0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08b0c9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08b0c548"/>
        <function-ref name="overflow" scoped="" ref="0x2add08b0ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2add08b45728" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2add08b45728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08b42a18"/>
        <function-ref name="fired" scoped="" ref="0x2add08b43158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08b43e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08b439f8"/>
        <function-ref name="getdt" scoped="" ref="0x2add08b402e8"/>
        <function-ref name="gett0" scoped="" ref="0x2add08b42e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08b435a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08b44370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08b42448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08b44810"/>
        <function-ref name="stop" scoped="" ref="0x2add08b44cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2add08b408a8" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2add08b408a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08b3f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08b099e0" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08b099e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08b09d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2add08b36c80" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2add08b36c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08b35a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08b344a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08b34020"/>
        <function-ref name="overflow" scoped="" ref="0x2add08b34930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08b3a020" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08b3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08b3a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2add08b3a998" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2add08b3a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08b36020"/>
        <function-ref name="fired" scoped="" ref="0x2add08b380c0"/>
        <function-ref name="startAt" scoped="" ref="0x2add08b389d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08b38548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add08b364a8"/>
        <function-ref name="start" scoped="" ref="0x2add08b39730"/>
        <function-ref name="stop" scoped="" ref="0x2add08b39c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add08b8b020" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add08b8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08b89690"/>
        <function-ref name="fired" scoped="" ref="0x2add08b8a6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2add08b89088"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08b8ab80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add08b89b18"/>
        <function-ref name="start" scoped="" ref="0x2add08b8bd70"/>
        <function-ref name="stop" scoped="" ref="0x2add08b8a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08b8c7d8" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08b8c7d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2add07dd0208"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2add07dd0208"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08b8cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add08b87128" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add08b87128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08b87e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08bc77b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08bc7330"/>
        <function-ref name="overflow" scoped="" ref="0x2add08bc7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2add09906e70" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2add09906e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2add099051e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2add09905370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2add099054f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2add09905680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2add09905808"/>
        <function-ref name="setControl" scoped="" ref="0x2add09905990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2add09911b40" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add09911b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0990d238"/>
        <function-ref name="fired" scoped="" ref="0x2add0990f2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2add0990fbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2add0990f738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add0990d6c0"/>
        <function-ref name="start" scoped="" ref="0x2add099108f8"/>
        <function-ref name="stop" scoped="" ref="0x2add09910dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09911398" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09911398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add099116e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2add0990dca8" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add0990dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add0990ca28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add0990b4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add0990b020"/>
        <function-ref name="overflow" scoped="" ref="0x2add0990b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2add09901db0" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2add09901db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2add09900170"/>
        <function-ref name="compareBusy" scoped="" ref="0x2add099002f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2add09900480"/>
        <function-ref name="countBusy" scoped="" ref="0x2add09900608"/>
        <function-ref name="getAssr" scoped="" ref="0x2add09900790"/>
        <function-ref name="setAssr" scoped="" ref="0x2add09900918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2add09905d20" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2add09905d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2add09901510"/>
        <function-ref name="fired" scoped="" ref="0x2add099022b0"/>
        <function-ref name="get" scoped="" ref="0x2add099038f0"/>
        <function-ref name="reset" scoped="" ref="0x2add09902738"/>
        <function-ref name="isOn" scoped="" ref="0x2add09901998"/>
        <function-ref name="set" scoped="" ref="0x2add09903d78"/>
        <function-ref name="start" scoped="" ref="0x2add09902bc0"/>
        <function-ref name="stop" scoped="" ref="0x2add09901088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add0990a020" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add0990a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2add099060f8"/>
        <function-ref name="test" scoped="" ref="0x2add099077a8"/>
        <function-ref name="get" scoped="" ref="0x2add0990aba0"/>
        <function-ref name="setScale" scoped="" ref="0x2add09906580"/>
        <function-ref name="getScale" scoped="" ref="0x2add09906a58"/>
        <function-ref name="reset" scoped="" ref="0x2add099089e8"/>
        <function-ref name="overflow" scoped="" ref="0x2add09908560"/>
        <function-ref name="isOn" scoped="" ref="0x2add09907c30"/>
        <function-ref name="set" scoped="" ref="0x2add09908088"/>
        <function-ref name="start" scoped="" ref="0x2add09908e70"/>
        <function-ref name="stop" scoped="" ref="0x2add09907320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2add08bd85e8" loc="63:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2add08bd85e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08bd8938"/>
        <function-ref name="runTask" scoped="" ref="0x2add08bd8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2add08bdc648" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2add08bdc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08bdacc0"/>
        <function-ref name="fired" scoped="" ref="0x2add08bdbd50"/>
        <function-ref name="startAt" scoped="" ref="0x2add08bda6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08bda230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2add08bd8190"/>
        <function-ref name="start" scoped="" ref="0x2add08bdb3f0"/>
        <function-ref name="stop" scoped="" ref="0x2add08bdb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add08be1290" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08be1290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08bdd5f0"/>
        <function-ref name="fired" scoped="" ref="0x2add08be0ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08bdf8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08bdf470"/>
        <function-ref name="getdt" scoped="" ref="0x2add08bdc020"/>
        <function-ref name="gett0" scoped="" ref="0x2add08bdda40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08bdf020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08be1dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08bdd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08be02b8"/>
        <function-ref name="stop" scoped="" ref="0x2add08be0758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2add08c0e618" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2add08c0e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08c0e968"/>
        <function-ref name="runTask" scoped="" ref="0x2add08c0eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2add08c135a0" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2add08c135a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08c0f8f0"/>
        <function-ref name="fired" scoped="" ref="0x2add08c11020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08c11d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08c118c0"/>
        <function-ref name="getdt" scoped="" ref="0x2add08c0e1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2add08c0fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08c11470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08c12118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08c0f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08c125b8"/>
        <function-ref name="stop" scoped="" ref="0x2add08c12a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add08c190c8" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08c190c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08c15610"/>
        <function-ref name="fired" scoped="" ref="0x2add08c18a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08c16900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08c16490"/>
        <function-ref name="getdt" scoped="" ref="0x2add08c13020"/>
        <function-ref name="gett0" scoped="" ref="0x2add08c15a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08c16020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08c19c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08c15020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08c18118"/>
        <function-ref name="stop" scoped="" ref="0x2add08c185d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2add08c0cc38" loc="37:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2add08c0cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08c0b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2add08c0be48" loc="38:/opt/tinyos-2.1.1/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2add08c0be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2add08c4cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2add08c4b548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2add08c4b0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2add08c4b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add08c46420" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08c46420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08c326c8"/>
        <function-ref name="fired" scoped="" ref="0x2add08c35db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08c33ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08c33688"/>
        <function-ref name="getdt" scoped="" ref="0x2add08c31020"/>
        <function-ref name="gett0" scoped="" ref="0x2add08c32b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08c33238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08c35020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08c320f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08c354c0"/>
        <function-ref name="stop" scoped="" ref="0x2add08c35960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2add08c3d7d8" loc="38:/opt/tinyos-2.1.1/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2add08c3d7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08c39a18"/>
        <function-ref name="fired" scoped="" ref="0x2add08c3a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08c3ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08c3a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2add08c382e8"/>
        <function-ref name="gett0" scoped="" ref="0x2add08c39e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08c3a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08c3c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08c39448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08c3c810"/>
        <function-ref name="stop" scoped="" ref="0x2add08c3ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2add08c65a88" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2add08c65a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c64020"/>
        <function-ref name="write" scoped="" ref="0x2add08c641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2add08c2b020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2add08c2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2add08c69a88" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2add08c69a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c69dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08c68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2add08c63470" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2add08c63470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c637c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c63948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2add08c63c10" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2add08c63c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c62020"/>
        <function-ref name="write" scoped="" ref="0x2add08c621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2add08c57470" loc="94:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2add08c57470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c577c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c57948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2add08c5a470" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2add08c5a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5a7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c5a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2add08c6e2e8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2add08c6e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2add08c5b470" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2add08c5b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5b7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c5b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2add08c68a88" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2add08c68a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c68dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08c67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2add08c67a88" loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2add08c67a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c67dd8"/>
        <function-ref name="write" scoped="" ref="0x2add08c65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2add08c60c10" loc="79:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2add08c60c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5e020"/>
        <function-ref name="write" scoped="" ref="0x2add08c5e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2add08c62470" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2add08c62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c627c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c62948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2add08c2d948" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2add08c2d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2add08c2dc98"/>
        <function-ref name="abortRelease" scoped="" ref="0x2add08c2de20"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2add08c2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2add08c6dc50" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2add08c6dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2add08c6b2e8" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2add08c6b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6b738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2add08c6ba00" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2add08c6ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2add08c5bc10" loc="89:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2add08c5bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5a020"/>
        <function-ref name="write" scoped="" ref="0x2add08c5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2add08c6d020" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2add08c6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2add08c672e8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2add08c672e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c67638"/>
        <function-ref name="write" scoped="" ref="0x2add08c677c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2add08c682e8" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2add08c682e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c68638"/>
        <function-ref name="write" scoped="" ref="0x2add08c687c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2add08c2c900" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2add08c2c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c2cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2add08c59c10" loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2add08c59c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c57020"/>
        <function-ref name="write" scoped="" ref="0x2add08c571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2add08c5ac10" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2add08c5ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c59020"/>
        <function-ref name="write" scoped="" ref="0x2add08c591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2add08c5e470" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2add08c5e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5e7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c5e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2add08c5cc10" loc="87:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2add08c5cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5b020"/>
        <function-ref name="write" scoped="" ref="0x2add08c5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2add08c61470" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2add08c61470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c617c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c61948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2add08c57c10" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2add08c57c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08c565e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08c56770"/>
        <function-ref name="write" scoped="" ref="0x2add08c568f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08c56a80"/>
        <function-ref name="readDone" scoped="" ref="0x2add08c56c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2add08c2c2e8" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2add08c2c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c2c638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2add08c692e8" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2add08c692e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c69638"/>
        <function-ref name="write" scoped="" ref="0x2add08c697c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2add08c652e8" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2add08c652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c65638"/>
        <function-ref name="write" scoped="" ref="0x2add08c657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2add08c62c10" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2add08c62c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c61020"/>
        <function-ref name="write" scoped="" ref="0x2add08c611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2add08c64470" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2add08c64470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c647c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c64948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2add08c2b638" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2add08c2b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c2b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2add08c64c10" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2add08c64c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c63020"/>
        <function-ref name="write" scoped="" ref="0x2add08c631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08c2ecc8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08c2ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08c2d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08c2d228"/>
        <function-ref name="request" scoped="" ref="0x2add08c2d3b0"/>
        <function-ref name="granted" scoped="" ref="0x2add08c2d538"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08c2d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2add08c6a060" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2add08c6a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2add08c6ac90" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2add08c6ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2add08c5c470" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2add08c5c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5c7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c5c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2add08c5dc10" loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2add08c5dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5c020"/>
        <function-ref name="write" scoped="" ref="0x2add08c5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2add08c6d638" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2add08c6d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2add08c5d470" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2add08c5d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5d7c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c5d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2add08c59470" loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2add08c59470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c597c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c59948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2add08c5ec10" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2add08c5ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c5d020"/>
        <function-ref name="write" scoped="" ref="0x2add08c5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2add08c2bc50" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2add08c2bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2add08c60470" loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2add08c60470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c607c0"/>
        <function-ref name="write" scoped="" ref="0x2add08c60948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2add08c6e900" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2add08c6e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2add08c61c10" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2add08c61c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08c60020"/>
        <function-ref name="write" scoped="" ref="0x2add08c601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2add08c6a678" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2add08c6a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2add08c6a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2add08c55020" loc="98:/opt/tinyos-2.1.1/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2add08c55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2add08c55370"/>
        <function-ref name="writeDone" scoped="" ref="0x2add08c554f8"/>
        <function-ref name="write" scoped="" ref="0x2add08c55680"/>
        <function-ref name="beginRead" scoped="" ref="0x2add08c55808"/>
        <function-ref name="readDone" scoped="" ref="0x2add08c55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2add08c76900" loc="35:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2add08c76900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2add08c76c50"/>
        <function-ref name="rand32" scoped="" ref="0x2add08c76dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2add08c738d8" loc="34:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2add08c738d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08c76458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08c7aa58" loc="33:/opt/tinyos-2.1.1/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08c7aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08c7ada8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2add08c6f690" loc="37:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2add08c6f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2add08c6f9e0"/>
        <function-ref name="rand32" scoped="" ref="0x2add08c6fb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2add08c70678" loc="36:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2add08c70678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08c6f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08c75da0" loc="35:/opt/tinyos-2.1.1/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08c75da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08c70170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add08c78c68" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08c78c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08cab020"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08cab1a8"/>
        <function-ref name="isState" scoped="" ref="0x2add08cab330"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08cab4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2add08cab640"/>
        <function-ref name="forceState" scoped="" ref="0x2add08cab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08ca26b0" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08ca26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ca2a00"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ca2b88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08ca2d10"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ca1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08ca11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add08ca5980" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add08ca5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ca5cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ca5e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08ca2020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ca21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08ca2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08c9c420" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08c9c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08c9c770"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08c9c8f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08c9ca80"/>
        <function-ref name="cancel" scoped="" ref="0x2add08c9cc08"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08c9cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add08c9d0f0" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add08c9d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08c9d440"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08c9d5c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08c9d750"/>
        <function-ref name="cancel" scoped="" ref="0x2add08c9d8d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08c9da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2add08c9be00" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2add08c9be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2add08c9a1a8"/>
        <function-ref name="rand32" scoped="" ref="0x2add08c9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08c9dcd8" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08c9dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08c9c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add08c9a620" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08c9a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08c9a970"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08c9aaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2add08c9b080" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08c9b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08c9b3d0"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08c9b558"/>
        <function-ref name="isState" scoped="" ref="0x2add08c9b6e0"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08c9b868"/>
        <function-ref name="requestState" scoped="" ref="0x2add08c9b9f0"/>
        <function-ref name="forceState" scoped="" ref="0x2add08c9bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add08c9e0e0" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08c9e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08c9e430"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08c9e5b8"/>
        <function-ref name="isState" scoped="" ref="0x2add08c9e740"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08c9e8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2add08c9ea50"/>
        <function-ref name="forceState" scoped="" ref="0x2add08c9ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08cca918" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08cca918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08ccac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08ca3b10" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08ca3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08ca3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2add08cca210" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2add08cca210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cca560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08cc4128" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08cc4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cc4478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08cc59e0" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08cc59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08cc5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08cc9d18" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08cc9d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cc50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add08cc4768" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08cc4768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08cc4ab8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08cc4c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2add08cc5418" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2add08cc5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cc5768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08ce80c8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08ce80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08ce8418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08ce8718" loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08ce8718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ce8a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ce8bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08ce8d78"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ce7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08ce71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add08ceb938" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add08ceb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08cebc88"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08cebe10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08cea020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08cea1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08cea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2add08ceac30" loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2add08ceac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ce9020"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ce91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08ce9330"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ce94b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08ce9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08cea5c0" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08cea5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cea910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08cecd10" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08cecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08ceb0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08ceb228"/>
        <function-ref name="request" scoped="" ref="0x2add08ceb3b0"/>
        <function-ref name="granted" scoped="" ref="0x2add08ceb538"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08ceb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2add08ce9998" loc="69:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2add08ce9998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08ce9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08cdfd58" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08cdfd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08cde0d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08cde260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08cde3e8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08cde570"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08cde6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08cdea30" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08cdea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cded80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2add08d03020" loc="148:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2add08d03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08d03370"/>
        <function-ref name="runTask" scoped="" ref="0x2add08d034f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2add08cdd080" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08cdd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08cdd3d0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08cdd558"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08cdd6e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08cdd868"/>
        <function-ref name="getPower" scoped="" ref="0x2add08cdd9f0"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08cddb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2add08ce0828" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2add08ce0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ce0b78"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ce0d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08cdf020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08cdf1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08cdf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add08cdc6b8" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add08cdc6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add08cdca08"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add08cdcb90"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add08cdcd18"/>
        <function-ref name="dequeue" scoped="" ref="0x2add08cdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add08cdde68" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08cdde68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08cdc1e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08cdc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2add08ce01b8" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2add08ce01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08ce0508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08ce36f8" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08ce36f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08ce3a48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08ce3bd0"/>
        <function-ref name="request" scoped="" ref="0x2add08ce3d58"/>
        <function-ref name="granted" scoped="" ref="0x2add08ce2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08ce21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2add08ce24b8" loc="48:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2add08ce24b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08ce2808"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08ce2990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08ce2b18"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ce2ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08ce2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2add08cdf688" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2add08cdf688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08cdf9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08d2d8a8" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08d2d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08d2dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2add08d2de80" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2add08d2de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add08d2b1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add08d2b380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add08d2b508"/>
        <function-ref name="dequeue" scoped="" ref="0x2add08d2b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add08d21020" loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add08d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add08d21370"/>
        <function-ref name="stopDone" scoped="" ref="0x2add08d214f8"/>
        <function-ref name="start" scoped="" ref="0x2add08d21680"/>
        <function-ref name="stop" scoped="" ref="0x2add08d21808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08d689d0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08d689d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d68d20"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d67020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d671a8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d67330"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d674b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08d677f0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08d677f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08d67b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add08d231f0" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add08d231f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d23540"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d236c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d23850"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d239d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d23b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2add08d22468" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2add08d22468"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2add08d227b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2add08d22940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2add08d22ac8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2add08d22c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2add08d21b28" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2add08d21b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08d21e78"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08d68030"/>
        <function-ref name="isState" scoped="" ref="0x2add08d681b8"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08d68340"/>
        <function-ref name="requestState" scoped="" ref="0x2add08d684c8"/>
        <function-ref name="forceState" scoped="" ref="0x2add08d68650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2add08d66020" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2add08d66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add08d66370"/>
        <function-ref name="stopDone" scoped="" ref="0x2add08d664f8"/>
        <function-ref name="start" scoped="" ref="0x2add08d66680"/>
        <function-ref name="stop" scoped="" ref="0x2add08d66808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08d23df0" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08d23df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08d22170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2add08d65418" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2add08d65418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2add08d65768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2add08d658f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2add08d65a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2add08d65c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2add08d632a0" loc="67:/opt/tinyos-2.1.1/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2add08d632a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2add08d635f0"/>
        <function-ref name="toIdle" scoped="" ref="0x2add08d63778"/>
        <function-ref name="isState" scoped="" ref="0x2add08d63900"/>
        <function-ref name="isIdle" scoped="" ref="0x2add08d63a88"/>
        <function-ref name="requestState" scoped="" ref="0x2add08d63c10"/>
        <function-ref name="forceState" scoped="" ref="0x2add08d63d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08d55528" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08d55528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d55878"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d55a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d55b88"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d55d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2add08d24ad0" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2add08d24ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d24e20"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d57020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d571a8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d57330"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2add08d57768" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2add08d57768"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2add08d57ab8"/>
        <function-ref name="setRetries" scoped="" ref="0x2add08d57c40"/>
        <function-ref name="getRetries" scoped="" ref="0x2add08d57dc8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2add08d55020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2add08d551a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2add08d519e8" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2add08d519e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2add08d51d38"/>
        <function-ref name="noAck" scoped="" ref="0x2add08d50020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2add08d501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2add08d54ba8" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2add08d54ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2add08d51020"/>
        <function-ref name="setRetries" scoped="" ref="0x2add08d511a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2add08d51330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2add08d514b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2add08d51640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2add08d7ccc8" loc="50:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2add08d7ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08d7b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2add08d7c020" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2add08d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d7c370"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d7c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d7c680"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d7c808"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d7c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2add08d7a928" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2add08d7a928"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2add08d7ac78"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2add08d7ae00"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2add08d78020"/>
        <function-ref name="syncDone" scoped="" ref="0x2add08d781a8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2add08d78330"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2add08d784b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2add08d78640"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2add08d787c8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2add08d78950"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2add08d78ad8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2add08d78c60"/>
        <function-ref name="sync" scoped="" ref="0x2add08d78de8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add08d77020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2add08d772a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2add08d7d020" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2add08d7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add08d7d370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add08d7d4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add08d7d680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add08d7d808"/>
        <function-ref name="setCca" scoped="" ref="0x2add08d7d990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add08d7db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2add08d7e400" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2add08d7e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2add08d7e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2add08d76390" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2add08d76390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2add08d766e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2add08d76868"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2add08d769f0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2add08d76b78"/>
        <function-ref name="setCca" scoped="" ref="0x2add08d76d00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2add08d75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2add08d7f2a8" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2add08d7f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add08d7f5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2add08d7f780"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d7f908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d7fa90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2add08d7fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2add08d84868" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2add08d84868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2add08d84bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2add08d84d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2add08d83020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08d831a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2add08d83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2add08d81628" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2add08d81628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08d81978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2add08d7b368" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2add08d7b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2add08d7b6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2add08d7b840"/>
        <function-ref name="getRssi" scoped="" ref="0x2add08d7b9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2add08d7bb50"/>
        <function-ref name="getPower" scoped="" ref="0x2add08d7bcd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2add08d7be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2add08d775c0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2add08d775c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2add08d77a10"/>
        <function-ref name="changed" scoped="" ref="0x2add08d77b98"/>
        <function-ref name="amGroup" scoped="" ref="0x2add08d77d20"/>
        <function-ref name="setAddress" scoped="" ref="0x2add08d76020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2add08d7a188" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2add08d7a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x2add08d7a4d8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2add08d7a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2add08d83ab0" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2add08d83ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2add08d83e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add08d74020" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add08d74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add08d74370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add08d744f8"/>
        <function-ref name="led1On" scoped="" ref="0x2add08d74680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add08d74808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add08d74990"/>
        <function-ref name="get" scoped="" ref="0x2add08d74b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2add08d74ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2add08d73330"/>
        <function-ref name="set" scoped="" ref="0x2add08d74e28"/>
        <function-ref name="led0On" scoped="" ref="0x2add08d73020"/>
        <function-ref name="led2On" scoped="" ref="0x2add08d731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2add08d81c18" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2add08d81c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2add08d80020"/>
        <function-ref name="source" scoped="" ref="0x2add08d801a8"/>
        <function-ref name="address" scoped="" ref="0x2add08d80330"/>
        <function-ref name="destination" scoped="" ref="0x2add08d804b8"/>
        <function-ref name="setSource" scoped="" ref="0x2add08d80640"/>
        <function-ref name="setDestination" scoped="" ref="0x2add08d807c8"/>
        <function-ref name="type" scoped="" ref="0x2add08d80950"/>
        <function-ref name="setType" scoped="" ref="0x2add08d80ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2add08d80c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2add08d80de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2add08d7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2add08d75388" loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2add08d75388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08d756d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08d75860"/>
        <function-ref name="request" scoped="" ref="0x2add08d759e8"/>
        <function-ref name="granted" scoped="" ref="0x2add08d75b70"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08d75cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add08e09ca8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="SendingAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08e09ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08e04088"/>
        <function-ref name="fired" scoped="" ref="0x2add08e065e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08e05470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08e05020"/>
        <function-ref name="getdt" scoped="" ref="0x2add08e04928"/>
        <function-ref name="gett0" scoped="" ref="0x2add08e044d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08e06a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08e07820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08e05a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08e07cc0"/>
        <function-ref name="stop" scoped="" ref="0x2add08e06198"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x2add093906c0" loc="39:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x2add093906c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0938f370"/>
        <function-ref name="readDone" scoped="" ref="0x2add0938f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelX" ref="0x2add0938c508" loc="41:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelX" scoped="" ref="0x2add0938c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0938b088"/>
        <function-ref name="readDone" scoped="" ref="0x2add0938b4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sounder" ref="0x2add09393230" loc="36:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sounder" scoped="" ref="0x2add09393230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2add09393580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x2add09389228" loc="43:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x2add09389228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09389d70"/>
        <function-ref name="readDone" scoped="" ref="0x2add093881f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Microphone" ref="0x2add0938fe60" loc="40:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Microphone" scoped="" ref="0x2add0938fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0938e9e0"/>
        <function-ref name="readDone" scoped="" ref="0x2add0938ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AccelY" ref="0x2add0938bb78" loc="42:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelY" scoped="" ref="0x2add0938bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0938a6f0"/>
        <function-ref name="readDone" scoped="" ref="0x2add0938ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Vref" ref="0x2add09393910" loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vref" scoped="" ref="0x2add09393910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09392490"/>
        <function-ref name="readDone" scoped="" ref="0x2add093928e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x2add09391020" loc="38:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x2add09391020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09391b68"/>
        <function-ref name="readDone" scoped="" ref="0x2add09390020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x2add09388898" loc="44:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SensorMts300C.nc">
      <component-ref qname="SendingAppC.SensorMts300C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x2add09388898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09386458"/>
        <function-ref name="readDone" scoped="" ref="0x2add093868a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2add08e37240" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2add08e37240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2add08e37590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x2add08e34020" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x2add08e34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x2add08e34370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x2add08e2f7c8" loc="6:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x2add08e2f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e2fb18"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e2fca0"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e2fe28"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e2e020"/>
        <function-ref name="get" scoped="" ref="0x2add08e2e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e2e330"/>
        <function-ref name="set" scoped="" ref="0x2add08e2e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08e2e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add08e34798" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08e34798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08e31a18"/>
        <function-ref name="fired" scoped="" ref="0x2add08e32158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08e32e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08e329f8"/>
        <function-ref name="getdt" scoped="" ref="0x2add08e2f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2add08e31e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08e325a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08e33370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08e31448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08e33810"/>
        <function-ref name="stop" scoped="" ref="0x2add08e33cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add08e36e68" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add08e36e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add08e240c0"/>
        <function-ref name="fired" scoped="" ref="0x2add08e27798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add08e264d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add08e26088"/>
        <function-ref name="getdt" scoped="" ref="0x2add08e24960"/>
        <function-ref name="gett0" scoped="" ref="0x2add08e24510"/>
        <function-ref name="isRunning" scoped="" ref="0x2add08e27be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add08e359e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add08e26aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add08e35e80"/>
        <function-ref name="stop" scoped="" ref="0x2add08e27348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2add08e23e68" loc="20:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2add08e23e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e6c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e6c370"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e6c4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e6c680"/>
        <function-ref name="get" scoped="" ref="0x2add08e6c808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e6c990"/>
        <function-ref name="set" scoped="" ref="0x2add08e6cb18"/>
        <function-ref name="clr" scoped="" ref="0x2add08e6cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2add08e5e020" loc="34:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2add08e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2add08e69328" loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2add08e69328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e69678"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e69800"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e69988"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e69b10"/>
        <function-ref name="get" scoped="" ref="0x2add08e69c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e69e20"/>
        <function-ref name="set" scoped="" ref="0x2add08e68020"/>
        <function-ref name="clr" scoped="" ref="0x2add08e681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2add08e667c0" loc="26:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2add08e667c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e66b10"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e66c98"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e66e20"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e65020"/>
        <function-ref name="get" scoped="" ref="0x2add08e651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e65330"/>
        <function-ref name="set" scoped="" ref="0x2add08e654b8"/>
        <function-ref name="clr" scoped="" ref="0x2add08e65640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2add08e5d4c8" loc="37:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2add08e5d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2add08e5b340" loc="39:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2add08e5b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2add08e63c68" loc="29:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2add08e63c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e62020"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e621a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e62330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e624b8"/>
        <function-ref name="get" scoped="" ref="0x2add08e62640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e627c8"/>
        <function-ref name="set" scoped="" ref="0x2add08e62950"/>
        <function-ref name="clr" scoped="" ref="0x2add08e62ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2add08e6b020" loc="21:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2add08e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e6b370"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e6b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e6b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e6b808"/>
        <function-ref name="get" scoped="" ref="0x2add08e6b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e6bb18"/>
        <function-ref name="set" scoped="" ref="0x2add08e6bca0"/>
        <function-ref name="clr" scoped="" ref="0x2add08e6be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2add08e684b0" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2add08e684b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e68800"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e68988"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e68b10"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e68c98"/>
        <function-ref name="get" scoped="" ref="0x2add08e68e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e67020"/>
        <function-ref name="set" scoped="" ref="0x2add08e671a8"/>
        <function-ref name="clr" scoped="" ref="0x2add08e67330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2add08e5e790" loc="35:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2add08e5e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2add08e65948" loc="27:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2add08e65948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e65c98"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e65e20"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e64020"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e641a8"/>
        <function-ref name="get" scoped="" ref="0x2add08e64330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e644b8"/>
        <function-ref name="set" scoped="" ref="0x2add08e64640"/>
        <function-ref name="clr" scoped="" ref="0x2add08e647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2add08e5b9b0" loc="40:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2add08e5b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2add08e62df0" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2add08e62df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e61170"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e612f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e61480"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e61608"/>
        <function-ref name="get" scoped="" ref="0x2add08e61790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e61918"/>
        <function-ref name="set" scoped="" ref="0x2add08e61aa0"/>
        <function-ref name="clr" scoped="" ref="0x2add08e61c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2add08e6a180" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2add08e6a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e6a4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e6a658"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e6a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e6a968"/>
        <function-ref name="get" scoped="" ref="0x2add08e6aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e6ac78"/>
        <function-ref name="set" scoped="" ref="0x2add08e6ae00"/>
        <function-ref name="clr" scoped="" ref="0x2add08e69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2add08e67638" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2add08e67638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e67988"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e67b10"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e67c98"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e67e20"/>
        <function-ref name="get" scoped="" ref="0x2add08e66020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e661a8"/>
        <function-ref name="set" scoped="" ref="0x2add08e66330"/>
        <function-ref name="clr" scoped="" ref="0x2add08e664b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2add08e5ee00" loc="36:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2add08e5ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2add08e64ae0" loc="28:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2add08e64ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e64e30"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e63020"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e631a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e63330"/>
        <function-ref name="get" scoped="" ref="0x2add08e634b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e63640"/>
        <function-ref name="set" scoped="" ref="0x2add08e637c8"/>
        <function-ref name="clr" scoped="" ref="0x2add08e63950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2add08e5db38" loc="38:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2add08e5db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2add08e5a060" loc="41:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2add08e5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e5a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2add08e60020" loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2add08e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add08e60370"/>
        <function-ref name="isInput" scoped="" ref="0x2add08e604f8"/>
        <function-ref name="toggle" scoped="" ref="0x2add08e60680"/>
        <function-ref name="isOutput" scoped="" ref="0x2add08e60808"/>
        <function-ref name="get" scoped="" ref="0x2add08e60990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add08e60b18"/>
        <function-ref name="set" scoped="" ref="0x2add08e60ca0"/>
        <function-ref name="clr" scoped="" ref="0x2add08e60e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2add08e572a8" loc="18:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2add08e572a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e575f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2add08e56690" loc="21:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2add08e56690"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2add08e553c0" loc="23:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2add08e553c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e55710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2add08e57918" loc="19:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2add08e57918"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e57c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2add08e55a30" loc="24:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2add08e55a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e55d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2add08e56020" loc="20:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2add08e56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e56370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2add08e56d00" loc="22:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2add08e56d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e550a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2add08e540f0" loc="25:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2add08e540f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add08e54440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099cd020" loc="31:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099cdb68"/>
        <function-ref name="readDone" scoped="" ref="0x2add099cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add099a7648" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add099a7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add099a7998"/>
        <function-ref name="configure" scoped="" ref="0x2add099a7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099a97f0" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099a97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099a8370"/>
        <function-ref name="readDone" scoped="" ref="0x2add099a87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add099a8d78" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add099a8d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add099a70f0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add099a7278"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add099a7400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add08e7fd88" loc="18:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add08e7fd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08e79908"/>
        <function-ref name="readDone" scoped="" ref="0x2add08e79d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2add08e74a00" loc="19:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2add08e74a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08e775b0"/>
        <function-ref name="readDone" scoped="" ref="0x2add08e77a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add08e73670" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08e73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add08e739c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add08e73b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add08e73cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add08e724c0" loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08e724c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08e72810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08e72998"/>
        <function-ref name="request" scoped="" ref="0x2add08e72b20"/>
        <function-ref name="granted" scoped="" ref="0x2add08e72ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08e72e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add08ec4890" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08ec4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add08ec4be0"/>
        <function-ref name="configure" scoped="" ref="0x2add08ec4d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2add08eba9b0" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2add08eba9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2add08ebad00"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08ec4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2add08ebf0d0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08ebf0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2add08ebf420"/>
        <function-ref name="cancel" scoped="" ref="0x2add08ebf5a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08ebf730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08e6e020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08e6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08e6e370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08e6e4f8"/>
        <function-ref name="request" scoped="" ref="0x2add08e6e680"/>
        <function-ref name="granted" scoped="" ref="0x2add08e6e808"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08e6e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add08ec3d40" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add08ec3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add08eb70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2add08eb6628" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2add08eb6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2add08eb6978"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08eb6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2add08eb7b70" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08eb7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2add08eb6020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08eb61a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08eb6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2add08ea60d0" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08ea60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2add08ea6420"/>
        <function-ref name="getAdmux" scoped="" ref="0x2add08ea65a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2add08ea6730"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add08ea68b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2add08ea6a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x2add08ea6bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2add08ea6d50"/>
        <function-ref name="isComplete" scoped="" ref="0x2add08eb4020"/>
        <function-ref name="cancel" scoped="" ref="0x2add08eb41a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2add08eb4330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2add08eb44b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2add08eb4640"/>
        <function-ref name="startConversion" scoped="" ref="0x2add08eb47c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2add08eb4a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2add08eb4bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2add08eb4d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2add08eb3020"/>
        <function-ref name="getValue" scoped="" ref="0x2add08eb31a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08eb3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2add08eb73b8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add08eb73b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add08eb7708"/>
        <function-ref name="stop" scoped="" ref="0x2add08eb7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2add08eb3610" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2add08eb3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2add08eb3960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2add08eb3ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2add08eb3c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x2add08eb3df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2add08ea5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2add08eb8a18" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08eb8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2add08eb8d68"/>
        <function-ref name="getAdmux" scoped="" ref="0x2add08f10020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2add08f101a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add08f10330"/>
        <function-ref name="enableAdc" scoped="" ref="0x2add08f104b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x2add08f10640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2add08f107c8"/>
        <function-ref name="isComplete" scoped="" ref="0x2add08f10950"/>
        <function-ref name="cancel" scoped="" ref="0x2add08f10ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2add08f10c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2add08f10de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2add08f0f020"/>
        <function-ref name="startConversion" scoped="" ref="0x2add08f0f1a8"/>
        <function-ref name="isStarted" scoped="" ref="0x2add08f0f430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2add08f0f5b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2add08f0f740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2add08f0f8c8"/>
        <function-ref name="getValue" scoped="" ref="0x2add08f0fa50"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08f0fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2add08f0ec38" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2add08f0ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2add08f0b020"/>
        <function-ref name="getAdmux" scoped="" ref="0x2add08f0b1a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2add08f0b330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add08f0b4b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2add08f0b640"/>
        <function-ref name="setAdmux" scoped="" ref="0x2add08f0b7c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2add08f0b950"/>
        <function-ref name="isComplete" scoped="" ref="0x2add08f0bad8"/>
        <function-ref name="cancel" scoped="" ref="0x2add08f0bc60"/>
        <function-ref name="disableAdc" scoped="" ref="0x2add08f0bde8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2add08f0a020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2add08f0a1a8"/>
        <function-ref name="startConversion" scoped="" ref="0x2add08f0a330"/>
        <function-ref name="isStarted" scoped="" ref="0x2add08f0a5b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2add08f0a740"/>
        <function-ref name="setContinuous" scoped="" ref="0x2add08f0a8c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2add08f0aa50"/>
        <function-ref name="getValue" scoped="" ref="0x2add08f0abd8"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08f0ad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2add08f090c0" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2add08f090c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2add08f09410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add08fa5af8" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add08fa5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add08fa5e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add08fa4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add08fa36d8" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add08fa36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add08fa3a48"/>
        <function-ref name="configure" scoped="" ref="0x2add08fa3bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add08fa4268" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fa4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08fa45b8"/>
        <function-ref name="requested" scoped="" ref="0x2add08fa4740"/>
        <function-ref name="granted" scoped="" ref="0x2add08fa48c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08fa4a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add08fa4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add08fa6d88" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08fa6d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08fa5170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08fa52f8"/>
        <function-ref name="request" scoped="" ref="0x2add08fa5480"/>
        <function-ref name="granted" scoped="" ref="0x2add08fa5608"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08fa5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add08fa4e20" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add08fa4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add08fa31a8"/>
        <function-ref name="userId" scoped="" ref="0x2add08fa3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09a129f8" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09a129f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09a12d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09a10020" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09a10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09a10370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09a104f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09a10680"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09a10808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09a0ed58" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09a0ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09a0d0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a0d278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09a0c980" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a0c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09a0ccf0"/>
        <function-ref name="configure" scoped="" ref="0x2add09a0ce78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09a0b130" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09a0b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09a0b480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09a0b608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09a0b790"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09a0b918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09a0d4c0" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a0d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a0d810"/>
        <function-ref name="requested" scoped="" ref="0x2add09a0d998"/>
        <function-ref name="granted" scoped="" ref="0x2add09a0db20"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a0dca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a0de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09a0bb60" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09a0bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09a0a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09a0a1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2add09a0a330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09a0a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09a0a640"/>
        <function-ref name="get" scoped="" ref="0x2add09a0a7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09a0a950"/>
        <function-ref name="led0On" scoped="" ref="0x2add09a09020"/>
        <function-ref name="set" scoped="" ref="0x2add09a0ac60"/>
        <function-ref name="led2On" scoped="" ref="0x2add09a0aad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09a0ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09a0e060" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09a0e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a0e3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09a0e558"/>
        <function-ref name="request" scoped="" ref="0x2add09a0e6e0"/>
        <function-ref name="granted" scoped="" ref="0x2add09a0e868"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a0e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09a0c0e0" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a0c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09a0c430"/>
        <function-ref name="userId" scoped="" ref="0x2add09a0c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09a092e8" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09a092e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09a09638"/>
        <function-ref name="runTask" scoped="" ref="0x2add09a097c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add08fa0b98" loc="62:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add08fa0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add08fdb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add08fdb268" loc="63:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add08fdb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08fdb5b8"/>
        <function-ref name="requested" scoped="" ref="0x2add08fdb740"/>
        <function-ref name="granted" scoped="" ref="0x2add08fdb8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08fdba50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add08fdbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2add08fa0478" loc="60:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add08fa0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add08fa07c8"/>
        <function-ref name="stop" scoped="" ref="0x2add08fa0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add08fdbe20" loc="64:/opt/tinyos-2.1.1/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add08fdbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add08fda1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add08fda330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09a520e0" loc="52:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09a520e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09a52430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09a52678" loc="53:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a52678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a529c8"/>
        <function-ref name="requested" scoped="" ref="0x2add09a52b50"/>
        <function-ref name="granted" scoped="" ref="0x2add09a52cd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a52e60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a51020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2add09a54990" loc="50:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add09a54990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09a54ce0"/>
        <function-ref name="stop" scoped="" ref="0x2add09a54e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09a51268" loc="54:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a51268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09a515b8"/>
        <function-ref name="userId" scoped="" ref="0x2add09a51740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add08fd2c68" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add08fd2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08fd17e8"/>
        <function-ref name="readDone" scoped="" ref="0x2add08fd1c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2add08fd0880" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2add08fd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08fcf490"/>
        <function-ref name="readDone" scoped="" ref="0x2add08fcf918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add08fcde78" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add08fcde78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add08fcc1f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add08fcc380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add08fcc508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2add08fcd020" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2add08fcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2add08fcd370"/>
        <function-ref name="cancel" scoped="" ref="0x2add08fcd4f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2add08fcd680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2add08fbdbf8" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2add08fbdbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add08fbc020"/>
        <function-ref name="runTask" scoped="" ref="0x2add08fbc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add08ffea28" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add08ffea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08ffd620"/>
        <function-ref name="readDone" scoped="" ref="0x2add08ffda90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add08fe5348" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add08fe5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add08fe4020"/>
        <function-ref name="readDone" scoped="" ref="0x2add08fe4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add08fe4b28" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add08fe4b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add08fe3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add08fe31a8"/>
        <function-ref name="request" scoped="" ref="0x2add08fe3330"/>
        <function-ref name="granted" scoped="" ref="0x2add08fe34b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add08fe3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2add0902b8d8" loc="30:/opt/tinyos-2.1.1/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add0902b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0902bc28"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0902bdb0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09028020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099cb498" loc="20:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelXC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099cb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099ca020"/>
        <function-ref name="readDone" scoped="" ref="0x2add099ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadX" ref="0x2add0901b328" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadX" scoped="" ref="0x2add0901b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0901be70"/>
        <function-ref name="readDone" scoped="" ref="0x2add0901a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x2add090159d8" loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x2add090159d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09014560"/>
        <function-ref name="readDone" scoped="" ref="0x2add090149b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadY" ref="0x2add09019020" loc="6:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadY" scoped="" ref="0x2add09019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09019b68"/>
        <function-ref name="readDone" scoped="" ref="0x2add09017020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x2add09017d48" loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelReadP.nc">
      <component-ref qname="AccelReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x2add09017d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090168b8"/>
        <function-ref name="readDone" scoped="" ref="0x2add09016d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2add0900e510" loc="21:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2add0900e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0900e860"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0900e9e8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0900eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2add0900faf8" loc="20:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2add0900faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0900fe48"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0900e020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0900e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09012dd8" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelConfigP.nc">
      <component-ref qname="AccelConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09012dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0900f170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0900f2f8"/>
        <function-ref name="request" scoped="" ref="0x2add0900f480"/>
        <function-ref name="granted" scoped="" ref="0x2add0900f608"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0900f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add0900d6d0" loc="17:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add0900d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0900da20"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0900dba8"/>
        <function-ref name="start" scoped="" ref="0x2add0900dd30"/>
        <function-ref name="stop" scoped="" ref="0x2add0900a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2add0900ad50" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2add0900ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add090090d8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09009260"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add090093e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcY" ref="0x2add090551f8" loc="25:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcY" scoped="" ref="0x2add090551f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add09055548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelAdcX" ref="0x2add09056b28" loc="24:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelAdcX" scoped="" ref="0x2add09056b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add09056e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2add0900a388" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2add0900a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0900a6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0900a860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0900a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2add09048590" loc="67:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2add09048590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add090488e0"/>
        <function-ref name="runTask" scoped="" ref="0x2add09048a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelPin" ref="0x2add090579a8" loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AccelPin" scoped="" ref="0x2add090579a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09057cf8"/>
        <function-ref name="isInput" scoped="" ref="0x2add09057e80"/>
        <function-ref name="toggle" scoped="" ref="0x2add09056030"/>
        <function-ref name="isOutput" scoped="" ref="0x2add090561b8"/>
        <function-ref name="get" scoped="" ref="0x2add09056340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add090564c8"/>
        <function-ref name="set" scoped="" ref="0x2add09056650"/>
        <function-ref name="clr" scoped="" ref="0x2add090567d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add09009830" loc="22:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelP.nc">
      <component-ref qname="AccelP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add09009830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09058bc0"/>
        <function-ref name="fired" scoped="" ref="0x2add090591c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09058020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add09059a60"/>
        <function-ref name="getdt" scoped="" ref="0x2add090574d8"/>
        <function-ref name="gett0" scoped="" ref="0x2add09057088"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09059610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add090083d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add090585f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add09008878"/>
        <function-ref name="stop" scoped="" ref="0x2add09008d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add09043550" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="AccelConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add09043550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0903f768"/>
        <function-ref name="fired" scoped="" ref="0x2add09042e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09040b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add09040728"/>
        <function-ref name="getdt" scoped="" ref="0x2add0903e088"/>
        <function-ref name="gett0" scoped="" ref="0x2add0903fbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add090402d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add090420c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add0903f198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add09042560"/>
        <function-ref name="stop" scoped="" ref="0x2add09042a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add0903be38" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add0903be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add0903a1e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add0903a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09039ae8" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09039ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09039e58"/>
        <function-ref name="configure" scoped="" ref="0x2add09038020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add0903a5b8" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0903a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0903a908"/>
        <function-ref name="requested" scoped="" ref="0x2add0903aa90"/>
        <function-ref name="granted" scoped="" ref="0x2add0903ac18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0903ada0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0903b140" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0903b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0903b4b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0903b638"/>
        <function-ref name="request" scoped="" ref="0x2add0903b7c0"/>
        <function-ref name="granted" scoped="" ref="0x2add0903b948"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0903bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09039268" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="AccelConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09039268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add090395b8"/>
        <function-ref name="userId" scoped="" ref="0x2add09039740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09a32520" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09a32520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09a32870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09a32af8" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="AccelConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09a32af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09a32e48"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09a31020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09a311a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09a31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09a2e9a8" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09a2e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09a2ed18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09a2c6f8" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a2c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09a2ca68"/>
        <function-ref name="configure" scoped="" ref="0x2add09a2cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09a2ce78" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09a2ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09a2b1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09a2b380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09a2b508"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09a2b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09a2d268" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a2d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a2d5b8"/>
        <function-ref name="requested" scoped="" ref="0x2add09a2d740"/>
        <function-ref name="granted" scoped="" ref="0x2add09a2d8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a2da50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a2dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09a2b8d8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09a2b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09a2bc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09a2bdb0"/>
        <function-ref name="led1On" scoped="" ref="0x2add09a2a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09a2a1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09a2a330"/>
        <function-ref name="get" scoped="" ref="0x2add09a2a4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09a2a640"/>
        <function-ref name="led0On" scoped="" ref="0x2add09a2ac60"/>
        <function-ref name="set" scoped="" ref="0x2add09a2a950"/>
        <function-ref name="led2On" scoped="" ref="0x2add09a2a7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09a2aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09a2fbb8" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09a2fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a2e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09a2e1a8"/>
        <function-ref name="request" scoped="" ref="0x2add09a2e330"/>
        <function-ref name="granted" scoped="" ref="0x2add09a2e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a2e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09a2de20" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a2de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09a2c1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add09a2c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09a29020" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="AccelConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09a29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09a29370"/>
        <function-ref name="runTask" scoped="" ref="0x2add09a294f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add090346d8" loc="59:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add090346d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09034a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09034bb0"/>
        <function-ref name="start" scoped="" ref="0x2add09034d38"/>
        <function-ref name="stop" scoped="" ref="0x2add0905e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add0905e268" loc="61:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add0905e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add0905e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add0905e800" loc="62:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0905e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0905eb50"/>
        <function-ref name="requested" scoped="" ref="0x2add0905ecd8"/>
        <function-ref name="granted" scoped="" ref="0x2add0905ee60"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0905d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add0905d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add0905d3f0" loc="63:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="AccelConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add0905d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add0905d740"/>
        <function-ref name="userId" scoped="" ref="0x2add0905d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09a75d58" loc="51:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09a75d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09a730d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09a73260"/>
        <function-ref name="start" scoped="" ref="0x2add09a733e8"/>
        <function-ref name="stop" scoped="" ref="0x2add09a73570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09a737b8" loc="53:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09a737b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09a73b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2add09a71120" loc="68:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2add09a71120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09a71470"/>
        <function-ref name="runTask" scoped="" ref="0x2add09a715f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09a73d50" loc="54:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09a73d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09a720d8"/>
        <function-ref name="requested" scoped="" ref="0x2add09a72260"/>
        <function-ref name="granted" scoped="" ref="0x2add09a723e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09a72570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09a726f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2add09a718c0" loc="63:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2add09a718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09a71c10"/>
        <function-ref name="runTask" scoped="" ref="0x2add09a71d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2add09a75638" loc="50:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add09a75638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09a75988"/>
        <function-ref name="stop" scoped="" ref="0x2add09a75b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09a72940" loc="55:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="AccelConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09a72940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09a72c90"/>
        <function-ref name="userId" scoped="" ref="0x2add09a72e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add090abbd0" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add090abbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090a9768"/>
        <function-ref name="readDone" scoped="" ref="0x2add090a9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add090a8450" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add090a8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090a7020"/>
        <function-ref name="readDone" scoped="" ref="0x2add090a7490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add090a7b28" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add090a7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090a5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090a51a8"/>
        <function-ref name="request" scoped="" ref="0x2add090a5330"/>
        <function-ref name="granted" scoped="" ref="0x2add090a54b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add090a3288" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add090a3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090a3df0"/>
        <function-ref name="readDone" scoped="" ref="0x2add090a22d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add090a2b18" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add090a2b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090a06f0"/>
        <function-ref name="readDone" scoped="" ref="0x2add090a0b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add0909f240" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="AccelReadP.MultiplexY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0909f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0909f5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0909f738"/>
        <function-ref name="request" scoped="" ref="0x2add0909f8c0"/>
        <function-ref name="granted" scoped="" ref="0x2add0909fa48"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0909fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09a3f648" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09a3f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09a3f998"/>
        <function-ref name="configure" scoped="" ref="0x2add09a3fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09a427b8" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09a427b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09a41370"/>
        <function-ref name="readDone" scoped="" ref="0x2add09a417c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09a41d78" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09a41d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09a3f0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09a3f278"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09a3f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099c98d8" loc="20:/opt/tinyos-2.1.1/tos/sensorboards/mts300/AccelYC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099c98d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099c8458"/>
        <function-ref name="readDone" scoped="" ref="0x2add099c88a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09ac5060" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09ac5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09ac53b0"/>
        <function-ref name="configure" scoped="" ref="0x2add09ac5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09ac71c8" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09ac71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09ac7d10"/>
        <function-ref name="readDone" scoped="" ref="0x2add09ac61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09ac6778" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.AccelYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ac6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09ac6ac8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09ac6c50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09ac6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099c6d08" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.PhotoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099c6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099c58b8"/>
        <function-ref name="readDone" scoped="" ref="0x2add099c5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add090d64c0" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add090d64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090d5088"/>
        <function-ref name="readDone" scoped="" ref="0x2add090d54d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x2add090cc020" loc="8:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x2add090cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090ccb68"/>
        <function-ref name="readDone" scoped="" ref="0x2add090cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x2add090d49c0" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x2add090d49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090d4d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090d1020"/>
        <function-ref name="request" scoped="" ref="0x2add090d11a8"/>
        <function-ref name="granted" scoped="" ref="0x2add090d1330"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090d14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x2add090d1d70" loc="6:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2add090d1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090d00f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090d0278"/>
        <function-ref name="request" scoped="" ref="0x2add090d0400"/>
        <function-ref name="granted" scoped="" ref="0x2add090d0588"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090d0710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x2add090ce1c8" loc="7:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x2add090ce1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090ced10"/>
        <function-ref name="readDone" scoped="" ref="0x2add090cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x2add090c7b68" loc="17:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x2add090c7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add090c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2add090c7158" loc="16:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add090c7158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add090c74a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add090c7630"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add090c77b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add090c1398" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add090c1398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add090c1708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090c1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add090bf020" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add090bf390"/>
        <function-ref name="configure" scoped="" ref="0x2add090bf518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add090c1ad8" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090c1ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090c1e28"/>
        <function-ref name="requested" scoped="" ref="0x2add090c0020"/>
        <function-ref name="granted" scoped="" ref="0x2add090c01a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090c0330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add090c8678" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add090c8678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090c89e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090c8b70"/>
        <function-ref name="request" scoped="" ref="0x2add090c8cf8"/>
        <function-ref name="granted" scoped="" ref="0x2add090c8e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090c1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add090c0700" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090c0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add090c0a50"/>
        <function-ref name="userId" scoped="" ref="0x2add090c0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09ab2520" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09ab2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09ab2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09ab2af8" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09ab2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09ab2e48"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09ab1020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09ab11a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09ab1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09aaf9a8" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09aaf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09aafd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09aad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09aac6f8" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09aac6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09aaca68"/>
        <function-ref name="configure" scoped="" ref="0x2add09aacbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09aace78" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09aace78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09aab1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09aab380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09aab508"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09aab690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09aad268" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09aad268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09aad5b8"/>
        <function-ref name="requested" scoped="" ref="0x2add09aad740"/>
        <function-ref name="granted" scoped="" ref="0x2add09aad8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09aada50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09aadbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09aab8d8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09aab8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09aabc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09aabdb0"/>
        <function-ref name="led1On" scoped="" ref="0x2add09aaa020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09aaa1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09aaa330"/>
        <function-ref name="get" scoped="" ref="0x2add09aaa4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09aaa640"/>
        <function-ref name="led0On" scoped="" ref="0x2add09aaac60"/>
        <function-ref name="set" scoped="" ref="0x2add09aaa950"/>
        <function-ref name="led2On" scoped="" ref="0x2add09aaa7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09aaaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09ab0bb8" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09ab0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09aaf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09aaf1a8"/>
        <function-ref name="request" scoped="" ref="0x2add09aaf330"/>
        <function-ref name="granted" scoped="" ref="0x2add09aaf4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09aaf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09aade20" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09aade20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09aac1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add09aac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09aa9020" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09aa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09aa9370"/>
        <function-ref name="runTask" scoped="" ref="0x2add09aa94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add090bb510" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add090bb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add090bb880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090bba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add090b9140" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090b9140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add090b94b0"/>
        <function-ref name="configure" scoped="" ref="0x2add090b9638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add090bbc50" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090bbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090ba020"/>
        <function-ref name="requested" scoped="" ref="0x2add090ba1a8"/>
        <function-ref name="granted" scoped="" ref="0x2add090ba330"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090ba4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add090bd7c0" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add090bd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090bdb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090bdcb8"/>
        <function-ref name="request" scoped="" ref="0x2add090bde40"/>
        <function-ref name="granted" scoped="" ref="0x2add090bb020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add090ba888" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090ba888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add090babd8"/>
        <function-ref name="userId" scoped="" ref="0x2add090bad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09af5408" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09af5408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09af5758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09af59e0" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09af59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09af5d30"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09af3020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09af31a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09af3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09af19a8" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09af19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09af1d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09af0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09aef6f8" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09aef6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09aefa68"/>
        <function-ref name="configure" scoped="" ref="0x2add09aefbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09aefe78" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09aefe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09aee1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09aee380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09aee508"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09aee690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09af0268" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09af0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09af05b8"/>
        <function-ref name="requested" scoped="" ref="0x2add09af0740"/>
        <function-ref name="granted" scoped="" ref="0x2add09af08c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09af0a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09af0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09aee8d8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09aee8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09aeec28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09aeedb0"/>
        <function-ref name="led1On" scoped="" ref="0x2add09aed020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09aed1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09aed330"/>
        <function-ref name="get" scoped="" ref="0x2add09aed4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09aed640"/>
        <function-ref name="led0On" scoped="" ref="0x2add09aedc60"/>
        <function-ref name="set" scoped="" ref="0x2add09aed950"/>
        <function-ref name="led2On" scoped="" ref="0x2add09aed7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09aedad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09af2bb8" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09af2bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09af1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09af11a8"/>
        <function-ref name="request" scoped="" ref="0x2add09af1330"/>
        <function-ref name="granted" scoped="" ref="0x2add09af14b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09af1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09af0e20" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09af0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09aef1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add09aef330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09aec020" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09aec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09aec370"/>
        <function-ref name="runTask" scoped="" ref="0x2add09aec4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add090b6698" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add090b6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add090b6a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add090b33c8" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add090b33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add090b3738"/>
        <function-ref name="configure" scoped="" ref="0x2add090b38c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add090b6dd8" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090b5170"/>
        <function-ref name="requested" scoped="" ref="0x2add090b52f8"/>
        <function-ref name="granted" scoped="" ref="0x2add090b5480"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090b5608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090b5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add090b7910" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add090b7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090b7c80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090b7e08"/>
        <function-ref name="request" scoped="" ref="0x2add090b6020"/>
        <function-ref name="granted" scoped="" ref="0x2add090b61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add090b59d8" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090b59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add090b5d28"/>
        <function-ref name="userId" scoped="" ref="0x2add090b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09b39b20" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09b39b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09b39e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09b38120" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09b38120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09b38470"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09b385f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09b38780"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09b38908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09b36e38" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09b36e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09b351e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09b35370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09b34b08" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09b34b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09b34e78"/>
        <function-ref name="configure" scoped="" ref="0x2add09b32030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09b322b8" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09b322b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09b32608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09b32790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09b32918"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09b32aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09b355b8" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b355b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09b35908"/>
        <function-ref name="requested" scoped="" ref="0x2add09b35a90"/>
        <function-ref name="granted" scoped="" ref="0x2add09b35c18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09b35da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09b34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09b32ce8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09b32ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09b310a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09b31228"/>
        <function-ref name="led1On" scoped="" ref="0x2add09b313b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09b31538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09b316c0"/>
        <function-ref name="get" scoped="" ref="0x2add09b31848"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09b319d0"/>
        <function-ref name="led0On" scoped="" ref="0x2add09b30020"/>
        <function-ref name="set" scoped="" ref="0x2add09b31ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2add09b31b58"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09b31e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09b36140" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09b36140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09b364b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09b36638"/>
        <function-ref name="request" scoped="" ref="0x2add09b367c0"/>
        <function-ref name="granted" scoped="" ref="0x2add09b36948"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09b36ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09b34268" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b34268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09b345b8"/>
        <function-ref name="userId" scoped="" ref="0x2add09b34740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09b302e8" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09b302e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09b30638"/>
        <function-ref name="runTask" scoped="" ref="0x2add09b307c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add090b1380" loc="59:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add090b1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add090b16d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2add090b1858"/>
        <function-ref name="start" scoped="" ref="0x2add090b19e0"/>
        <function-ref name="stop" scoped="" ref="0x2add090b1b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add090b1db0" loc="61:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add090b1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add090b0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add090b03b8" loc="62:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add090b03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090b0708"/>
        <function-ref name="requested" scoped="" ref="0x2add090b0890"/>
        <function-ref name="granted" scoped="" ref="0x2add090b0a18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090b0ba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add090b0d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add090af020" loc="63:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add090af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add090af370"/>
        <function-ref name="userId" scoped="" ref="0x2add090af4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09b7f268" loc="51:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09b7f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09b7f5b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09b7f740"/>
        <function-ref name="start" scoped="" ref="0x2add09b7f8c8"/>
        <function-ref name="stop" scoped="" ref="0x2add09b7fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09b7fc98" loc="53:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09b7fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09b7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2add09b7d5f8" loc="68:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2add09b7d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09b7d948"/>
        <function-ref name="runTask" scoped="" ref="0x2add09b7dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09b7e268" loc="54:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b7e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09b7e5b8"/>
        <function-ref name="requested" scoped="" ref="0x2add09b7e740"/>
        <function-ref name="granted" scoped="" ref="0x2add09b7e8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09b7ea50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09b7ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2add09b7dd98" loc="63:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2add09b7dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09b7b170"/>
        <function-ref name="runTask" scoped="" ref="0x2add09b7b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2add09b80a28" loc="50:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add09b80a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09b80d78"/>
        <function-ref name="stop" scoped="" ref="0x2add09b7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09b7ee20" loc="55:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b7ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09b7d1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add09b7d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09104d80" loc="59:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09104d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09103170"/>
        <function-ref name="stopDone" scoped="" ref="0x2add091032f8"/>
        <function-ref name="start" scoped="" ref="0x2add09103480"/>
        <function-ref name="stop" scoped="" ref="0x2add09103608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09103850" loc="61:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09103850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09103ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09103de8" loc="62:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09103de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09102170"/>
        <function-ref name="requested" scoped="" ref="0x2add091022f8"/>
        <function-ref name="granted" scoped="" ref="0x2add09102480"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09102608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09102790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add091029d8" loc="63:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091029d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09102d28"/>
        <function-ref name="userId" scoped="" ref="0x2add09101020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09b69578" loc="51:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09b69578"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09b698c8"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09b69a50"/>
        <function-ref name="start" scoped="" ref="0x2add09b69bd8"/>
        <function-ref name="stop" scoped="" ref="0x2add09b69d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09b68020" loc="53:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09b68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09b68370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2add09b66a08" loc="68:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2add09b66a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09b66d58"/>
        <function-ref name="runTask" scoped="" ref="0x2add09b65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09b685b8" loc="54:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09b685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09b68908"/>
        <function-ref name="requested" scoped="" ref="0x2add09b68a90"/>
        <function-ref name="granted" scoped="" ref="0x2add09b68c18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09b68da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09b66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2add09b652e8" loc="63:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2add09b652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09b65638"/>
        <function-ref name="runTask" scoped="" ref="0x2add09b657c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2add09b6be28" loc="50:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add09b6be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09b691a8"/>
        <function-ref name="stop" scoped="" ref="0x2add09b69330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09b66268" loc="55:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09b66268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09b665b8"/>
        <function-ref name="userId" scoped="" ref="0x2add09b66740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add090df270" loc="4:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add090df270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add090df5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2add090df748"/>
        <function-ref name="start" scoped="" ref="0x2add090df8d0"/>
        <function-ref name="stop" scoped="" ref="0x2add090dfa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2add090dd638" loc="8:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2add090dd638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add090dd988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add090ddb10"/>
        <function-ref name="request" scoped="" ref="0x2add090ddc98"/>
        <function-ref name="granted" scoped="" ref="0x2add090dde20"/>
        <function-ref name="isOwner" scoped="" ref="0x2add090dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add090de020" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add090de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add090deb88"/>
        <function-ref name="readDone" scoped="" ref="0x2add090dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2add0912bd98" loc="32:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2add0912bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09129170"/>
        <function-ref name="runTask" scoped="" ref="0x2add091292f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2add0912d438" loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2add0912d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0912d788"/>
        <function-ref name="isInput" scoped="" ref="0x2add0912d910"/>
        <function-ref name="toggle" scoped="" ref="0x2add0912da98"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0912dc20"/>
        <function-ref name="get" scoped="" ref="0x2add0912dda8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0912c020"/>
        <function-ref name="set" scoped="" ref="0x2add0912c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2add0912c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2add0912c6c0" loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2add0912c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0912b370"/>
        <function-ref name="readDone" scoped="" ref="0x2add0912b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add090dc370" loc="9:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add090dc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0912e6c8"/>
        <function-ref name="fired" scoped="" ref="0x2add090dbdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add0912fad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add0912f688"/>
        <function-ref name="getdt" scoped="" ref="0x2add0912d020"/>
        <function-ref name="gett0" scoped="" ref="0x2add0912eb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2add0912f238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add090db020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add0912e0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add090db4c0"/>
        <function-ref name="stop" scoped="" ref="0x2add090db960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add09127600" loc="4:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09127600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09127950"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09127ad8"/>
        <function-ref name="start" scoped="" ref="0x2add09127c60"/>
        <function-ref name="stop" scoped="" ref="0x2add09127de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x2add091258f0" loc="8:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x2add091258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09125c40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09125dc8"/>
        <function-ref name="request" scoped="" ref="0x2add09124020"/>
        <function-ref name="granted" scoped="" ref="0x2add091241a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09124330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09126288" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09126288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09126df0"/>
        <function-ref name="readDone" scoped="" ref="0x2add091252d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2add0911ce00" loc="32:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2add0911ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add0911b1a8"/>
        <function-ref name="runTask" scoped="" ref="0x2add0911b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x2add0911f5d8" loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2add0911f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0911f928"/>
        <function-ref name="isInput" scoped="" ref="0x2add0911fab0"/>
        <function-ref name="toggle" scoped="" ref="0x2add0911fc38"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0911fdc0"/>
        <function-ref name="get" scoped="" ref="0x2add0911e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0911e1a8"/>
        <function-ref name="set" scoped="" ref="0x2add0911e330"/>
        <function-ref name="clr" scoped="" ref="0x2add0911e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2add0911e848" loc="11:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2add0911e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0911c3d8"/>
        <function-ref name="readDone" scoped="" ref="0x2add0911c828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add09124680" loc="9:/opt/tinyos-2.1.1/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add09124680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add091208f0"/>
        <function-ref name="fired" scoped="" ref="0x2add09121020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09121d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add091218c0"/>
        <function-ref name="getdt" scoped="" ref="0x2add0911f1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2add09120d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09121470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add091231f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add09120320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add09123698"/>
        <function-ref name="stop" scoped="" ref="0x2add09123b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add091195e8" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add091195e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add091158f0"/>
        <function-ref name="fired" scoped="" ref="0x2add09117020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09117d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add091178c0"/>
        <function-ref name="getdt" scoped="" ref="0x2add091141c0"/>
        <function-ref name="gett0" scoped="" ref="0x2add09115d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09117470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add09118158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add09115320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add091185f8"/>
        <function-ref name="stop" scoped="" ref="0x2add09118a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09111908" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09111908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09111c58"/>
        <function-ref name="configure" scoped="" ref="0x2add09111de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09113aa8" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09113aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09112620"/>
        <function-ref name="readDone" scoped="" ref="0x2add09112a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09111060" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09111060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add091113b0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09111538"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add091116c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09159d58" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09159d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add091588f0"/>
        <function-ref name="readDone" scoped="" ref="0x2add09158d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add091565e8" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add091565e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09155198"/>
        <function-ref name="readDone" scoped="" ref="0x2add09155608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add09155ca0" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09155ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091540a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09154228"/>
        <function-ref name="request" scoped="" ref="0x2add091543b0"/>
        <function-ref name="granted" scoped="" ref="0x2add09154538"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091546c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099c31c8" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/TempC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.TempC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099c31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099c3d10"/>
        <function-ref name="readDone" scoped="" ref="0x2add099c21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add0914c928" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/ArbitratedTempDeviceP.nc">
      <component-ref qname="ArbitratedTempDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add0914c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add091484a8"/>
        <function-ref name="readDone" scoped="" ref="0x2add091488f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09146560" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09146560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add091450f8"/>
        <function-ref name="readDone" scoped="" ref="0x2add09145568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add09145da8" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add09145da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add091439e0"/>
        <function-ref name="readDone" scoped="" ref="0x2add09143e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add09142510" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedTempDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09142510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09142880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09142a08"/>
        <function-ref name="request" scoped="" ref="0x2add09142b90"/>
        <function-ref name="granted" scoped="" ref="0x2add09142d18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099c1618" loc="34:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099c1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099c0198"/>
        <function-ref name="readDone" scoped="" ref="0x2add099c05e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2add099c0b80" loc="35:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MicC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2add099c0b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2add099bf020"/>
        <function-ref name="disable" scoped="" ref="0x2add099bf1a8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2add099bf330"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2add099bf4b8"/>
        <function-ref name="enable" scoped="" ref="0x2add099bf640"/>
        <function-ref name="muxSel" scoped="" ref="0x2add099bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09133cb0" loc="5:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09133cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09130820"/>
        <function-ref name="readDone" scoped="" ref="0x2add09130c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x2add091879f0" loc="9:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicReadP.nc">
      <component-ref qname="MicReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x2add091879f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09186560"/>
        <function-ref name="readDone" scoped="" ref="0x2add091869b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2add0917e128" loc="36:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2add0917e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2add0917e478"/>
        <function-ref name="disable" scoped="" ref="0x2add0917e600"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2add0917e788"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2add0917e910"/>
        <function-ref name="enable" scoped="" ref="0x2add0917ea98"/>
        <function-ref name="muxSel" scoped="" ref="0x2add0917ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2add0917f798" loc="35:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add0917f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0917fae8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0917fc70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0917fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add091809e0" loc="34:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicDeviceP.nc">
      <component-ref qname="MicDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add091809e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09180d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0917f020"/>
        <function-ref name="request" scoped="" ref="0x2add0917f1a8"/>
        <function-ref name="granted" scoped="" ref="0x2add0917f330"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0917f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add0917d758" loc="35:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add0917d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0917daa8"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0917dc30"/>
        <function-ref name="start" scoped="" ref="0x2add0917ddb8"/>
        <function-ref name="stop" scoped="" ref="0x2add0917a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicAtm128AdcConfig" ref="0x2add09179250" loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAtm128AdcConfig" scoped="" ref="0x2add09179250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add091795a0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09179728"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add091798b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicPower" ref="0x2add09174e38" loc="40:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicPower" scoped="" ref="0x2add09174e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add091731c0"/>
        <function-ref name="isInput" scoped="" ref="0x2add09173348"/>
        <function-ref name="toggle" scoped="" ref="0x2add091734d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09173658"/>
        <function-ref name="get" scoped="" ref="0x2add091737e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09173968"/>
        <function-ref name="set" scoped="" ref="0x2add09173af0"/>
        <function-ref name="clr" scoped="" ref="0x2add09173c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicMuxSel" ref="0x2add09171060" loc="41:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicMuxSel" scoped="" ref="0x2add09171060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add091713b0"/>
        <function-ref name="isInput" scoped="" ref="0x2add09171538"/>
        <function-ref name="toggle" scoped="" ref="0x2add091716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09171848"/>
        <function-ref name="get" scoped="" ref="0x2add091719d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09171b58"/>
        <function-ref name="set" scoped="" ref="0x2add09171ce0"/>
        <function-ref name="clr" scoped="" ref="0x2add09171e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MicSetting" ref="0x2add0917a310" loc="36:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicSetting" scoped="" ref="0x2add0917a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicSetting"/>
      </instance>
      <interface-functions>
        <function-ref name="toneDetected" scoped="" ref="0x2add0917a660"/>
        <function-ref name="disable" scoped="" ref="0x2add0917a7e8"/>
        <function-ref name="gainAdjust" scoped="" ref="0x2add0917a970"/>
        <function-ref name="readToneDetector" scoped="" ref="0x2add0917aaf8"/>
        <function-ref name="enable" scoped="" ref="0x2add0917ac80"/>
        <function-ref name="muxSel" scoped="" ref="0x2add0917ae08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2add09161020" loc="44:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2add09161020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09161370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add091614f8"/>
        <function-ref name="request" scoped="" ref="0x2add09161680"/>
        <function-ref name="granted" scoped="" ref="0x2add09161808"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09161990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MicAdc" ref="0x2add09170208" loc="42:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MicAdc" scoped="" ref="0x2add09170208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add09170558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2add09163400" loc="43:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add09163400"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0916f020"/>
        <function-ref name="writeDone" scoped="" ref="0x2add09164388"/>
        <function-ref name="write" scoped="" ref="0x2add0916fba0"/>
        <function-ref name="readDone" scoped="" ref="0x2add0916e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlertInterrupt" ref="0x2add09161da0" loc="45:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlertInterrupt" scoped="" ref="0x2add09161da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2add09160170"/>
        <function-ref name="fired" scoped="" ref="0x2add091602f8"/>
        <function-ref name="disable" scoped="" ref="0x2add09160480"/>
        <function-ref name="edge" scoped="" ref="0x2add09160608"/>
        <function-ref name="enable" scoped="" ref="0x2add09160790"/>
        <function-ref name="getValue" scoped="" ref="0x2add09160918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add09179cb8" loc="39:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicP.nc">
      <component-ref qname="MicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add09179cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add09174088"/>
        <function-ref name="fired" scoped="" ref="0x2add09176650"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09175470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add09175020"/>
        <function-ref name="getdt" scoped="" ref="0x2add09174928"/>
        <function-ref name="gett0" scoped="" ref="0x2add091744d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09176aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add09178838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add09175a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add09178cd8"/>
        <function-ref name="stop" scoped="" ref="0x2add09176200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add091941d0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add091941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09194520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add091946a8"/>
        <function-ref name="request" scoped="" ref="0x2add09194830"/>
        <function-ref name="granted" scoped="" ref="0x2add091949b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09194b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2add092d7020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MicDeviceP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add092d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092d7ba0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add092d3020"/>
        <function-ref name="write" scoped="" ref="0x2add092d6790"/>
        <function-ref name="readDone" scoped="" ref="0x2add092d4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09189d78" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09189d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091de0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add091de278"/>
        <function-ref name="request" scoped="" ref="0x2add091de400"/>
        <function-ref name="granted" scoped="" ref="0x2add091de588"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091de710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2add091dd1c8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add091dd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add091ddd48"/>
        <function-ref name="writeDone" scoped="" ref="0x2add091da0f8"/>
        <function-ref name="write" scoped="" ref="0x2add091dc928"/>
        <function-ref name="readDone" scoped="" ref="0x2add091db530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add091c0d18" loc="82:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add091c0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add091bf0d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add091bf260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add091be960" loc="86:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add091be960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add091becd0"/>
        <function-ref name="configure" scoped="" ref="0x2add091bee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add091bf4a8" loc="83:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add091bf4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091bf7f8"/>
        <function-ref name="requested" scoped="" ref="0x2add091bf980"/>
        <function-ref name="granted" scoped="" ref="0x2add091bfb08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091bfc90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add091bfe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add091c0020" loc="81:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add091c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091c0390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add091c0518"/>
        <function-ref name="request" scoped="" ref="0x2add091c06a0"/>
        <function-ref name="granted" scoped="" ref="0x2add091c0828"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091c09b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add091be0e0" loc="84:/opt/tinyos-2.1.1/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091be0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add091be430"/>
        <function-ref name="userId" scoped="" ref="0x2add091be5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09c0ecf0" loc="34:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09c0ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09c0d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2add09c0d328" loc="35:/opt/tinyos-2.1.1/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2add09c0d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09c0d678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09c0d800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09c0d988"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09c0db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09c09200" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09c09200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09c09570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09c096f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09c08e18" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09c08e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09c071c0"/>
        <function-ref name="configure" scoped="" ref="0x2add09c07348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09c075d0" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09c075d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09c07920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09c07aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09c07c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09c07db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09c09940" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09c09940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09c09c90"/>
        <function-ref name="requested" scoped="" ref="0x2add09c09e18"/>
        <function-ref name="granted" scoped="" ref="0x2add09c08020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09c081a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09c08330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09c06060" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09c06060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09c063b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09c06538"/>
        <function-ref name="led1On" scoped="" ref="0x2add09c066c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09c06848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09c069d0"/>
        <function-ref name="get" scoped="" ref="0x2add09c06b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09c06ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2add09c05330"/>
        <function-ref name="set" scoped="" ref="0x2add09c05020"/>
        <function-ref name="led2On" scoped="" ref="0x2add09c06e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09c051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09c0a4b0" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09c0a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09c0a820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09c0a9a8"/>
        <function-ref name="request" scoped="" ref="0x2add09c0ab30"/>
        <function-ref name="granted" scoped="" ref="0x2add09c0acb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09c0ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09c08578" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09c08578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09c088c8"/>
        <function-ref name="userId" scoped="" ref="0x2add09c08a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09c055f8" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09c055f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09c05948"/>
        <function-ref name="runTask" scoped="" ref="0x2add09c05ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add091ba0e0" loc="52:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add091ba0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add091ba430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add091ba678" loc="53:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add091ba678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091ba9c8"/>
        <function-ref name="requested" scoped="" ref="0x2add091bab50"/>
        <function-ref name="granted" scoped="" ref="0x2add091bacd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091bae60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add091b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2add091bb980" loc="50:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add091bb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add091bbcd0"/>
        <function-ref name="stop" scoped="" ref="0x2add091bbe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add091b9268" loc="54:/opt/tinyos-2.1.1/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add091b9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add091b95b8"/>
        <function-ref name="userId" scoped="" ref="0x2add091b9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2add0922d420" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2add0922d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2add0922d770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2add09232a10" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2add09232a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092315d8"/>
        <function-ref name="writeDone" scoped="" ref="0x2add0922e8e8"/>
        <function-ref name="write" scoped="" ref="0x2add09230190"/>
        <function-ref name="readDone" scoped="" ref="0x2add09230d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add091b6240" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add091b6240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add091b65b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add091b6738"/>
        <function-ref name="request" scoped="" ref="0x2add091b68c0"/>
        <function-ref name="granted" scoped="" ref="0x2add091b6a48"/>
        <function-ref name="isOwner" scoped="" ref="0x2add091b6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2add092370c8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add092370c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09237c68"/>
        <function-ref name="writeDone" scoped="" ref="0x2add09233020"/>
        <function-ref name="write" scoped="" ref="0x2add09236848"/>
        <function-ref name="readDone" scoped="" ref="0x2add09235410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2add09233c70" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2add09233c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09232020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add092321a8"/>
        <function-ref name="request" scoped="" ref="0x2add09232330"/>
        <function-ref name="granted" scoped="" ref="0x2add092324b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09232640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2add0927f318" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2add0927f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2add0927f668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2add0927f930" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2add0927f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2add0927fc80"/>
        <function-ref name="sendCommand" scoped="" ref="0x2add0927fe08"/>
        <function-ref name="setStart" scoped="" ref="0x2add0927e020"/>
        <function-ref name="status" scoped="" ref="0x2add0927e1a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2add0927e330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add0927e4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add0927e640"/>
        <function-ref name="read" scoped="" ref="0x2add0927e7c8"/>
        <function-ref name="init" scoped="" ref="0x2add0927e950"/>
        <function-ref name="enableAck" scoped="" ref="0x2add0927ead8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add0927ec60"/>
        <function-ref name="hasStart" scoped="" ref="0x2add0927ede8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add0927d020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2add0927d2a8"/>
        <function-ref name="enable" scoped="" ref="0x2add0927d430"/>
        <function-ref name="write" scoped="" ref="0x2add0927d5b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2add0927d740"/>
        <function-ref name="off" scoped="" ref="0x2add0927d8c8"/>
        <function-ref name="setStop" scoped="" ref="0x2add0927da50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2add0927dbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add0927dd60"/>
        <function-ref name="hasStop" scoped="" ref="0x2add0927c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2add0927c2e8" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2add0927c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add0927c638"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add0927c7c0"/>
        <function-ref name="led1On" scoped="" ref="0x2add0927c948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add0927cad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add0927cc58"/>
        <function-ref name="get" scoped="" ref="0x2add0927cde0"/>
        <function-ref name="led1Off" scoped="" ref="0x2add0927b020"/>
        <function-ref name="led2On" scoped="" ref="0x2add0927b640"/>
        <function-ref name="set" scoped="" ref="0x2add0927b330"/>
        <function-ref name="led2Off" scoped="" ref="0x2add0927b1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2add0927b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2add0927b908" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2add0927b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add0927bc58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add0927bde0"/>
        <function-ref name="led1On" scoped="" ref="0x2add0927a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add0927a1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add0927a330"/>
        <function-ref name="get" scoped="" ref="0x2add0927a4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add0927a640"/>
        <function-ref name="led2On" scoped="" ref="0x2add0927ac60"/>
        <function-ref name="set" scoped="" ref="0x2add0927a950"/>
        <function-ref name="led2Off" scoped="" ref="0x2add0927a7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2add0927aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2add0922ae60" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2add0922ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add092841e8"/>
        <function-ref name="stop" scoped="" ref="0x2add09284370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2add09284700" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add09284700"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092833a8"/>
        <function-ref name="writeDone" scoped="" ref="0x2add09280790"/>
        <function-ref name="write" scoped="" ref="0x2add09282020"/>
        <function-ref name="readDone" scoped="" ref="0x2add09282ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2add09277828" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2add09277828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2add09277b78"/>
        <function-ref name="sendCommand" scoped="" ref="0x2add09277d00"/>
        <function-ref name="setStart" scoped="" ref="0x2add09274020"/>
        <function-ref name="status" scoped="" ref="0x2add092741a8"/>
        <function-ref name="hasAcks" scoped="" ref="0x2add09274330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add092744b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add09274640"/>
        <function-ref name="read" scoped="" ref="0x2add092747c8"/>
        <function-ref name="init" scoped="" ref="0x2add09274950"/>
        <function-ref name="enableAck" scoped="" ref="0x2add09274ad8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add09274c60"/>
        <function-ref name="hasStart" scoped="" ref="0x2add09274de8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add09273020"/>
        <function-ref name="commandComplete" scoped="" ref="0x2add092732a8"/>
        <function-ref name="enable" scoped="" ref="0x2add09273430"/>
        <function-ref name="write" scoped="" ref="0x2add092735b8"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2add09273740"/>
        <function-ref name="off" scoped="" ref="0x2add092738c8"/>
        <function-ref name="setStop" scoped="" ref="0x2add09273a50"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2add09273bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add09273d60"/>
        <function-ref name="hasStop" scoped="" ref="0x2add09272020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2add0926f1d8" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2add0926f1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2add0926f528"/>
        <function-ref name="sendCommand" scoped="" ref="0x2add0926f6b0"/>
        <function-ref name="setStart" scoped="" ref="0x2add0926f838"/>
        <function-ref name="status" scoped="" ref="0x2add0926f9c0"/>
        <function-ref name="hasAcks" scoped="" ref="0x2add0926fb48"/>
        <function-ref name="isEnabled" scoped="" ref="0x2add0926fcd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2add0926fe58"/>
        <function-ref name="read" scoped="" ref="0x2add0926e020"/>
        <function-ref name="init" scoped="" ref="0x2add0926e1a8"/>
        <function-ref name="enableAck" scoped="" ref="0x2add0926e330"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2add0926e4b8"/>
        <function-ref name="hasStart" scoped="" ref="0x2add0926e640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2add0926e7c8"/>
        <function-ref name="commandComplete" scoped="" ref="0x2add0926ea50"/>
        <function-ref name="enable" scoped="" ref="0x2add0926ebd8"/>
        <function-ref name="write" scoped="" ref="0x2add0926ed60"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2add0926d020"/>
        <function-ref name="off" scoped="" ref="0x2add0926d1a8"/>
        <function-ref name="setStop" scoped="" ref="0x2add0926d330"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2add0926d4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2add0926d640"/>
        <function-ref name="hasStop" scoped="" ref="0x2add0926d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2add0926db50" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2add0926db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0926c020"/>
        <function-ref name="isInput" scoped="" ref="0x2add0926c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2add0926c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0926c4b8"/>
        <function-ref name="get" scoped="" ref="0x2add0926c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0926c7c8"/>
        <function-ref name="set" scoped="" ref="0x2add0926c950"/>
        <function-ref name="clr" scoped="" ref="0x2add0926cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2add0926ce08" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2add0926ce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add0926b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2add0926b330"/>
        <function-ref name="toggle" scoped="" ref="0x2add0926b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2add0926b640"/>
        <function-ref name="get" scoped="" ref="0x2add0926b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add0926b950"/>
        <function-ref name="set" scoped="" ref="0x2add0926bad8"/>
        <function-ref name="clr" scoped="" ref="0x2add0926bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add092f2d08" loc="35:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add092f2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add092ef0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2add092ef358" loc="36:/opt/tinyos-2.1.1/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add092ef358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add092ef6a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add092ef830"/>
        <function-ref name="led1On" scoped="" ref="0x2add092ef9b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add092efb40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add092efcc8"/>
        <function-ref name="get" scoped="" ref="0x2add092efe50"/>
        <function-ref name="led1Off" scoped="" ref="0x2add092ee020"/>
        <function-ref name="led2Off" scoped="" ref="0x2add092ee640"/>
        <function-ref name="set" scoped="" ref="0x2add092ee1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2add092ee330"/>
        <function-ref name="led2On" scoped="" ref="0x2add092ee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add092d1020" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="MicDeviceP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add092d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add092cd2b8"/>
        <function-ref name="fired" scoped="" ref="0x2add092d0978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add092ce6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add092ce278"/>
        <function-ref name="getdt" scoped="" ref="0x2add092cdb58"/>
        <function-ref name="gett0" scoped="" ref="0x2add092cd708"/>
        <function-ref name="isRunning" scoped="" ref="0x2add092d0dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add092d1b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add092cec98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add092d0088"/>
        <function-ref name="stop" scoped="" ref="0x2add092d0528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add092caaf8" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add092caaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add092cae68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add092c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add092c76d8" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add092c76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add092c7a48"/>
        <function-ref name="configure" scoped="" ref="0x2add092c7bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add092c9268" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add092c9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add092c95b8"/>
        <function-ref name="requested" scoped="" ref="0x2add092c9740"/>
        <function-ref name="granted" scoped="" ref="0x2add092c98c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add092c9a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add092c9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add092cbd88" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add092cbd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add092ca170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add092ca2f8"/>
        <function-ref name="request" scoped="" ref="0x2add092ca480"/>
        <function-ref name="granted" scoped="" ref="0x2add092ca608"/>
        <function-ref name="isOwner" scoped="" ref="0x2add092ca790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add092c9e20" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MicDeviceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add092c9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add092c71a8"/>
        <function-ref name="userId" scoped="" ref="0x2add092c7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09c94628" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09c94628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09c94978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09c94c00" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MicDeviceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09c94c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09c93020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09c931a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09c93330"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09c934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09c90a28" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09c90a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09c90d98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09c8e6f8" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09c8e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09c8ea68"/>
        <function-ref name="configure" scoped="" ref="0x2add09c8ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09c8ee78" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09c8ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09c8d1f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09c8d380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09c8d508"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09c8d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09c8f268" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09c8f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09c8f5b8"/>
        <function-ref name="requested" scoped="" ref="0x2add09c8f740"/>
        <function-ref name="granted" scoped="" ref="0x2add09c8f8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09c8fa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09c8fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09c8d8d8" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09c8d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09c8dc28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09c8ddb0"/>
        <function-ref name="led1On" scoped="" ref="0x2add09c8c020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09c8c1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09c8c330"/>
        <function-ref name="get" scoped="" ref="0x2add09c8c4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09c8c640"/>
        <function-ref name="led0On" scoped="" ref="0x2add09c8cc60"/>
        <function-ref name="set" scoped="" ref="0x2add09c8c950"/>
        <function-ref name="led2On" scoped="" ref="0x2add09c8c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09c8cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09c92cc8" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09c92cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09c900a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09c90228"/>
        <function-ref name="request" scoped="" ref="0x2add09c903b0"/>
        <function-ref name="granted" scoped="" ref="0x2add09c90538"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09c906c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09c8fe20" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09c8fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09c8e1a8"/>
        <function-ref name="userId" scoped="" ref="0x2add09c8e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09c8b020" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MicDeviceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09c8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09c8b370"/>
        <function-ref name="runTask" scoped="" ref="0x2add09c8b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add093236d8" loc="59:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add093236d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09323a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09323bb0"/>
        <function-ref name="start" scoped="" ref="0x2add09323d38"/>
        <function-ref name="stop" scoped="" ref="0x2add09322020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09322268" loc="61:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09322268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add093225b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09322800" loc="62:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09322800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09322b50"/>
        <function-ref name="requested" scoped="" ref="0x2add09322cd8"/>
        <function-ref name="granted" scoped="" ref="0x2add09322e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09321020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add093211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add093213f0" loc="63:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MicDeviceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09321740"/>
        <function-ref name="userId" scoped="" ref="0x2add093218c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09ce0d58" loc="51:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09ce0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09cdf0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09cdf260"/>
        <function-ref name="start" scoped="" ref="0x2add09cdf3e8"/>
        <function-ref name="stop" scoped="" ref="0x2add09cdf570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09cdf7b8" loc="53:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09cdf7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09cdfb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2add09cdc120" loc="68:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2add09cdc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09cdc470"/>
        <function-ref name="runTask" scoped="" ref="0x2add09cdc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09cdfd50" loc="54:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09cdfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09cdd0d8"/>
        <function-ref name="requested" scoped="" ref="0x2add09cdd260"/>
        <function-ref name="granted" scoped="" ref="0x2add09cdd3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09cdd570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09cdd6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2add09cdc8c0" loc="63:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2add09cdc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09cdcc10"/>
        <function-ref name="runTask" scoped="" ref="0x2add09cdcd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2add09ce0638" loc="50:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add09ce0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09ce0988"/>
        <function-ref name="stop" scoped="" ref="0x2add09ce0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09cdd940" loc="55:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MicDeviceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09cdd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09cddc90"/>
        <function-ref name="userId" scoped="" ref="0x2add09cdde18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09317288" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09317288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09317df0"/>
        <function-ref name="readDone" scoped="" ref="0x2add093162d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add09316b18" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add09316b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add093156f0"/>
        <function-ref name="readDone" scoped="" ref="0x2add09315b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add09313240" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MicReadP.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09313240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add093135b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09313738"/>
        <function-ref name="request" scoped="" ref="0x2add093138c0"/>
        <function-ref name="granted" scoped="" ref="0x2add09313a48"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09313bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09ba0e80" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09ba0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09b9f1f8"/>
        <function-ref name="configure" scoped="" ref="0x2add09b9f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09ba1020" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09ba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09ba1b68"/>
        <function-ref name="readDone" scoped="" ref="0x2add09ba0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09ba05d8" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MicC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09ba05d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09ba0928"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09ba0ab0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09ba0c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099bd6c0" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099bd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099bb370"/>
        <function-ref name="readDone" scoped="" ref="0x2add099bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x2add099beac0" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagXC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagXC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x2add099beac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x2add099bee10"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x2add099bd020"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x2add099bd1a8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x2add099bd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x2add092f5020" loc="44:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x2add092f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092f5b68"/>
        <function-ref name="readDone" scoped="" ref="0x2add09353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x2add092fc690" loc="38:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x2add092fc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092fb370"/>
        <function-ref name="readDone" scoped="" ref="0x2add092fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x2add092fa4c0" loc="39:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x2add092fa4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092f9088"/>
        <function-ref name="readDone" scoped="" ref="0x2add092f94d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x2add092ff4d8" loc="37:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x2add092ff4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x2add092ff828"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x2add092ff9b0"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x2add092ffb38"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x2add092ffcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x2add092f7270" loc="43:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x2add092f7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add092f7db8"/>
        <function-ref name="readDone" scoped="" ref="0x2add092f6238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2add0934d698" loc="25:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2add0934d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0934d9e8"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0934db70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0934dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2add0934eb48" loc="24:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2add0934eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add0934d020"/>
        <function-ref name="getChannel" scoped="" ref="0x2add0934d1a8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add0934d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0934fe38" loc="23:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0934fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0934e1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0934e348"/>
        <function-ref name="request" scoped="" ref="0x2add0934e4d0"/>
        <function-ref name="granted" scoped="" ref="0x2add0934e658"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0934e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x2add09353e70" loc="22:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x2add09353e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x2add0934f1e8"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x2add0934f370"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x2add0934f4f8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x2add0934f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2add0934c8a0" loc="7:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add0934c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add0934cbf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2add0934cd78"/>
        <function-ref name="start" scoped="" ref="0x2add09349020"/>
        <function-ref name="stop" scoped="" ref="0x2add093491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x2add09348a28" loc="10:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x2add09348a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09348d78"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09347020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add093471a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagPower" ref="0x2add093426d0" loc="13:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagPower" scoped="" ref="0x2add093426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2add09342a20"/>
        <function-ref name="isInput" scoped="" ref="0x2add09342ba8"/>
        <function-ref name="toggle" scoped="" ref="0x2add09342d30"/>
        <function-ref name="isOutput" scoped="" ref="0x2add09341020"/>
        <function-ref name="get" scoped="" ref="0x2add093411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2add09341330"/>
        <function-ref name="set" scoped="" ref="0x2add093414b8"/>
        <function-ref name="clr" scoped="" ref="0x2add09341640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcX" ref="0x2add093419b8" loc="14:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcX" scoped="" ref="0x2add093419b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add09341d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcY" ref="0x2add093400a8" loc="15:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcY" scoped="" ref="0x2add093400a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2add093403f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x2add09348020" loc="9:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x2add09348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09348370"/>
        <function-ref name="getChannel" scoped="" ref="0x2add093484f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09348680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2add0933b420" loc="17:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2add0933b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0933b770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0933b8f8"/>
        <function-ref name="request" scoped="" ref="0x2add0933ba80"/>
        <function-ref name="granted" scoped="" ref="0x2add0933bc08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0933bd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2add09340870" loc="16:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add09340870"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add0933f490"/>
        <function-ref name="writeDone" scoped="" ref="0x2add0933c7c8"/>
        <function-ref name="write" scoped="" ref="0x2add0933d088"/>
        <function-ref name="readDone" scoped="" ref="0x2add0933dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x2add09349450" loc="8:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x2add09349450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x2add093497a0"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x2add09349928"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x2add09349ab0"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x2add09349c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2add093475b0" loc="12:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add093475b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add093438f0"/>
        <function-ref name="fired" scoped="" ref="0x2add09344020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add09344d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add093448c0"/>
        <function-ref name="getdt" scoped="" ref="0x2add093421c0"/>
        <function-ref name="gett0" scoped="" ref="0x2add09343d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2add09344470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add09346158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add09343320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add093465f8"/>
        <function-ref name="stop" scoped="" ref="0x2add09346a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09378020" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09378020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09378370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add093784f8"/>
        <function-ref name="request" scoped="" ref="0x2add09378680"/>
        <function-ref name="granted" scoped="" ref="0x2add09378808"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09378990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2add09378d20" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2add09378d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2add09184d48"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2add09181020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add093778f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2add09375c08"/>
        <function-ref name="write" scoped="" ref="0x2add093764c8"/>
        <function-ref name="readDone" scoped="" ref="0x2add09375088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2add09372c18" loc="37:/opt/tinyos-2.1.1/tos/system/TimerMilliC.nc">
      <component-ref qname="MagConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2add09372c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2add07e61a30"/>
            <typename><typedef-ref name="TMilli" ref="0x2add07e61d88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2add0936fe78"/>
        <function-ref name="fired" scoped="" ref="0x2add093705a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2add0936f2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2add09370e48"/>
        <function-ref name="getdt" scoped="" ref="0x2add0936e748"/>
        <function-ref name="gett0" scoped="" ref="0x2add0936e2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2add093709f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2add093717e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2add0936f8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2add09371c88"/>
        <function-ref name="stop" scoped="" ref="0x2add09370158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add0936a698" loc="82:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add0936a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add0936aa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add0936ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add093683c8" loc="86:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add093683c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09368738"/>
        <function-ref name="configure" scoped="" ref="0x2add093688c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add0936add8" loc="83:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add0936add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09369170"/>
        <function-ref name="requested" scoped="" ref="0x2add093692f8"/>
        <function-ref name="granted" scoped="" ref="0x2add09369480"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09369608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09369790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add0936b840" loc="81:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add0936b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add0936bbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add0936bd38"/>
        <function-ref name="request" scoped="" ref="0x2add0936a020"/>
        <function-ref name="granted" scoped="" ref="0x2add0936a1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add0936a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add093699d8" loc="84:/opt/tinyos-2.1.1/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add093699d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09369d28"/>
        <function-ref name="userId" scoped="" ref="0x2add09368020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2add09ca8cc0" loc="34:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2add09ca8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2add09ca70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2add09ca7328" loc="35:/opt/tinyos-2.1.1/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2add09ca7328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09ca7678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09ca7800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09ca7988"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09ca7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2add09d4a200" loc="55:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2add09d4a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2add09d4a570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09d4a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09d49e18" loc="60:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09d49e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09d481c0"/>
        <function-ref name="configure" scoped="" ref="0x2add09d48348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2add09d485d0" loc="61:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2add09d485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2add09d48920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2add09d48aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2add09d48c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2add09d48db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2add09d4a940" loc="56:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09d4a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09d4ac90"/>
        <function-ref name="requested" scoped="" ref="0x2add09d4ae18"/>
        <function-ref name="granted" scoped="" ref="0x2add09d49020"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09d491a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09d49330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2add09d47060" loc="62:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2add09d47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2add09d473b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2add09d47538"/>
        <function-ref name="led1On" scoped="" ref="0x2add09d476c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2add09d47848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2add09d479d0"/>
        <function-ref name="get" scoped="" ref="0x2add09d47b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2add09d47ce0"/>
        <function-ref name="led0On" scoped="" ref="0x2add09d46330"/>
        <function-ref name="set" scoped="" ref="0x2add09d46020"/>
        <function-ref name="led2On" scoped="" ref="0x2add09d47e68"/>
        <function-ref name="led2Off" scoped="" ref="0x2add09d461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2add09d4c4b0" loc="54:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09d4c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09d4c820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add09d4c9a8"/>
        <function-ref name="request" scoped="" ref="0x2add09d4cb30"/>
        <function-ref name="granted" scoped="" ref="0x2add09d4ccb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09d4ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2add09d49578" loc="57:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09d49578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09d498c8"/>
        <function-ref name="userId" scoped="" ref="0x2add09d49a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2add09d465f8" loc="75:/opt/tinyos-2.1.1/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2add09d465f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09d46948"/>
        <function-ref name="runTask" scoped="" ref="0x2add09d46ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09366380" loc="59:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09366380"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add093666d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09366858"/>
        <function-ref name="start" scoped="" ref="0x2add093669e0"/>
        <function-ref name="stop" scoped="" ref="0x2add09366b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09366db0" loc="61:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09366db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09364170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add093643b8" loc="62:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add093643b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09364708"/>
        <function-ref name="requested" scoped="" ref="0x2add09364890"/>
        <function-ref name="granted" scoped="" ref="0x2add09364a18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09364ba0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09364d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09363020" loc="63:/opt/tinyos-2.1.1/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09363370"/>
        <function-ref name="userId" scoped="" ref="0x2add093634f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2add09d155c8" loc="51:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2add09d155c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2add09d15918"/>
        <function-ref name="stopDone" scoped="" ref="0x2add09d15aa0"/>
        <function-ref name="start" scoped="" ref="0x2add09d15c28"/>
        <function-ref name="stop" scoped="" ref="0x2add09d15db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2add09d14020" loc="53:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2add09d14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2add09d14370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2add09d12a08" loc="68:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2add09d12a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09d12d58"/>
        <function-ref name="runTask" scoped="" ref="0x2add09d11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2add09d145b8" loc="54:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2add09d145b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09d14908"/>
        <function-ref name="requested" scoped="" ref="0x2add09d14a90"/>
        <function-ref name="granted" scoped="" ref="0x2add09d14c18"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09d14da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2add09d12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2add09d112e8" loc="63:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2add09d112e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2add09d11638"/>
        <function-ref name="runTask" scoped="" ref="0x2add09d117c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2add09d17e80" loc="50:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2add09d17e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2add09d151f8"/>
        <function-ref name="stop" scoped="" ref="0x2add09d15380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2add09d12268" loc="55:/opt/tinyos-2.1.1/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2add09d12268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2add09d125b8"/>
        <function-ref name="userId" scoped="" ref="0x2add09d12740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add0935b3b0" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add0935b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09359020"/>
        <function-ref name="readDone" scoped="" ref="0x2add09359490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add09359cd0" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add09359cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add093588b8"/>
        <function-ref name="readDone" scoped="" ref="0x2add09358d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add09356400" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add09356400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add09356770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add093568f8"/>
        <function-ref name="request" scoped="" ref="0x2add09356a80"/>
        <function-ref name="granted" scoped="" ref="0x2add09356c08"/>
        <function-ref name="isOwner" scoped="" ref="0x2add09356d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add093549d8" loc="24:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add093549d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add093b3578"/>
        <function-ref name="readDone" scoped="" ref="0x2add093b39e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2add093b2288" loc="26:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2add093b2288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add093b2df0"/>
        <function-ref name="readDone" scoped="" ref="0x2add093b02d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2add093b0970" loc="27:/opt/tinyos-2.1.1/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2add093b0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2add093b0ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2add093b0e68"/>
        <function-ref name="request" scoped="" ref="0x2add093af020"/>
        <function-ref name="granted" scoped="" ref="0x2add093af1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2add093af330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09cba268" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09cba268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09cba5b8"/>
        <function-ref name="configure" scoped="" ref="0x2add09cba740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09cbc2d8" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09cbc2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09cbce20"/>
        <function-ref name="readDone" scoped="" ref="0x2add09cbb2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09cbb890" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagXC.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09cbb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09cbbbe0"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09cbbd68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09cba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add099b9998" loc="19:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add099b9998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add099b8528"/>
        <function-ref name="readDone" scoped="" ref="0x2add099b8978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x2add099bada8" loc="18:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagYC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x2add099bada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x2add099b9170"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x2add099b92f8"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x2add099b9480"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x2add099b9608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2add09d709e8" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2add09d709e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2add09d70d38"/>
        <function-ref name="configure" scoped="" ref="0x2add09d6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2add09d72b18" loc="22:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2add09d72b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2add09d716f0"/>
        <function-ref name="readDone" scoped="" ref="0x2add09d71b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2add09d70140" loc="24:/opt/tinyos-2.1.1/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SendingAppC.SensorMts300C.MagYC.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2add09d70140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2add09d70490"/>
        <function-ref name="getChannel" scoped="" ref="0x2add09d70618"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2add09d707a0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2add07edfbf0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2add07ee07e8" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2add07ef0408" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2add07ef0198" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2add07ee7b98" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2add07ee45b8" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2add07ee4348" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2add07ef10a8" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2add07ee4dd0" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2add07ef18f0" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2add07ef9ab0" loc="33:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2add07f051d8" loc="34:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2add07efad20" loc="31:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2add07f04020" loc="36:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2add07ef9400" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2add07f05890" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add07efa020" loc="29:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2add07efa690" loc="30:/opt/tinyos-2.1.1/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2add07dc2840" loc="46:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2add07dcd7c0" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2add07dcd020" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2add07dd9290" loc="56:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2add07dd9a80" loc="64:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2add07ea0ca0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2add07ec4d60" loc="54:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2add07e40780"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2add07ebce60" loc="44:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add080a4678" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add080a4678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2add08111020" loc="125:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2add08116b40" loc="72:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2add081137c8" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2add08113230" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2add08113548" loc="103:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2add08115ac0" loc="87:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2add08110020" loc="140:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2add08111740" loc="133:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2add08115328" loc="81:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2add08117290" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2add08117020" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2add081126b8" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2add08112120" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2add08112438" loc="118:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2add08117cd0" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2add08117a60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add081164a0" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2add08121dc0" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2add08121b50" loc="92:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2add0811e290" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2add0811e020" loc="117:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2add081211d8" loc="83:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add0811f620" loc="109:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2add080f0d88" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2add080f0488" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2add080f07e8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add080f0af8" loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2add081002d8" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08101be8" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add08100020" loc="124:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2add081013e0" loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add080ee108" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add080efe50" loc="85:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2add080ed5c8" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add080ed020" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2add080ed348" loc="99:/opt/tinyos-2.1.1/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2add08123e48" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08123bd8" loc="54:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2add0811ce20" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0811cbb0" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2add0812e020" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08130a08" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add08130d18" loc="115:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2add08130178" loc="95:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2add081192a0" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0811bc48" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add08119020" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2add0812c308" loc="49:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add0812c308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2add0812cb40" loc="55:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2add0812b800" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add0812c308"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2add0812b280" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2add0812b580" loc="63:/opt/tinyos-2.1.1/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add0812c308"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.1/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2add080968f0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2add08095070" loc="56:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2add080957e0" loc="61:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2add080aa758" loc="72:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2add080a8e70" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2add080a7630" loc="106:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2add080aa020" loc="66:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add080a6290" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2add080a6020" loc="123:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2add080961d8" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2add080a8020" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2add080a8738" loc="83:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2add081083b0" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add08108140" loc="166:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2add080fb370" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add080fb100" loc="77:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2add080ff8c0" loc="57:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2add080fc370" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add080fc100" loc="67:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2add080f8ad8" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add080f8520" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2add080f8858" loc="110:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2add080fa6b8" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add080fa100" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2add080fa438" loc="92:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2add0810a020" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add0810bcf8" loc="136:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2add081092a0" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add0810ace8" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2add08109020" loc="151:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2add080ec970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2add0810cc90" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add0810ca20" loc="125:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2add081067b8" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2add08106208" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2add08106538" loc="176:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2add08105560" loc="184:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.1/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2add0816d6d8" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0816d468" loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2add08184818" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081845a8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2add081818c8" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08181658" loc="74:/opt/tinyos-2.1.1/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2add0818b690" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0818b100" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add0818b410" loc="64:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2add08186a68" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081864a0" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add081867b0" loc="114:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2add08187c70" loc="101:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add08189908" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08189698" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2add08188cf8" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08188750" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2add08188a78" loc="89:/opt/tinyos-2.1.1/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2add08202160" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
              <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081ec808" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2add081ecb30" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add081ece40" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2add081fb020" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add081fb020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2add081fb250" loc="24:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add081fb250"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2add081f9020" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add081fb250"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081fad60" loc="52:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2add081f8108" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081f9e38" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2add081fbd70" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081fbb00" loc="38:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add08210348" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add081fb250"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add081f8d30" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2add082100c8" loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add081fb250"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2add08205d88" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add082057a0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2add08205b08" loc="65:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2add0821e020" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0821fc48" loc="71:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2add08205020" loc="57:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2add082075c0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2add08207350" loc="52:/opt/tinyos-2.1.1/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2add0823f6d0" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0823f460" loc="95:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2add08226ad8" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08226868" loc="81:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2add08227338" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2add082270c8" loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2add0822a818" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2add0822a5a8" loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2add08227cf0" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2add08227a80" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2add08225910" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add082256a0" loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2add082349b8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2add082343d8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2add08234738" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2add08231020" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08232a18" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2add08232d40" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2add0822ecf0" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add0822e720" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2add0822ea70" loc="77:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2add08231a80" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2add07588160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08231810" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2add0822e030" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08230d90" loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2add08232290" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08232020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2add08230550" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add082302e0" loc="72:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2add08238520" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add082382b0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2add0823c7e0" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0823c1f8" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2add0823c560" loc="46:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2add082395b8" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08239348" loc="59:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2add0823ab00" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0823a518" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2add0823a880" loc="53:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2add08236468" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add082361f8" loc="71:/opt/tinyos-2.1.1/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2add0822b8a0" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0822b630" loc="47:/opt/tinyos-2.1.1/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2add08247328" loc="110:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2add082483e0" loc="87:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2add0824ba90" loc="78:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2add08248b68" loc="92:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2add08247d10" loc="118:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.1/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2add08277050" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08278a88" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2add08278da0" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add08275258" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2add082738d8" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2add08274ae0" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2add08273338" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add08273648" loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2add08274348" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2add08275d30" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2add082740c8" loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2add08277a60" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2add082777f0" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2add0826fa28" loc="41:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2add0826f290" loc="35:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2add0825e7d0" loc="74:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add0825d020" loc="84:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x2add08286020" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2add080a2648"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2add080b5020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add0826bc38" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2add08284308" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2add080b5ac0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2add080b32d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08284020" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2add082637e8" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2add08260778" loc="97:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2add08260020" loc="90:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2add08264020" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2add08263020" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2add08262020" loc="76:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2add082627d0" loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2add08264818" loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2add0827f3a0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2add08282b48" loc="56:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2add08281c20" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2add082819b0" loc="66:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2add08281290" loc="61:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2add08283940" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2add082836d0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2add082823d0" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2add08282160" loc="51:/opt/tinyos-2.1.1/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2add082d9a20" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2add082d9468" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2add082d97a0" loc="99:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2add082db528" loc="86:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2add082dcc18" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2add082dc5d8" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2add082dc998" loc="80:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2add082c3bf8" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2add082c3988" loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2add082dbd30" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2add082ded50" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2add082deae0" loc="65:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2add082c2c48" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2add082c29d8" loc="59:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2add082d8be0" loc="110:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2add082dddf8" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2add082ddb88" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2add082d8328" loc="105:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2add082de3e0" loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2add082c3258" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2add082c2328" loc="58:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2add082dd4d8" loc="70:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2add08309778" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08309508" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add08307290" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08307020" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add082e7430" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add082e7430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2add082e7660" loc="45:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2add082e2020" loc="98:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2add082e51d8" loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2add082e36c0" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2add082e3120" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          </variable>
          <variable name="dt" ref="0x2add082e3440" loc="92:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2add082e5948" loc="77:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2add082e27a0" loc="105:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2add082e6290" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2add082e6020" loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add082e7660"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add082e6a60" loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2add082f2020" loc="50:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2add082f2e70" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2add082f2780" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2add082f3730" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2add082f3178" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2add080ecd20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2add082f34b0" loc="45:/opt/tinyos-2.1.1/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2add080ea128"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2add08302020" loc="45:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2add0830c5e0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2add082ef6b0" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add0830c020" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add0830c350" loc="52:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add0830bc60" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2add0830ce30" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add0830b6a0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add0830b9d0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2add082f5770" loc="57:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2add082f5020" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2add082f6868" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2add082f6020" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2add083baa38" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e9b928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2add07e9bd30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2add083bc5a8" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e86478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2add07e86880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2add083bc338" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e86478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2add07e86880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2add083bb7d0" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e91578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2add07e91980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2add0839d178" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e81da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2add07e80228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2add083ba290" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e91578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2add07e91980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2add083ba020" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e91578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2add07e91980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2add083b8478" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e9b928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2add07e9bd30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2add083b8208" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e9b928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2add07e9bd30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2add083bd178" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e8f890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2add07e8fc98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2add0839d978" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e86478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2add07e86880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2add083bdb70" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e81da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2add07e80228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2add083bd900" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e81da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2add07e80228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2add083bb020" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e8f890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2add07e8fc98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2add083bcd08" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e8f890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2add07e8fc98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2add083b61d0" loc="31:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2add083b1ba0" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2add083b1930" loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2add083b2a88" loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2add083b6a88" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2add083b5dc8" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2add083b5b58" loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2add083b4560" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2add083b1258" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add083b5420" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2add083b51b0" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083b61d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2add083b4c58" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add083b2378" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2add083aec78" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083aec78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2add083c93e0" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2add083cb760" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2add083cd568" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083aec78"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2add083cbe68" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2add083c9b30" loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add083cb020" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083aec78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2add083cdc40" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add083aec78"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2add083ca590" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add083cac78" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2add083acb50" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add083acb50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2add083a4020" loc="89:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2add083a6178" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2add083a9438" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add083acb50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2add083a4970" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2add083a4700" loc="95:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2add083a3178" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2add083a8c00" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2add083a84e0" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2add083a68d0" loc="84:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add083a9d70" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add083acb50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2add083a9b00" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2add083acb50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2add083a7328" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add083a7a10" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2add083dc020" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e6fb60"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2add07e6d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2add083da360" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e7a100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2add07e7a508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2add083db1d8" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e73980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2add07e73d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2add083dbb90" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e73980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2add07e73d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2add083db920" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e73980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2add07e73d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2add083dad18" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e7a100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2add07e7a508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2add083daaa8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e7a100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2add07e7a508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2add083dc9f0" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e6fb60"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2add07e6d020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2add083dc780" loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e6fb60"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2add07e6d020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2add083d1518" loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2add083d1cd8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2add083d2dd8" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2add083d04b0" loc="50:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2add083d5c18" loc="21:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e751b0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2add07e755b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2add083d2608" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e751b0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2add07e755b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2add083d2398" loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2add07e751b0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2add07e755b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add085293f8" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add085293f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2add08529628" loc="46:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add08529628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2add08550020" loc="53:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2add08529628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2add0854e070" loc="65:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2add08550838" loc="60:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2add0854e760" loc="71:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2add085cb2a8" loc="43:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2add085f4360" loc="55:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2add085cbbd0" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2add085cb960" loc="50:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2add085cea90" loc="42:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2add085fe070" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2add085fda48" loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2add085ff950" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2add085fd290" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2add085fd020" loc="59:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2add085ff258" loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2add085fe7b0" loc="52:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2add0860c4e0" loc="41:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.1/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2add086a18e8" loc="24:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2add0869f110" loc="31:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2add0869f8e0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2add086af998" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add086af3e8" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add086af718" loc="62:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2add086aa948" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add086aa060" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add086aa390" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2add086aa6b8" loc="91:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add086ab348" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add086acd20" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add086ab0c8" loc="82:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2add086b0678" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2add0809a8f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add086b00c8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add086b03f8" loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2add086ac030" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add086ad720" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2add086ada50" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2add086add78" loc="71:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2add086bd2b0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2add086bf840" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2add086bfba0" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add086bd020" loc="59:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2add086bc648" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2add086bb9b0" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2add086bbd10" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2add086bc060" loc="71:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2add086bc3a8" loc="72:/opt/tinyos-2.1.1/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2add086c0108" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2add086c3e68" loc="34:/opt/tinyos-2.1.1/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2add0874ee78" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add0874ec08" loc="46:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2add08749290" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08749020" loc="58:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2add0874a6a8" loc="52:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add08749c98" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08749a28" loc="65:/opt/tinyos-2.1.1/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2add08765020" loc="69:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2add0878ca60" loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2add08760538" loc="100:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2add0878a458" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2add0878a1e8" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2add08766880" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2add0878d108" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2add0875ee18" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2add08762d50" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2add08762ae0" loc="96:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2add08763020" loc="80:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2add08787b98" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2add08787928" loc="125:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2add087614d0" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2add087894b0" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2add08789240" loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2add08788360" loc="120:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2add0878c338" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2add0878c0c8" loc="108:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2add08787258" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2add0875e020" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2add08760c18" loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add08763978" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08763708" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2add08761de0" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2add08761b70" loc="99:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2add0878d918" loc="106:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2add0878ab60" loc="112:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2add08789ba0" loc="115:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2add08788aa8" loc="122:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2add0875e738" loc="103:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2add08765738" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2add08762338" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add087620c8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2add087839f0" loc="80:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2add08780258" loc="88:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.1/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2add087ee748" loc="74:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2add087ed020" loc="84:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.1/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2add088347d0" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2add088330d8" loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2add08830020" loc="55:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2add088316f8" loc="49:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2add08828c80" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2add0882d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2add08828a10" loc="69:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2add0882d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2add0882ce10" loc="43:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2add088298f0" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2add0882d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2add08829680" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2add0882d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2add088281d8" loc="60:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.1/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2add0882d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2add08935450" loc="43:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2add08999e40" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2add089994f0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2add08999bc0" loc="63:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2add0899ad70" loc="55:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2add0899a600" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2add0899a390" loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2add08976608" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08976398" loc="47:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2add089776e0" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add08977470" loc="39:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add08973468" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add089731f8" loc="61:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2add08974520" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2add089742b0" loc="54:/opt/tinyos-2.1.1/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2add080f3780"/>
                <typename><typedef-ref name="message_t" ref="0x2add080f2cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2add08ada020" loc="42:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2add08ada020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2add08ada8b0" loc="50:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2add0758adb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.1/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2add08c77680" loc="42:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2add08c77680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2add08c73290" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2add08c77680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2add08c73020" loc="53:/opt/tinyos-2.1.1/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2add08c77680"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x2add08e47378" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x2add08e47108" loc="3:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2add08e5faf0" loc="20:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.1/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2add08e7e258" loc="32:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2add08e81a30" loc="25:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2add08e7ea38" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2add08e78a20" loc="52:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add08e78a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2add08e75328" loc="58:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2add08e74020" loc="66:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add08e78a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2add08e75a70" loc="66:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2add08e75d70" loc="66:/opt/tinyos-2.1.1/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2add08e78a20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2add08ebd768" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2add08ebea60" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2add08ebedb8" loc="91:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2add08ebd178" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2add08ebd4c8" loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2add08eba3f0" loc="110:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08ebb368" loc="110:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2add08ebb688" loc="110:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2add08ebb9c0" loc="110:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2add08ebbd70" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2add08eba140" loc="111:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2add08ec1440" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2add08ec2738" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2add08ec2a90" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2add08ec2df8" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2add08ec11a0" loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add08ec0c80" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2add08ec0408" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08ec1e48" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2add08ec0188" loc="72:/opt/tinyos-2.1.1/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2add08eab868" loc="105:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2add08eb59e8" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e5eab0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2add07e5d020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2add08ea8a88" loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2add08ea8818" loc="131:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2add08eaa0d8" loc="113:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2add08eaf548" loc="73:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2add08eb13e8" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e5eab0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2add07e5d020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2add08eb1178" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e5eab0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2add07e5d020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2add08eae3a0" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2add08ea8020" loc="124:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2add08ea7258" loc="141:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2add08eafc38" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2add08eac258" loc="90:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2add08eaeae8" loc="86:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2add08eac980" loc="97:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2add08eaa838" loc="118:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2add08eb0608" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e63668"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2add07e63d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2add08eb0398" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e63668"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2add07e63d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2add08eab178" loc="101:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2add08eb1bc0" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2add07e63668"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2add07e63d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2add08eb0da8" loc="66:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2add08ea7d68" loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add08ea7af8" loc="147:/opt/tinyos-2.1.1/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2add08f1e890" loc="56:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2add08f1c8a0" loc="73:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2add08f1e070" loc="46:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2add08f1c0d8" loc="65:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2add08f1b1d8" loc="81:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.1/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2add08f9a020" loc="52:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.1.1/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicSetting" loc="58:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
      <documentation loc="54:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function event="" provided="0" name="toneDetected" ref="0x2add091343e0" loc="88:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2add09135558" loc="75:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjust" ref="0x2add09136708" loc="66:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2add09136498" loc="66:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readToneDetector" ref="0x2add09136e30" loc="71:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2add09135c50" loc="80:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="muxSel" ref="0x2add0913ada8" loc="62:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
        <interfacedef-ref qname="MicSetting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sel" ref="0x2add0913ab38" loc="62:/opt/tinyos-2.1.1/tos/sensorboards/mts300/MicSetting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.1/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x2add09170ce0" loc="48:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2add09170ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2add0916c2c0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2add091813d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2add0916d5d0" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2add091813d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2add0916d900" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2add0916dc30" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add0916c020" loc="65:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2add091677c0" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2add09166b28" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2add09166e58" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2add091671c8" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add09167520" loc="101:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add09169020" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2add091813d8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2add0916b370" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2add091813d8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2add0916b6a0" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2add0916b9d0" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add0916bd28" loc="81:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2add09168c78" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2add09168020" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2add09168350" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2add0758a378"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2add09168680" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2add091689d8" loc="91:/opt/tinyos-2.1.1/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2add09203960" loc="46:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2add0921f1d8" loc="47:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2add0921f898" loc="48:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2add0921d908" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2add0921d698" loc="53:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2add09220ab8" loc="45:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2add09219020" loc="58:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2add09216aa8" loc="77:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2add09219950" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2add092196e0" loc="60:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2add09213258" loc="82:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2add09223d48" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2add09223ad8" loc="42:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2add0921b918" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2add0921b6a8" loc="57:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2add092181d8" loc="61:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2add0921c020" loc="54:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2add09217110" loc="68:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2add0921d020" loc="49:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2add092163c8" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2add09216158" loc="76:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2add09214b50" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2add092148e0" loc="81:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2add09218978" loc="65:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2add092203e0" loc="43:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2add0921c8d8" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2add0921c668" loc="55:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2add09217ac0" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2add09217850" loc="74:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2add09214258" loc="78:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2add0921b020" loc="56:/opt/tinyos-2.1.1/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mag" loc="51:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
      <documentation loc="47:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function command="" provided="0" name="gainAdjustY" ref="0x2add09304a48" loc="60:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2add093047d8" loc="60:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustYDone" ref="0x2add09302d50" loc="70:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2add09302ae0" loc="70:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustXDone" ref="0x2add093023f0" loc="65:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2add09302180" loc="65:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2add07dc87f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjustX" ref="0x2add09304118" loc="55:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2add07dd3e58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2add09309e80" loc="55:/opt/tinyos-2.1.1/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2add07588910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
